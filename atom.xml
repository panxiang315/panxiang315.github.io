<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pan&#39;s record</title>
  
  <subtitle>background of my life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://panxiang315.github.io/"/>
  <updated>2018-07-10T03:02:23.382Z</updated>
  <id>https://panxiang315.github.io/</id>
  
  <author>
    <name>Pan Xiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端知识系统图</title>
    <link href="https://panxiang315.github.io/programme/front-end/front-end/"/>
    <id>https://panxiang315.github.io/programme/front-end/front-end/</id>
    <published>2018-07-10T02:41:47.000Z</published>
    <updated>2018-07-10T03:02:23.382Z</updated>
    
    <content type="html"><![CDATA[<p>Web开发中的分工：<br>1.产品经理——调研、功能设计、原型<br>2.设计师——设计图<br>3.前端开发——制作<br>4.后台——功能<br>5.测试、运维</p><a id="more"></a><hr><p>如下图</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Web开发中的分工：&lt;br&gt;1.产品经理——调研、功能设计、原型&lt;br&gt;2.设计师——设计图&lt;br&gt;3.前端开发——制作&lt;br&gt;4.后台——功能&lt;br&gt;5.测试、运维&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="front-end" scheme="https://panxiang315.github.io/categories/programme/front-end/"/>
    
    
      <category term="系统" scheme="https://panxiang315.github.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>愤怒与恐惧</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/fear-anger/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/fear-anger/</id>
    <published>2018-07-03T11:33:54.000Z</published>
    <updated>2018-07-03T11:59:58.746Z</updated>
    
    <content type="html"><![CDATA[<p>就好像愉悦与难受是一对感觉，满足就愉悦，得不到满足就难受。愤怒和恐惧也是同生的一对感觉，都是来<br>自于被侵犯。但是因为个体不同，对侵犯者的体量判断不同。所以，有时是愤怒，有时是恐惧。</p><a id="more"></a><hr><h1 id="什么是愤怒"><a href="#什么是愤怒" class="headerlink" title="什么是愤怒"></a>什么是愤怒</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;就好像愉悦与难受是一对感觉，满足就愉悦，得不到满足就难受。愤怒和恐惧也是同生的一对感觉，都是来&lt;br&gt;自于被侵犯。但是因为个体不同，对侵犯者的体量判断不同。所以，有时是愤怒，有时是恐惧。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="边界" scheme="https://panxiang315.github.io/tags/%E8%BE%B9%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>json基础学习</title>
    <link href="https://panxiang315.github.io/programme/JavaScript/json-learning/"/>
    <id>https://panxiang315.github.io/programme/JavaScript/json-learning/</id>
    <published>2018-07-02T02:27:51.000Z</published>
    <updated>2018-07-03T04:37:16.839Z</updated>
    
    <content type="html"><![CDATA[<p>JSON(JavaScript Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。它基于 ECMAScript (欧洲计算机协会制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</p><a id="more"></a><hr><p><a href="http://www.php.cn/course/73.html" target="_blank" rel="noopener">慕课网学习材料</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>JSON使用Javascript语法来描述数据对象，但是JSON仍然独立于语言和平台。JSON解析器和JSON库支持许多不同的编程语言。目前非常多的动态（PHP，JSP，.NET）编程语言都支持JSON。</p><blockquote><p> JSON是轻量级的文本数据交换格式<br> JSON独立于语言<br> JSON具有自我描述性，更易理解<br> JSON文件的文件类型是 “.json”<br> JSON文本的MIME类型是”application/json”</p></blockquote><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>JSON语法是JavaScript对象表示法语法的子集。</p><blockquote><p> 数据在名称/值对中<br> 数据由逗号分隔<br> 花括号保存对象<br> 方括号保存数组</p></blockquote><p>JSON数据的书写格式是：名称/值对。名称/值对包括字段名称（在双引号中），后面写一个冒号，然后是值：<br>“firstName” : “John”</p><p>这句话等效于JavaScript 语句：<br>firstName = “John”</p><p>JSON 值可以是：</p><blockquote><p> 数字（整数或浮点数）<br> 字符串（在双引号中）<br> 逻辑值（true或false）<br> 数组（在方括号中）<br> 对象（在花括号中）<br> null</p></blockquote><h1 id="生成对象"><a href="#生成对象" class="headerlink" title="生成对象"></a>生成对象</h1><p>JSON文本格式在语法上与创建JavaScript对象的代码相同。由于这种相似性，无需解析器，JavaScript程序能够使用内建的eval()函数，用JSON数据来生成原生的JavaScript对象。<br>JSON 对象在花括号中书写，对象可以包含多个名称/值对：<br>{ “firstName”:”John” , “lastName”:”Doe” }<br>上句与以下JavaScript语句等价：<br>firstName = “John”<br>lastName = “Doe”</p><p>因为JSON使用JavaScript语法，所以无需额外的软件就能处理JavaScript中的JSON。JSON数组在方括号中书写,数组可包含多个对象：<br>var employees = [<br>{ “firstName”:”John” , “lastName”:”Doe” },<br>{ “firstName”:”Anna” , “lastName”:”Smith” },<br>{ “firstName”:”Peter” , “lastName”: “Jones” }<br>];<br>可以通过employees[0].lastName;获得数据<br>可以通过employees[0].firstName = “Jonatan”;设置数据</p><p><strong>示例</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>生成json对象<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">Name: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"jname"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">Age: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"jage"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">Address: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"jstreet"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">Phone: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"jphone"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> JSONObject= &#123;</span></span><br><span class="line"><span class="actionscript"><span class="string">"name"</span>:<span class="string">"John Johnson"</span>,</span></span><br><span class="line"><span class="actionscript"><span class="string">"street"</span>:<span class="string">"Oslo West 555"</span>, </span></span><br><span class="line"><span class="actionscript"><span class="string">"age"</span>:<span class="number">33</span>,</span></span><br><span class="line"><span class="actionscript"><span class="string">"phone"</span>:<span class="string">"555 1234567"</span>&#125;;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"jname"</span>).innerHTML=JSONObject.name </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"jage"</span>).innerHTML=JSONObject.age </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"jstreet"</span>).innerHTML=JSONObject.street </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"jphone"</span>).innerHTML=JSONObject.phone </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="与XML对比"><a href="#与XML对比" class="headerlink" title="与XML对比"></a>与XML对比</h1><p><strong>相同</strong></p><blockquote><p> JSON是纯文本<br> JSON具有”自我描述性”（人类可读）<br> JSON具有层级结构（值中存在值）<br> JSON可通过JavaScript进行解析<br> JSON数据可使用 AJAX进行传输</p></blockquote><p><strong>不同</strong></p><blockquote><p> 没有结束标签<br> 更短<br> 读写的速度更快<br> 能够使用内建的JavaScript eval()方法进行解析<br> 使用数组<br> 不使用保留字</p></blockquote><p>对于 AJAX 应用程序来说，JSON 比 XML 更快更易使用：</p><blockquote><p> 使用XML</p><ul><li>读取XML文档</li><li>使用 XML DOM来循环遍历文档</li><li>读取值并存储在变量中</li></ul></blockquote><blockquote><p> 使用JSON</p><ul><li>读取JSON字符串</li><li>用 eval()处理JSON字符串</li></ul></blockquote><h1 id="JSON-文本转换为-JavaScript-对象"><a href="#JSON-文本转换为-JavaScript-对象" class="headerlink" title="JSON 文本转换为 JavaScript 对象"></a>JSON 文本转换为 JavaScript 对象</h1><p>JSON 最常见的用法之一，是从 web 服务器上读取 JSON 数据（作为文件或作为 HttpRequest），将 JSON 数据转换为 JavaScript 对象，然后在网页中使用该数据。</p><p>创建包含 JSON 语法的 JavaScript 字符串：</p><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var txt = <span class="string">'&#123; "</span>employees<span class="string">" : ['</span> +</span><br><span class="line"><span class="string">'&#123; "</span>firstName<span class="string">":"</span>John<span class="string">" , "</span>lastName<span class="string">":"</span>Doe<span class="string">" &#125;,'</span> +</span><br><span class="line"><span class="string">'&#123; "</span>firstName<span class="string">":"</span>Anna<span class="string">" , "</span>lastName<span class="string">":"</span>Smith<span class="string">" &#125;,'</span> +</span><br><span class="line"><span class="string">'&#123; "</span>firstName<span class="string">":"</span>Peter<span class="string">" , "</span>lastName<span class="string">":"</span>Jones<span class="string">" &#125; ]&#125;'</span>;</span><br></pre></td></tr></table></figure><p>通过obj = JSON.parse(txt);可以将其转为对象。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Create Object from JSON String<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">First Name: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"fname"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span> </span><br><span class="line">Last Name: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"lname"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> txt = <span class="string">'&#123;"employees":['</span> +</span></span><br><span class="line"><span class="actionscript"><span class="string">'&#123;"firstName":"John","lastName":"Doe" &#125;,'</span> +</span></span><br><span class="line"><span class="actionscript"><span class="string">'&#123;"firstName":"Anna","lastName":"Smith" &#125;,'</span> +</span></span><br><span class="line"><span class="actionscript"><span class="string">'&#123;"firstName":"Peter","lastName":"Jones" &#125;]&#125;'</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">obj = <span class="built_in">JSON</span>.parse(txt);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"fname"</span>).innerHTML=obj.employees[<span class="number">1</span>].firstName </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"lname"</span>).innerHTML=obj.employees[<span class="number">1</span>].lastName </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JSON(JavaScript Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。它基于 ECMAScript (欧洲计算机协会制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="JavaScript" scheme="https://panxiang315.github.io/categories/programme/JavaScript/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="json" scheme="https://panxiang315.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础学习</title>
    <link href="https://panxiang315.github.io/programme/PHP/PHP-learning/"/>
    <id>https://panxiang315.github.io/programme/PHP/PHP-learning/</id>
    <published>2018-06-29T15:27:13.000Z</published>
    <updated>2018-07-02T02:26:50.120Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Ajax连接服务器后，可通过PHP连接数据库。<br>放弃PHP连接数据库了，转JDBC，后期需要PHP再学</p><a id="more"></a><hr><p><a href="https://blog.csdn.net/whd526/article/details/53263181" target="_blank" rel="noopener">php表单提交时获取不到post数据的解决方法</a></p><p>放弃PHP连接数据库了，转JDBC，后期需要PHP在学</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用Ajax连接服务器后，可通过PHP连接数据库。&lt;br&gt;放弃PHP连接数据库了，转JDBC，后期需要PHP再学&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="PHP" scheme="https://panxiang315.github.io/categories/programme/PHP/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="PHP" scheme="https://panxiang315.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>服务器相关知识</title>
    <link href="https://panxiang315.github.io/programme/PHP/server-learning/"/>
    <id>https://panxiang315.github.io/programme/PHP/server-learning/</id>
    <published>2018-06-29T11:03:30.000Z</published>
    <updated>2018-06-29T15:17:54.268Z</updated>
    
    <content type="html"><![CDATA[<p>前端和数据库之间需要有服务器接收请求及相应请求</p><a id="more"></a><hr><p><a href="https://blog.csdn.net/u012842205/article/details/52086030" target="_blank" rel="noopener">Apache与Tomcat关系</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端和数据库之间需要有服务器接收请求及相应请求&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="PHP" scheme="https://panxiang315.github.io/categories/programme/PHP/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="server" scheme="https://panxiang315.github.io/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>Vue基础学习</title>
    <link href="https://panxiang315.github.io/programme/Vue/Vue-learning/"/>
    <id>https://panxiang315.github.io/programme/Vue/Vue-learning/</id>
    <published>2018-06-28T07:02:10.000Z</published>
    <updated>2018-07-02T03:43:23.387Z</updated>
    
    <content type="html"><![CDATA[<p>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><blockquote><p> <a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue.js官方介绍</a><br> <a href="https://www.w3cschool.cn/aekdgs/ihbtdcqm.html" target="_blank" rel="noopener">w3c介绍</a></p></blockquote><a id="more"></a><hr><p><a href="https://www.imooc.com/learn/694" target="_blank" rel="noopener">vue.js基础入门-慕课网</a></p><p><a href="https://www.imooc.com/learn/980" target="_blank" rel="noopener">vue2.5-慕课网</a></p><p><a href="https://blog.csdn.net/u012907049/article/details/70237457" target="_blank" rel="noopener">Vue2.0+ElementUI+PageHelper实现的表格分页</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; &lt;a href=&quot;https://cn.vuejs.org/v2/guide/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue.js官方介绍&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.w3cschool.cn/aekdgs/ihbtdcqm.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;w3c介绍&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="Vue" scheme="https://panxiang315.github.io/categories/programme/Vue/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="Vue" scheme="https://panxiang315.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>jQuery基础学习</title>
    <link href="https://panxiang315.github.io/programme/jQuery/jQuery-learning/"/>
    <id>https://panxiang315.github.io/programme/jQuery/jQuery-learning/</id>
    <published>2018-06-28T00:50:26.000Z</published>
    <updated>2018-07-02T03:03:25.002Z</updated>
    
    <content type="html"><![CDATA[<p>jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。</p><a id="more"></a><hr><p>参考文献<br><a href="http://www.w3school.com.cn/jquery/" target="_blank" rel="noopener">jQuery 教程-w3c</a><br><a href="https://www.runoob.com/jquery/jquery-tutorial.html" target="_blank" rel="noopener">jQuery 教程-菜鸟</a><br><a href="http://jquery.cuishifeng.cn/index.html" target="_blank" rel="noopener">jQuery API</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>jQuery库包含功能：</p><blockquote><p> HTML元素选取 元素操作 事件函数 DOM遍历和修改<br> CSS操作<br> JavaScript特效和动画<br> Ajax<br> 其他工具</p></blockquote><p>引入jQuery<br>网页中添加jQuery</p><blockquote><p> 从jquery.com下载jQuery库<br> 从CDN中载入jQuery，如从Google中加载jQuery</p></blockquote><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>基础语法：$(selector).action()<br>通过美元符号定义jQuery ；选择符selector查询和查找HTML元素；action()执行对元素的操作<br>如： $(“p”).hide() 隐藏所有段落 </p><h1 id="选择器和事件"><a href="#选择器和事件" class="headerlink" title="选择器和事件"></a>选择器和事件</h1><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>$(“button”).click(function(){<br>    $(“p”).text(“p元素被修改了”);   //元素选择器<br>    $(“#pid”).text(“pid被修改了”);  //ID选择器<br>    $(“.pclass”).text(“pclass被修改了”);  //class选择器<br>});</p><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>常用事件</p><p>.click() 单击事件<br>.dblclick() 双击事件<br>.mouseenter()  鼠标进入<br>.mouseleave()  鼠标离开</p><p>绑定事件及解除绑定</p><p>.bind() 绑定：把元素的事件和方法绑定在一起，同一个事件可以绑定多个方法<br>. unbind() 解除绑定<br>$(“#clickMeBtn”).unbind(“click”,clickHandle1)解除方法clickHandle1<br>$(“#clickMeBtn”).unbind(“click”)解除click事件对应所有方法</p><p>1.7版本后，直接用.on()和.off()替代了bind和unbind</p><p>阻止冒泡事件</p><p>如果给内外侧元素都绑定了事件方法，那么会出现事件冒泡的现象</p><p><body><div></div><body><br>$(“body”).bind(“click”,bodyHandler);<br>$(“div”).bind(“click”,divHandler);<br>点击div则会触发body的事件<br>event.stopPropagation()阻止父级冒泡<br>event.stoplmmediatePropagation()阻止所有冒泡，这个时候就只会触发一次</body></body></p><p>自定义事件</p><p>可以通过var e = jQuery.Event(“myEvent”);来自定义一个事件myEvent</p><h1 id="HTML操作"><a href="#HTML操作" class="headerlink" title="HTML操作"></a>HTML操作</h1><h2 id="HTML捕获"><a href="#HTML捕获" class="headerlink" title="HTML捕获"></a>HTML捕获</h2><p></p><p id="text">this is me</p><br>$(“#text”).text() 获取内容<br>$(“#text”).html() 可以获取所有元素内容<br>比如<p>里头有<a>，则.html()可以显示出<a></a></a></p><p><input type="text" id="it" value="haha"><br>$(“#it”).val() 就可以获得到输入框的内容</p><p><a id="aid" hrer="baidu.com">百度</a><br>$(“#aid”).attr(“href”) 可以获得到属性中的任意内容，这里获得的是链接位置</p><h2 id="HTML设置"><a href="#HTML设置" class="headerlink" title="HTML设置"></a>HTML设置</h2><p></p><p id="text">this is me</p><br>$(“#text”).text(“this is you”) 修改内容<br>$(“#text”).html(“<a>this is</a>“) 可以修改成包含元素的内容<p></p><p><input type="text" id="it" value="haha"><br>$(“#it”).val(“mie”) 就可以修改输入框的内容<br><a id="aid" hrer="baidu.com">先是百度</a><br>$(“#aid”).attr(“href”,”google.com”) 可以修改属性对应的内容，这里修改的是链接位置<br>修改多个则.arrt({“a1”:”value1”,”a2”:”value2”}); 用大括号括起来之后用逗号隔开</p><h2 id="HTML添加"><a href="#HTML添加" class="headerlink" title="HTML添加"></a>HTML添加</h2><p></p><p id="text">this is me</p><br>$(“#text”).append(“haha”); 在选中元素结尾增加内容<br>$(“#text”).prepend(“haha”); 在选中元素开头增加内容<br>after 在选中元素结尾增加内容，与append相比会换行添加<br>before 在选中元素开头增加内容，与prepend相比会换行添加<p></p><p>$(“#text”).append(txt1,txt2,txt3); 也可以添加新的元素<br>var txt1 = “<a>haha</a>“;  用HTML定义新元素<br>var txt2 = $(“<a></a>“).text(“haha”); 用jQuery定义新元素<br>var txt3 = document.createElement(“a”); txt3.innerHTML=”haha”; 用DOM定义新元素</p><h2 id="HTML删除元素"><a href="#HTML删除元素" class="headerlink" title="HTML删除元素"></a>HTML删除元素</h2><p>删除方法： remove empty</p><p></p><p id="text">this is me</p><br>$(“#text”).remove(); 移除选中元素<br>empty()是清空元素内的内容，但是元素还在<p></p><h1 id="jQuery效果"><a href="#jQuery效果" class="headerlink" title="jQuery效果"></a>jQuery效果</h1><h2 id="隐藏与显示"><a href="#隐藏与显示" class="headerlink" title="隐藏与显示"></a>隐藏与显示</h2><p></p><p id="text">this is me</p><br>$(“#text”).hide(1000); 慢慢隐藏选中元素，1000ms<br>$(“#text”).show(1000); 慢慢显示 选中元素，1000ms<br>$(“#text”).toggle(1000); 慢慢显示/隐藏 选中元素，1000ms<br>$(“#text”).hide(1000,function(){$(this).remove();}); 慢慢隐藏选中元素，1000ms<p></p><h2 id="淡入淡出"><a href="#淡入淡出" class="headerlink" title="淡入淡出"></a>淡入淡出</h2><p><div id="div1" height:80px;="" width:80px;="" color:red="" display:none;=""></div> //初始为未显示状态<br>$(“#div1”).fadeIn(1000); //淡入，时长1秒<br>$(“#div1”).fadeOut(1000); //淡出，时长1秒<br>$(“#div1”).fadeToggle(1000); //单开关执行淡入淡出<br>$(“#div1”).fadeTo(1000,0.3); //淡化到百分比</p><h2 id="滑动"><a href="#滑动" class="headerlink" title="滑动"></a>滑动</h2><p></p><p id="text" display:none;="">this is me</p> //初始为未显示状态<br>$(“#text”).slideDown(1000); //向下滑入<br>$(“#text”).slideUp(1000); //向上滑出<br>$(“#text”).slideToggle(1000); //可滑入滑出<p></p><h2 id="回调"><a href="#回调" class="headerlink" title="回调"></a>回调</h2><p></p><p id="text">this is me</p><br>$(“#text”).hide(1000,function(){alert(“回调”);}); 动作结束后可以继续有动作<p></p><h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><h2 id="异步访问"><a href="#异步访问" class="headerlink" title="异步访问"></a>异步访问</h2><h2 id="加载片段"><a href="#加载片段" class="headerlink" title="加载片段"></a>加载片段</h2><h1 id="扩展与noConflict"><a href="#扩展与noConflict" class="headerlink" title="扩展与noConflict"></a>扩展与noConflict</h1><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>可以用js文件去调用别的js文件来实现扩展，被调用的js要先声明<br>方法1： $.function()  这个function()是被调用js中的方法<br>方法2： $.fn.function() 这个function()是被调用js中的方法<br>  如：$(“#text”).function();</p><h2 id="noConflict"><a href="#noConflict" class="headerlink" title="noConflict"></a>noConflict</h2><p>jQuery中，$符号就是jQuery的简写，如果使用到了别的框架，也使用到了$符号，就会发生冲突。这个时候就要取消jQuery的简写了。<br>取消$代表jQuery：$.noConflict();<br>这个时候，就要用jQuery(“#aid”)了<br>也可以var myjq = $.noConflict();</p><h1 id="jQuery-CSS方法"><a href="#jQuery-CSS方法" class="headerlink" title="jQuery CSS方法"></a>jQuery CSS方法</h1><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>$(“div”).css(“width”,”100px”); 设置css样式<br>如果要改的比较多的话，建议使用以下<br>$(“div”).css({<br>    width:”100px”,<br>    height:”100px”,<br>    backgroundColor:”#00FF00”<br>    }); </p><p>$(“div”).addClass(“mycss”); 添加css类型<br>$(“div”).removeClass(“mycss”); 删除css类型<br>$(“div”).toggleClass(“mycss”); 开/关css类型</p><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>$(“div”).height(); 获取高度<br>$(“div”).innerHeight(); 获取高度,包括padding<br>$(“div”).outerHeight(); 获取高度,包括border<br>$(“div”).outerHeight(true); 获取高度,包括margin</p><h1 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h1><h2 id="向下遍历"><a href="#向下遍历" class="headerlink" title="向下遍历"></a>向下遍历</h2><p>包括这几种方法：children() find()</p><p><div id="div1"><br>    <div id="div2"><br>        <p><br>            <a>hello</a><br>        </p><br>    </div><br></div><br>$(“#div1”).children(“#div2”).css(“width”,”100px”);<br>这句可以找到<div2>，children只能找到它的一级子元素，找不到<p><br>$(“#div1”).find(“p”).css(“width”,”100px”);<br>这句可以找到，find能找到它的所有子元素</p><h2 id="向上遍历"><a href="#向上遍历" class="headerlink" title="向上遍历"></a>向上遍历</h2><p>包括这几种方法：parent() parents()  parentUntil()</p><p>$(“a”).parent().css(“width”,”100px”);<br>这句可以改a的一级父类元素，本例就是</p><p><br>$(“a”).parents().css(“width”,”100px”);<br>这句可以改a的所有父类元素，本例就是</p><p> <div2> <div1><br>$(“a”).parentUntil(“#div1”).css(“width”,”100px”);<br>这句可以改从a到div1中间的所有父类元素，本例是<p> <div2></div2></p><h1 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h1><h2 id="垂直菜单"><a href="#垂直菜单" class="headerlink" title="垂直菜单"></a>垂直菜单</h2><h2 id="水平菜单"><a href="#水平菜单" class="headerlink" title="水平菜单"></a>水平菜单</h2></div1></div2></p></div2></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="jQuery" scheme="https://panxiang315.github.io/categories/programme/jQuery/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="jQuery" scheme="https://panxiang315.github.io/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Ajax基础学习</title>
    <link href="https://panxiang315.github.io/programme/JavaScript/ajax-learning/"/>
    <id>https://panxiang315.github.io/programme/JavaScript/ajax-learning/</id>
    <published>2018-06-27T11:49:11.000Z</published>
    <updated>2018-07-02T03:01:03.339Z</updated>
    
    <content type="html"><![CDATA[<p>Ajax(Asynchronous JavaScript and XML) 异步JavaScript和XML，Ajax实际上是下面这几种技术的融合：</p><blockquote><p> XHTML和CSS的基于标准的表示技术<br> DOM进行动态显示和交互<br> XML和XSLT进行数据交换和处理<br> XMLHttpRequest进行异步数据检索<br> Javascript将以上技术融合在一起</p></blockquote><p>客户端与服务器，可以在<strong>不必刷新整个浏览器</strong>的情况下，与服务器进行异步通讯的技术</p><a id="more"></a><hr><p>参考文献<br><a href="https://blog.csdn.net/Java_3y/article/details/79323650" target="_blank" rel="noopener">AJAX入门这一篇就够了</a><br><a href="https://blog.csdn.net/y75475/article/details/70921279" target="_blank" rel="noopener">ajax入门 不要畏惧</a><br><a href="http://www.w3school.com.cn/ajax/ajax_database.asp" target="_blank" rel="noopener">AJAX 数据库实例</a><br><a href="http://www.runoob.com/php/php-ajax-database.html" target="_blank" rel="noopener">PHP - AJAX 与 MySQL</a><br><a href="http://www.runoob.com/ajax/ajax-database.html" target="_blank" rel="noopener">AJAX Database 实例</a><br><a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143450046645491e306a4f74746daaef4d172f66335b5000" target="_blank" rel="noopener">AJAX-廖雪峰</a><br><a href="https://www.cnblogs.com/xs-yqz/p/5115031.html" target="_blank" rel="noopener">以Ajax的方式访问数据库</a><br><a href="https://www.cnblogs.com/linguanh/p/4126461.html" target="_blank" rel="noopener">如何用 ajax 连接mysql数据库</a><br><a href="http://www.w3school.com.cn/php/php_ajax_database.asp" target="_blank" rel="noopener">PHP 和 AJAX MySQL 数据库实例</a></p><p><a href="http://www.php.cn/code/18533.html" target="_blank" rel="noopener">php ajax快速入门视频教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ajax(Asynchronous JavaScript and XML) 异步JavaScript和XML，Ajax实际上是下面这几种技术的融合：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; XHTML和CSS的基于标准的表示技术&lt;br&gt; DOM进行动态显示和交互&lt;br&gt; XML和XSLT进行数据交换和处理&lt;br&gt; XMLHttpRequest进行异步数据检索&lt;br&gt; Javascript将以上技术融合在一起&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;客户端与服务器，可以在&lt;strong&gt;不必刷新整个浏览器&lt;/strong&gt;的情况下，与服务器进行异步通讯的技术&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="JavaScript" scheme="https://panxiang315.github.io/categories/programme/JavaScript/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="Ajax" scheme="https://panxiang315.github.io/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>JS基础学习</title>
    <link href="https://panxiang315.github.io/programme/JavaScript/JS-learning/"/>
    <id>https://panxiang315.github.io/programme/JavaScript/JS-learning/</id>
    <published>2018-06-26T07:11:07.000Z</published>
    <updated>2018-07-02T03:00:58.551Z</updated>
    
    <content type="html"><![CDATA[<p>对于前端开发而言，JavaScript是必不可少的一部分。</p><blockquote><p>脚本语言，是一种轻量级的编程语言<br>可插入HTML页面的编程代码<br>插入HTML页面后，可由所有的浏览器执行</p></blockquote><a id="more"></a><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>HTML中的脚本必须位于<script></script>标签之间，可以在header中，也可以在body中。通常放在header中，以不干扰页面内容。<br>不限制使用JS脚本数量，可以使用多个。</p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><p>大小写敏感<br>按脚本顺序执行<br>尾部用；隔开<br>忽略空格<br>注释： 跟java一样 // /**/</p><h1 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h1><p>var x =10; //变量可以带美元符号$</p><p>数据类型<br>字符串 String   var str = “hello”;<br>数字 Number  var i = 10;<br>布尔 Boolean  var flag = true;<br>数组 Array  var arr= new Array(); arr[0]=1;<br>对象 Object<br>空 null<br>未定义 var r;<br>可以通过赋值为null的方式清除变量 i = null;</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>算数运算符 + - * / % ++ –<br>赋值运算符 = += -=<br>字符串操作<br>比较运算符 == === != &gt; &lt;     “10”==10 true “10”===10 false<br>逻辑运算符 &amp;&amp; || !<br>条件运算符 x&lt;10? “x小于10”:”x大于10”</p><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><p>if else<br>switch</p><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>var i = [1,2,3,4,5];<br>var j;<br>for(j in i){<br>    document.write(i[j]+<ba>);<br>    }</ba></p><p>while<br>do while 必须会先执行一次</p><h2 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h2><p>break  结束当前循环<br>continue 结束本次循环</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>function 函数名(参数){<br>    函数体；<br>}</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">sumdemo</span><span class="params">(a,b)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> sum = a+b;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> sum;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> v1 = sumdemo(<span class="number">10</span>,<span class="number">11</span>);</span></span><br><span class="line"><span class="actionscript">alert(v1);   <span class="comment">//弹出框显示v1的值</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">buttom</span> <span class="attr">onclick</span>=<span class="string">"alert(v1)"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">buttom</span>&gt;</span></span><br></pre></td></tr></table></figure><p>局部变量 全局变量</p><p>声明在函数外的是全局变量<br>函数内用var定义的是局部变量<br>函数内没用var定义，在调用函数后，会变成全局变量</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span><span class="params">()</span><span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">    x=10;</span></span></span><br><span class="line"><span class="function"><span class="comment">&#125;</span></span></span><br><span class="line"><span class="function"><span class="title">demo</span><span class="params">()</span>;</span></span><br><span class="line">alert(x); <span class="comment">//会打印出10</span></span><br></pre></td></tr></table></figure><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p> try{<br>    会发生异常的代码块;<br>    }catch(err){<br>    错误信息处理;<br>    }<br>throw 抛出自定义错误</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span> = <span class="string">"txt"</span> <span class="attr">type</span> = <span class="string">"text"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span> = <span class="string">"btn"</span> <span class="attr">type</span> = <span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"demo()"</span> <span class="attr">value</span>= <span class="string">"按钮"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">demo</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> e = <span class="built_in">document</span>.getElementById(<span class="string">"txt"</span>).value;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(e == <span class="string">""</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">throw</span> <span class="string">"请输出"</span>;     <span class="comment">//抛出自定义错误</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">       &#125;<span class="keyword">catch</span> (err)&#123;</span></span><br><span class="line"><span class="undefined">       alert(err);</span></span><br><span class="line"><span class="undefined">       &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><p>onClick  单击事件    onclick = “demo()”<br>onMouseOver 鼠标经过事件<br>onMouseOut 鼠标移出事件<br>onChange 文本内容改变事件<br>onSelect 文本框选中事件<br>onFocus 光标聚集事件<br>onBlur 移开光标事件<br>onLoad 网页加载事件 网页加载完毕就会执行，一般加载body里头<br>onUnload 关闭网页事件</p><h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><p>当网页被加载时，浏览器会创建页面的文档对象模型 Document Object Model</p><p>因此，可以操作HTML</p><blockquote><p> 改变HTML元素<br> 改变HTML属性<br> 改变CSS样式<br> 对事件作出反应 </p></blockquote><p>getElementsByName()获取name对应，有相同的name则存储为数组<br>getElementsByTagName()获取元素对应，元素不唯一则存储为数组<br>getAttribute() 获取元素属性 比如先根据id获取a标签，再用这个函数获取a标签href的值<br>setAttribute() 设置元素属性<br>childNodes() 访问子节点<br>parentNode() 访问父节点<br>createElement() 创 建元素节点<br>createTextNode() 创建文本节点<br>inserBerfoe() 插入节点<br>removeChild() 删除节点<br>offsetHeight 网页尺寸<br>scrollHeight 网页尺寸</p><h2 id="操作HTML"><a href="#操作HTML" class="headerlink" title="操作HTML"></a>操作HTML</h2><p></p><p id="pid">Hello</p><p></p><p></p><p id="pid2">World</p><br>通过id找到HTML元素/通过标签名找到HTML元素<br>var nv = document.getElementById(“pid”);<br>var nr = document.getElementByTagName(“p”); //会找到第一个p标签<p></p><p><strong>改变HTML内容</strong><br>nv.innerHTML = “world”;<br>document.write(“world”);//这句会覆盖掉原来的<br><strong>改变HTML属性</strong><br><a id="ida" href="baidu.com">hello</a><br>document.getElementById(“ida”).href = “UUG521.top”;</p><h2 id="操作CSS"><a href="#操作CSS" class="headerlink" title="操作CSS"></a>操作CSS</h2><p>document.getElementById(id).style.property= new style;</p><h2 id="事件句柄EventListener"><a href="#事件句柄EventListener" class="headerlink" title="事件句柄EventListener"></a>事件句柄EventListener</h2><p>添加句柄 addEventListener()<br>删除句柄 removeEventListener()</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span> = <span class="string">"btn"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> x = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span></span><br><span class="line"><span class="actionscript">x.addEventListener(<span class="string">"click"</span>,hello);   <span class="comment">//添加句柄以侦听，点击后调用hello函数</span></span></span><br><span class="line"><span class="actionscript">x.addEventListener(<span class="string">"click"</span>,world);  </span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">hello</span><span class="params">()</span></span>&#123; alert(<span class="string">"hello"</span>);&#125;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">world</span><span class="params">()</span></span>&#123; alert(<span class="string">"world"</span>);&#125;</span></span><br><span class="line"><span class="actionscript">x.removeEventListener(<span class="string">"click"</span>,world);   <span class="comment">//删除句柄</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="事件详解"><a href="#事件详解" class="headerlink" title="事件详解"></a>事件详解</h1><h2 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h2><p>事件流：描述在页面中接受事件的顺序<br>事件冒泡：由最具体的元素接收，然后逐级向上传播至最不具体的元素的节点(文档)兼容性好，使用较多<br>事件捕获：由最不具体的节点先接收事件，而最具体的节点应该是最后接收事件</p><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><p>HTML事件处理：直接添加到HTML结构中<br>DOM 0级事件处理：把一个函数赋值给一个事件处理程序属性 document.getElementById(“btn”).onclick = function (); //缺点是如使用多个onclick多个会覆盖<br>DOM 2级事件处理：addEventListener(“事件名”,”事件处理函数”,”Boolean”); //ture 事件捕获 false 事件冒泡 Boolean现在已经直接不写了 不会覆盖，会顺序执行<br>IE事件处理程序： attachEvent detachEvent 跟DOM 2级处理一样使用，IE8以下只支持这种</p><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><p>事件对象：在触发DOM事件的时候都会产生一个对象<br>事件对象event:<br>1 event.type:获取事件类型  返回比如click<br>2 event.target:获取事件目标   返回触发元素如button<br>3 event.stopPropagation():阻止事件冒泡  因为默认是事件冒泡，会一步一步往外扩，所以要阻止以防出问题<br>比如<div id="id1"><a href="baidu.com" id="id2"></a></div><br>如果给 id1设置了alert,那么当点击a链接的时候，会先出跳框，再链接到baidu.com<br>4 event.preventDefault():阻止事件默认行为 比如阻止链接跳转，上面的例子，给id2阻止了默认行为，就不会跳转到baidu.com</p><h1 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h1><p>JavaScript中的所有事物都是对象：字符串、数值、数组、函数……<br>每个对象带有属性和方法<br>JavaScript允许自定义对象<br> 自定义对象：</p><blockquote><p> 定义并创建对象实例</p><pre><code>*   people = new Object(); people.name=&quot;lis&quot;;*   people = {name:&quot;lis&quot;,age:&quot;12&quot;}</code></pre><p> 使用函数来定义对象，然后创建新的对象实例</p><pre><code>*   function people(name,age){this.name=name;this.age=age;} son = new people(&quot;lis&quot;,30)</code></pre></blockquote><h2 id="String-字符串对象"><a href="#String-字符串对象" class="headerlink" title="String 字符串对象"></a>String 字符串对象</h2><p>字符串可以用单引号或者双引号（有时候会冲突，所以使用单引号）<br>字符串长度 str.length<br>在字符串中查找字符串：str1.indexOf(str2)返回的是str2在str1的位置<br>内容匹配：str1.match(str2) 如果str2在str1则返回str2，否则返回null<br>替换内容：replace() str.replace(str2,str3)把str里头的str2替换成str3<br>字符串大小写转换： str.toUpperCase() str.toLowerCase()<br>字符串转成数组： str.split(“,”) //，可以换成特定的分隔符</p><h2 id="Date日期对象"><a href="#Date日期对象" class="headerlink" title="Date日期对象"></a>Date日期对象</h2><p>getFullYear() 获取年份<br>getTime() 获取毫秒<br>setFullYear() 设置具体日期<br>getDay() 获取星期</p><h2 id="Array数组对象"><a href="#Array数组对象" class="headerlink" title="Array数组对象"></a>Array数组对象</h2><p>使用单独的变量名来存储一系列的值，可以通过索引来访问特定元素<br>var myArray=[“hello”,”world”]<br>a.concat(b)合并a和b两个数组<br>a.sort()将a数组升序排序 a.sort(function(a,b){return b-a;})降序<br>a.push(“c”)末尾追加元素c<br>a.reverse()将数组a元素翻转</p><h2 id="Math对象"><a href="#Math对象" class="headerlink" title="Math对象"></a>Math对象</h2><p>Math.round(x)将x四舍五入<br>Math.random()返回0~1之间的随机数 parseInt(Math.random()*10)返回整数随机数<br>Math.max(a,b,c,d)返回最大数<br>Math.min(a,b,c,d)返回最小数<br>Math.abs(a)返回绝对值</p><h1 id="浏览器对象"><a href="#浏览器对象" class="headerlink" title="浏览器对象"></a>浏览器对象</h1><h2 id="window对象"><a href="#window对象" class="headerlink" title="window对象"></a>window对象</h2><p>window对象是DOM的核心，指当前的浏览器窗口<br>所有JavaScript全局对象、函数以及变量均自动成为window对象的成员<br>全局变量是window对象的属性<br>全局函数是window对象的方法<br>甚至HTML DOM的document也是window对象属性之一<br>如window.document.write(“hello”);<br>window.innerHeight 浏览器窗口的内部高度 不包含工具栏与滚动条<br>window.innerwidth 浏览器窗口的内部宽度<br>window.open(“hello.html”,”windowname”,”height=200,width=200,top=1000,left=100”)打开新窗口<br>window.close()关闭当前窗口</p><h2 id="计时器"><a href="#计时器" class="headerlink" title="计时器"></a>计时器</h2><p>在一个设定的时间间隔之后来执行代码，而不是在函数被调用后立即执行，称之为计时事件</p><p>var mytime = setInterval(function(),1000)间隔指定的毫秒数不停的执行指定代码<br>clearInterval(mytime)停止setInterval()方法执行的函数代码</p><p>var win = setTimeout(function(),3000)暂停指定的毫秒数后执行指定的代码<br>clearTimeout(win)方法用于停止执行setTimeout()方法的函数代码</p><h2 id="history对象"><a href="#history对象" class="headerlink" title="history对象"></a>history对象</h2><p>window.history 对象包含浏览器的历史url的集合</p><p>history.back()在浏览器点击后退按钮相同<br>history.forward()在浏览器点击向前按钮相同<br>history.go()进入历史中的某个页面</p><h2 id="Location对象"><a href="#Location对象" class="headerlink" title="Location对象"></a>Location对象</h2><p> window.location对象用于获得当前页面的地址URL，并把浏览器重定向到新的页面</p><p> location.hostname 返回web主机域名<br> location.pathname 返回当前页面的路径和文件名<br> location.port 返回web主机的端口<br> location.protocol 返回使用的web协议 http://或https://<br> location.href  属性返回当前页面的URL<br> location.assign(“baidu.com”) 加载新的页面</p><h2 id="Screen对象"><a href="#Screen对象" class="headerlink" title="Screen对象"></a>Screen对象</h2><p> 包含有关用户屏幕的信息<br> screen.availWidth 可用的屏幕宽度694<br> screen.availHeight 可用的屏幕高度1280<br> screen.Height 屏幕高度720<br> screen.Width 屏幕宽度1280</p><h1 id="导入导出"><a href="#导入导出" class="headerlink" title="导入导出"></a>导入导出</h1><p><a href="https://www.jb51.net/article/124442.htm" target="_blank" rel="noopener">一文让你彻底搞清楚javascript中的require、import与export</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于前端开发而言，JavaScript是必不可少的一部分。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;脚本语言，是一种轻量级的编程语言&lt;br&gt;可插入HTML页面的编程代码&lt;br&gt;插入HTML页面后，可由所有的浏览器执行&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="JavaScript" scheme="https://panxiang315.github.io/categories/programme/JavaScript/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="js" scheme="https://panxiang315.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>HTML基础学习</title>
    <link href="https://panxiang315.github.io/programme/HTML/HTML-learning/"/>
    <id>https://panxiang315.github.io/programme/HTML/HTML-learning/</id>
    <published>2018-06-25T02:41:29.000Z</published>
    <updated>2018-07-02T03:11:19.465Z</updated>
    
    <content type="html"><![CDATA[<p>HTML是前端的关键基础知识之一，皮之不存，毛将焉附。<br><a href="https://www.zhihu.com/question/22689579/answer/22318058" target="_blank" rel="noopener">前端各部分关系</a>、<br><a href="https://www.zhihu.com/question/32314049" target="_blank" rel="noopener">web前端入门</a><br><a href="https://zhuanlan.zhihu.com/p/22229868" target="_blank" rel="noopener">知乎大佬汇总前端知识</a></p><a id="more"></a><hr><p>元素是指从开始标签到结束标签的所有代码</p><p></p><p> 开始标签<br>    this is 元素内容<br></p> 结束标签<p></p><p><strong>标签跳转</strong></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">a</span> name=<span class="string">"tip1"</span>&gt;hello&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line">//中间可以隔开</span><br><span class="line">&lt;<span class="keyword">a</span> href=<span class="string">"#tip1"</span>&gt;跳转到hello&lt;/<span class="keyword">a</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>表格书写</strong></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">&lt;table border="1"&gt;</span>   //定义表格边宽度 cellpadding=<span class="string">""</span>定义表内字符距表间隔</span><br><span class="line">// bgclolr=<span class="string">""</span> 定义表格颜色  background=<span class="string">""</span> 定义表格背景图案</span><br><span class="line">    <span class="variable">&lt;caption&gt;</span>表名字<span class="variable">&lt;/caption&gt;</span></span><br><span class="line">    <span class="variable">&lt;tr&gt;</span></span><br><span class="line">        <span class="variable">&lt;th&gt;</span>单元头<span class="variable">&lt;/th&gt;</span></span><br><span class="line">        <span class="variable">&lt;th&gt;</span>单元头<span class="variable">&lt;/th&gt;</span></span><br><span class="line">    <span class="variable">&lt;/tr&gt;</span></span><br><span class="line">    <span class="variable">&lt;tr&gt;</span></span><br><span class="line">        <span class="variable">&lt;td&gt;</span>单元格<span class="variable">&lt;/td&gt;</span></span><br><span class="line">        <span class="variable">&lt;td&gt;</span>单元格<span class="variable">&lt;/td&gt;</span></span><br><span class="line">    <span class="variable">&lt;/tr&gt;</span></span><br><span class="line"><span class="variable">&lt;/table&gt;</span></span><br></pre></td></tr></table></figure><p><strong>列表</strong><br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">&lt;ol&gt;</span>         <span class="comment">//有序列表   type="a/A/i/I" start="10"</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span>无序<span class="number">1</span><span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span>无序<span class="number">2</span><span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span>无序<span class="number">3</span><span class="params">&lt;/li&gt;</span></span><br><span class="line"><span class="params">&lt;/ol&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;ul&gt;</span>         <span class="comment">//无序列表  type="disc/circle/square" 实体圆/空心圆/方块</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span>无序<span class="number">1</span><span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span>无序<span class="number">2</span><span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span>无序<span class="number">3</span><span class="params">&lt;/li&gt;</span></span><br><span class="line"><span class="params">&lt;/ul&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;dl&gt;</span>   <span class="comment">//自定义列表</span></span><br><span class="line">    <span class="params">&lt;dt&gt;</span>无编号<span class="number">1</span><span class="params">&lt;/dt&gt;</span></span><br><span class="line">        <span class="params">&lt;dd&gt;</span>无编号描述<span class="number">1</span><span class="params">&lt;/dd&gt;</span></span><br><span class="line">    <span class="params">&lt;dt&gt;</span>无编号<span class="number">2</span><span class="params">&lt;/dt&gt;</span></span><br><span class="line">        <span class="params">&lt;dd&gt;</span>无编号描述<span class="number">2</span><span class="params">&lt;/dd&gt;</span></span><br><span class="line">    <span class="params">&lt;dt&gt;</span>无编号<span class="number">3</span><span class="params">&lt;/dt&gt;</span></span><br><span class="line">        <span class="params">&lt;dd&gt;</span>无编号描述<span class="number">3</span><span class="params">&lt;/dd&gt;</span></span><br><span class="line"><span class="params">&lt;/dl&gt;</span></span><br></pre></td></tr></table></figure></p><p>HTML布局可使用div或者table实现，比较好的还是div</p><p>iframe可以实现嵌套框架，结合a标签的地址，可以实现嵌套框架内打开具体页面</p><p>特殊的字符可以搜索HTML实体查阅</p><p>IE 9和以下可能不支持HTML5</p><p>H5添加属性：<br>contenEditable 内容是否可编辑<br>spellcheck 对输入文本进行差错<br>tabindex 可以通过tab进行定位，属性值为定位顺序</p><p>H5新增元素：<br>article 新的结构元素，可包含header、footer等，<br>可以嵌套article使用，也可以包含一个object作为内嵌页面</p><p>section 新的结构元素，可以跟article相互嵌套，其特点是用来分段用的，必须含有标题</p><p>还有一些辅助划分的元素：<br>footer header hgroup</p><p>formaction元素，可为不同的按钮设置不同的提交页面<br>formaction=XX.jsp<br>配合formmethod=post/get使用<br>还有formenctype 指定不同的编码方式<br>formtarget分别打开方式<br>autofauce添加默认焦点，就比如文本框，就会先定位到这个文本框<br>required不能为空</p><p>可以给表单元素定义一个label属性，属性值为一个NodeList对象</p><p>label.control 可以通过control来访问表单元素<br>placeholder=”e”可以定义默认字</p><p>单行文本框可添加list属性，该属性的值为某个datalist元素的ID，可不显示，并且可以自己输入</p><p>给输入加上pattern=正则表达式后，可以对输入进行验证</p><p>SelectionDirection可以获取用户选择文本的方向信息</p><p>可以给复选框加上indeterminate属性，来判断该复选框有没有被选，还是没动，要结合javascript使用</p><p>图片也可以作为提交按钮，还可以设置宽度高度</p><p>**HTML的新标签template<br><a href="http://www.w3cplus.com/web-components/html-new-template-tag.html" target="_blank" rel="noopener">HTML的新标签template</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML是前端的关键基础知识之一，皮之不存，毛将焉附。&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/22689579/answer/22318058&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;前端各部分关系&lt;/a&gt;、&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/32314049&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;web前端入门&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22229868&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;知乎大佬汇总前端知识&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="HTML" scheme="https://panxiang315.github.io/categories/programme/HTML/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="HTML" scheme="https://panxiang315.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>怎样理解愉悦与不爽</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/happy-unhappy/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/happy-unhappy/</id>
    <published>2018-06-22T03:17:00.000Z</published>
    <updated>2018-06-22T09:34:42.873Z</updated>
    
    <content type="html"><![CDATA[<p>模块一：同理心</p><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;模块一：同理心&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="爽点" scheme="https://panxiang315.github.io/tags/%E7%88%BD%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>案例：用户体验与结婚教练</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/five-levels/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/five-levels/</id>
    <published>2018-06-22T03:01:19.000Z</published>
    <updated>2018-06-22T03:06:23.776Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;今天我想讲一个结婚教练的故事。她是我的一个朋友，现在做的工作就是指导30多岁下定决心要结婚的女生，如何能够在一年半之内搞定结婚。她的方法已经帮助了30多个，30多岁的女生完成了结婚。</p><a id="more"></a><hr><h1 id="用产品经理的视角来看人"><a href="#用产品经理的视角来看人" class="headerlink" title="用产品经理的视角来看人"></a>用产品经理的视角来看人</h1><p>&emsp;&emsp;今天我想讲一个结婚教练的故事。她是我的一个朋友，现在做的工作就是指导30多岁下定决心要结婚的女生，如何能够在一年半之内搞定结婚。她的方法已经帮助了30多个，30多岁的女生完成了结婚。<br>&emsp;&emsp;这个结婚教练以前是干什么的呢？她以前是一个互联网公司的产品经理。她的这一套结婚的体系内容挺多的，这堂课我想把她最重要的一个环节拿出来分享。这个环节就是如何观察和判断一个人。<br>&emsp;&emsp;因为结婚也好，创业找合伙人也罢，都是非常重要的长期关系。改变一个人，那是非常非常难的事情。如何在开始之前就去相对完整地、有框架地去观察一个人，对这个人去进行适配的一个判断，也许是更重要和更关键的。结婚教练其实就是，用互联网的产品经理如何观察和判断一个产品的专业视角，来训练她的用户如何去看一个人。<br>&emsp;&emsp;因为任何一个人，任何一个产品，大家都会有自己的感受。但是如果没有经历过专业的训练，那么所有的感受是混杂的，是混沌的。你的情绪，一定会被你最有感觉的那个点牵制住，所以就会有强烈的认知偏差和情绪偏差。并且在你没有强烈感受的这个点里，还会有大面积的认知盲点和思维遮蔽。产品经理则是有一个完整的框架体系来看一个产品。<br>&emsp;&emsp;不管你的第一直觉是喜欢还是不喜欢，其实你都可以用这套框架，相对完整地度量你对一个人的认识到底有多少。</p><h1 id="人和产品的五个层次"><a href="#人和产品的五个层次" class="headerlink" title="人和产品的五个层次"></a>人和产品的五个层次</h1><p>&emsp;&emsp;下面我就简单介绍一下，如何用一个产品经理看一个产品的专业化的方法论，去指导一个女孩儿怎么去看她的相亲对象。其实，就是从外到内的五个层次，我来一一介绍一下。</p><h2 id="第一层——感知层"><a href="#第一层——感知层" class="headerlink" title="第一层——感知层"></a>第一层——感知层</h2><p>&emsp;&emsp;一个产品，你拿到它，它设计的美不美，质感怎么样。一个人，你看到他的第一眼，这个人的身材、相貌，说话什么口音，穿衣服怎么搭配，这个就是最外层的感知层。</p><h2 id="第二层——角色框架层"><a href="#第二层——角色框架层" class="headerlink" title="第二层——角色框架层"></a>第二层——角色框架层</h2><p>&emsp;&emsp;角色是很重要的一个词，我们会专门在第一模块用一课的时间来讲。<br>&emsp;&emsp;简单来讲就是，我们每个人都生活在角色里，并且被角色驯化。比如说你遇到一个银行职员，或者是一个军人，或者是一个公务员，你在和他打交道的时候，其实你明显能够看到他身上角色的痕迹。比如说你在办公室和你的同事交往，其实大家的相处首先就是角色的对接。我们谈什么内容，我们知道哪些东西，其实都会被你的角色所控制。所以，基于表面的感知，基于角色化的接触，其实都是一些非常浅层的关系。<br>&emsp;&emsp;也就是说，咱们日常和人的接触多半都是浅层关系，因为大家上班都是基于角色在做彼此的交流。大家在接受各种服务，为你提供服务的那个人，其实也都是角色所设定好的沟通方式和交付内容，然后再与你去进行沟通、交割和讨论。<br>&emsp;&emsp;其实两个人只是角色的对接关系，是没有办法达到彼此的深入了解和深层关系的。<br>&emsp;&emsp;什么是深层关系？那就要走到这个角色之下的下一层，第三层。从第三层开始就是一个人的深层部分了。</p><h2 id="第三层——资源结构层"><a href="#第三层——资源结构层" class="headerlink" title="第三层——资源结构层"></a>第三层——资源结构层</h2><p>&emsp;&emsp;它可能会包括了一个人的财富资源、人脉精神资源，每个人其实都是不一样我们人生的历程，其实大概在很多时刻，很多人都会处在同一个角色里。<br>&emsp;&emsp;比如说我们都曾经是学生，或者是说毕业刚工作的时候，我们都是小职员。但是接下来，因为每个人的资源不一样，大家的精神资源不一样，出身背景、家庭的人脉资源不一样等等，资源结构会推动一个人。<br>&emsp;&emsp;我们可能都曾经是在某一个角色，但接着未来会进入到不同系统的不同角色。所以其实到了资源结构的这个层面，好多姑娘已经不会观察，不会判断了。她看一个人说，外表怎么样，衣服穿得好不好，或者问一些非常表面化的问题，比如说你存款多少钱啊，你有房有车吗？<br>&emsp;&emsp;如果用我们产品经理的专业术语，这个叫做只抓表面数据，这种用户研究行为其实是非常低级的。如果是只能抓表面数据的产品经理，肯定不能成为一个优秀的产品经理。就好像是说一个女生，如果她只能基于一个人的感知层，或者基于人的角色去进行交流，或者基于表面数据的存款和房车去对一个人去进行判断，那她也是没有办法和别人去建立深度关系的。<br>&emsp;&emsp;在这个深度关系之外，再往下一层是什么？这个才是一个人真正的内核。下面还有两层，我放在一起讲。</p><h2 id="第四层——人的能力圈"><a href="#第四层——人的能力圈" class="headerlink" title="第四层——人的能力圈"></a>第四层——人的能力圈</h2><h2 id="第五层——人的内核"><a href="#第五层——人的内核" class="headerlink" title="第五层——人的内核"></a>第五层——人的内核</h2><p>&emsp;&emsp;一个人的内核，就是他对自己存在感的定义。也就是说，他对自己为什么而存在到底是怎么感知的，什么状态下他的存在感得到了充分的满足，什么时候他的存在感就极度让他不爽，让他烦躁。存在感之于人就好像生存之于动物一样是触发情绪和推动行动的开关。你观察一个动物，它的状态，它的情绪，其实都是关乎它的生存需求是不是被满足。<br>&emsp;&emsp;狮子为什么要去咬长颈鹿，其实它也很吃力，也很勉强，也有点打不过，但是必须厮杀下去。因为饿，因为生存不满足，生存的需求在驱动它。如果它吃饱了，它才不这么费劲呢。所以一个人为什么奔波，为什么焦虑，为什么不安，机关算尽，上窜下跳？其实是因为他的生存感、他的存在感还没有被满足。<br>&emsp;&emsp;动物其实只要能够生存，生存条件满足，它就很愉快了。但是人和人又是不一样的。有的人只要能够在一段关系里，比如说我在一个家庭中，我在和我的爱人的关系中，只要我的存在感是清晰的，对方给了我足够的确认感，我就能够满足。其实很多女孩儿都是这样的。<br>&emsp;&emsp;但是有的人，如果只能够在一段关系中找到自己的存在感，是远远不能满足自己的。他需要在职场、在行业中、在社会影响力中，看到自己的存在感，看到别人的重视。其实很多男人是这样的。<br>&emsp;&emsp;所以，就像是生存在驱动动物奔波撕咬一样，对存在感的寻求，以及不安全感，其实也是在驱动男人或者是女人思前想后、废寝忘食、找人找事找钱，去满足自己，确认自己的存在感。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;今天，我们把一个人由表及里的五层讲了一遍，对于人的这五层：感知层、角色层、资源层、能力圈和存在感。<br>&emsp;&emsp;看一个人，或者看一个产品，可以从由表及里的五层来做观察和判断：感知层、角色层、资源层、能力圈和存在感。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;今天我想讲一个结婚教练的故事。她是我的一个朋友，现在做的工作就是指导30多岁下定决心要结婚的女生，如何能够在一年半之内搞定结婚。她的方法已经帮助了30多个，30多岁的女生完成了结婚。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="产品层次" scheme="https://panxiang315.github.io/tags/%E4%BA%A7%E5%93%81%E5%B1%82%E6%AC%A1/"/>
    
  </entry>
  
  <entry>
    <title>产品能力是每个人的底层能力</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/product/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/product/</id>
    <published>2018-06-22T01:48:32.000Z</published>
    <updated>2018-06-22T02:02:25.356Z</updated>
    
    <content type="html"><![CDATA[<p><strong>梁宁：</strong><br><em>&emsp;&emsp;我在lT和互联网行业工作了20多年，写过代码，做过销售，当过高管。创过业，卖过公司，也做过投资。如果问我做过这么多的事，最喜欢哪一样？我会说，做一个产品人，做产品。为什么呢？因为我觉得产品能力是人生的一个底层能力。拥有产品能力，能让你有一种踩在地上的自信和踏实感。</em></p><a id="more"></a><hr><h1 id="为什么产品能力是人生的底层能力"><a href="#为什么产品能力是人生的底层能力" class="headerlink" title="为什么产品能力是人生的底层能力"></a>为什么产品能力是人生的底层能力</h1><p>&emsp;&emsp;我们大家都是从一无所有走过来的。我还记得那种茫然无措的感受。因为没有认知框架，所以每天面对着各种正面、负面的信息，任其冲击情绪，却不知道如何处置。这些信息到底什么重要，什么不重要，应该如何识别？同时，我们害怕自己的才华得不到赏识；自己努力了，却总是被diss；没有得到正面的反馈，得不到回报。还会有人会自怨自艾，没有家庭背景，没干爹，没靠山。<br>&emsp;&emsp;还好，在今天这个时代，如果让我给一个建议，那就是培养自己的产品能力。以上这些都不重要，产品能力会给你自信。<br>&emsp;&emsp;为什么？产品能力就是训练一个人：<strong>判断信息，抓住要点，整合有限的资源，把自己的价值打包成一个产品向世界交付，并且获得回报</strong>。别怕茫然，别怕被diss，别怕推倒重来。因为从一个普通人，到成为一个产品人的过程，其实就是一个人学习建立认知框架的过程。<br>&emsp;&emsp;先建立信息的秩序，再建立自己内心的秩序。在一片纷杂里，你会知道自己该放弃哪些点，抓住哪个点，慢慢建立起掌控。这个过程里，你会碰到数不清的diss，被各种吐槽，被指着脸批评，还有数不清的推倒重来。这就是一个产品人生活的常态。</p><blockquote><p> 丘吉尔说：如果你到了地狱，那就继续保持前行。</p></blockquote><p>&emsp;&emsp;产品的人生就是天天被打击。既然这就是生活的常态，放下担心，你会在打击中变得健壮。所以，你就会拥有产品人的一项基础能力：抗挫折、抗打击的能力。<br>&emsp;&emsp;另外，别怕没有家庭背景，别怕没靠山、没干爹。因为做一个产品人，我们只认一条“<strong>用户驱动</strong>”。</p><h1 id="从第一个用户走向第一桶金"><a href="#从第一个用户走向第一桶金" class="headerlink" title="从第一个用户走向第一桶金"></a>从第一个用户走向第一桶金</h1><p>&emsp;&emsp;今天，全球市值最高的7家公司，美国有微软、苹果、Google、Facebook，中国有腾讯、阿里、百度……这些企业，在他们刚开始的时候，没有矿产土地资源，没有高官权贵加持。就一帮年轻人，在租来的办公室，靠自己的大脑，靠自己的创造力，在互联网的空间里，“无中生有”地创造了以前没有的空间与体验。改变了我们的生活，也改变了世界的面貌。<br>&emsp;&emsp;不到20年的时间，他们生长成当今世界上，拥有最多财富和社会影响力的个体。一无所有的年轻人，从一个用户开始，拿到人生的第一桶金，然后建立自己的世界。<br>&emsp;&emsp;马化腾、马云、李彦宏、刘强东、王兴、李学凌、姚劲波等等，几乎都是这样从普通人，变成了行业大佬。他们是怎么做到的呢？他们是如何拥有用户？如何建立“用户驱动”的呢？ </p><h1 id="产品思维，到底讲什么内容"><a href="#产品思维，到底讲什么内容" class="headerlink" title="产品思维，到底讲什么内容"></a>产品思维，到底讲什么内容</h1><p>&emsp;&emsp;我会用5大模块一共25讲，教你怎么看到用户、倾听用户、判断用户，怎么能够与用户建立连接，并且在用户的交互反馈中去迭代和优化。</p><blockquote><ul><li>1、教你怎么去观察，怎么判断。</li><li>2．如何建立一种系统能力，以此去向用户交付一种确定性。</li><li>3．如何建立交互能力，接着在不断的连接与迭代中，深化你和用户的关系。</li></ul></blockquote><p>&emsp;&emsp;你可以说我这套课是讲产品的，你也可以说我这套课是讲人的。或者说，这套课是从产品的专业视角，来看人和人关系的。或者说，基于对人和人关系的感知，来讲怎么做产品的。<br>&emsp;&emsp;都对。因为产品只是你用来服务用户的介质。随着科技会进步，产品会迭代，公司的形态、组织的形态都会发生变化。但是你最终要服务的对象，那个人，他未被满足的需求、人的心与人性并没有那么大变化。<br>&emsp;&emsp;感性一点说，通过这30讲，我希望帮助你拥有三个东西：</p><blockquote><ul><li>第一是一双眼睛，是发现痛点、找到破局的敏锐之眼；</li><li>第二是一双手，是动手优化、着手改变的行动之手；</li><li>第三是一颗心，是洞察人性的同理心，懂得自己，懂得用户，懂得一个产品上，每个细微的小点给到人的满足感、确认感和依赖感。</li></ul></blockquote><h1 id="你能从这门课收获什么"><a href="#你能从这门课收获什么" class="headerlink" title="你能从这门课收获什么"></a>你能从这门课收获什么</h1><p>&emsp;&emsp;我希望这门课能够帮到以下几类朋友：<br>&emsp;&emsp;我希望这些课程能够帮到那些曾经像我一样茫然的年轻人。产品能力是动手能力、是掌控能力，希望通过这30讲的课程和练习，你能够到找到与现实世界真切连接的踏实感，知道如何分辨要点，找到抓手，建立掌控感，不再茫然和被动。</p><p>&emsp;&emsp;我希望这些课程能够帮到那些希望自己有一技之长，踏实地生活的人。相信自己的双手，相信自己的动手能力比什么都踏实。<br>&emsp;&emsp;我希望这些课程能够帮到那些在世界上感到孤独的人。世界是如此的不可知、不确定，但是通过我们的系统能力，我们可以应对和消化这种不确定。为他人的生活中，提供一点小小的确定，一点小小的依赖，通过产品与人对话，与人连接，其实也是一种温暖。<br>&emsp;&emsp;我希望这些课程能够帮到那些立志优化这个世界，在这个世界上留下痕迹的人。世界如此精彩，我们当然不置身局外。</p><p>&emsp;&emsp;很高兴在这一年的开始之际与你相遇。希望这一年，世界在你眼前展开，希望一切清晰与分明起来。愿你能够在这个不确定的世界，建立自己的确定性，并与人彼此依赖。愿你向这个世界交付你的价值，并且获得回报。<br>&emsp;&emsp;2018，我们一起加油。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;梁宁：&lt;/strong&gt;&lt;br&gt;&lt;em&gt;&amp;emsp;&amp;emsp;我在lT和互联网行业工作了20多年，写过代码，做过销售，当过高管。创过业，卖过公司，也做过投资。如果问我做过这么多的事，最喜欢哪一样？我会说，做一个产品人，做产品。为什么呢？因为我觉得产品能力是人生的一个底层能力。拥有产品能力，能让你有一种踩在地上的自信和踏实感。&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="产品能力" scheme="https://panxiang315.github.io/tags/%E4%BA%A7%E5%93%81%E8%83%BD%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>数据库学习笔记</title>
    <link href="https://panxiang315.github.io/programme/Database/database-learning/"/>
    <id>https://panxiang315.github.io/programme/Database/database-learning/</id>
    <published>2018-06-20T01:20:07.000Z</published>
    <updated>2018-07-02T03:01:12.906Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;JDBC（Java DataBase Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。JDBC提供了一种基准，据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。<br>&emsp;&emsp;简单的来说，JDBC就是连通JAVA和数据库之间的桥梁。</p><p><strong>使用软件</strong></p><blockquote><ul><li><strong>MYSQL</strong>：数据库</li><li><strong>Navicat</strong>：数据库管理软件</li></ul></blockquote><a id="more"></a>    <hr><p>基本操作：<a href="http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html#d7" target="_blank" rel="noopener">21分钟 MySQL 入门教程</a><br>简易命令查询 ：<a href="http://www.cnblogs.com/shockerli/p/1000-plus-line-mysql-notes.html" target="_blank" rel="noopener">一千行MySQL学习笔记</a><br>学习视频课程(慕课网)：<a href="https://www.imooc.com/learn/421" target="_blank" rel="noopener">JDBC之“对岸的女孩走过来”</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;JDBC（Java DataBase Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。JDBC提供了一种基准，据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。&lt;br&gt;&amp;emsp;&amp;emsp;简单的来说，JDBC就是连通JAVA和数据库之间的桥梁。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用软件&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MYSQL&lt;/strong&gt;：数据库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Navicat&lt;/strong&gt;：数据库管理软件&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="Database" scheme="https://panxiang315.github.io/categories/programme/Database/"/>
    
    
      <category term="mysql" scheme="https://panxiang315.github.io/tags/mysql/"/>
    
      <category term="Navicat" scheme="https://panxiang315.github.io/tags/Navicat/"/>
    
  </entry>
  
  <entry>
    <title>Vali Admin使用教程</title>
    <link href="https://panxiang315.github.io/programme/Node-js/admin-theme/"/>
    <id>https://panxiang315.github.io/programme/Node-js/admin-theme/</id>
    <published>2018-06-11T05:55:43.000Z</published>
    <updated>2018-07-02T03:04:00.957Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;Vali是一款基于Bootstrap 4，SASS和PUG.js构建的框架和组件集合主题，特点是模块化及可定制化。该主题包含了几乎所有的图表组件，各组件按需组合，即插即用。</p><blockquote><ul><li><a href="https://pratikborsadiya.in/blog/vali-admin/" target="_blank" rel="noopener">官方说明文档</a></li><li>使用过程中涉及到<a href="http://www.gruntjs.net/" target="_blank" rel="noopener">Grunt</a>相关知识  </li></ul></blockquote><p><img src="https://pratikborsadiya.in/blog/vali-admin/vali-admin-banner.gif" alt="官方示例">  </p><a id="more"></a>  <hr><h1 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h1><p>│<br>├── docs - compiled files （已编译文件）<br>│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── css （由sass编译而来的css文件）<br>│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── images （项目图片存储，可利用<a href="https://www.qiniu.com/products/kodo" target="_blank" rel="noopener">七牛云</a>等工具转为链接）<br>│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└── js（由pug编译而来的js文件）<br>└── src - Layout and style source files（源文件）<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── pug - Layout source（框架源文件）<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└── sass - Style source（样式源文件）</p><h1 id="源文件编译"><a href="#源文件编译" class="headerlink" title="源文件编译"></a>源文件编译</h1><p>&emsp;&emsp;本主题使用SASS和Pug.Js构建，然后由Grunt将其编译为HTML和CSS。 如果您对Grunt不熟悉，请参阅<a href="https://blog.csdn.net/qq_34099161/article/details/53305449" target="_blank" rel="noopener">这篇文章</a>。如果您熟悉Grunt，请按照以下步骤处理<a href="https://github.com/pratikborsadiya/vali-admin/archive/master.zip" target="_blank" rel="noopener">源代码</a>。</p><blockquote><ul><li>将下载项目放在你想放的位置，在该位置下运行<code>npm install</code>来安装依赖项目<ul><li>这一步需要你先安装了node.js</li><li>装完node.js之后安装grunt-CLI（在cmd中输入<code>npm install -g grunt -cli</code>）</li><li>这一步中的npm install你可能会困惑为什么后面没有安装内容，其实是会自动把文件目录中的<em>package.json</em>中<em>devDependencies</em>包含的依赖项目全部安装，这也是Grunt的管理项目的神奇之处之一</li></ul></li><li>运行<code>npm run build</code>来编译项目</li><li>运行<code>npm run start</code>来运行项目<ul><li>运行之后，他会通知你可以到 <a href="http://localhost:8888" target="_blank" rel="noopener">http://localhost:8888</a> 去预览你的项目</li></ul></li></ul></blockquote><p><a href="https://www.w3cplus.com/tools/get-up-running-grunt.html" target="_blank" rel="noopener">Grunt进阶</a></p><h1 id="布局定制"><a href="#布局定制" class="headerlink" title="布局定制"></a>布局定制</h1><p>&emsp;&emsp;本主题基于Pug.js构建页面布局。布局源文件位于src/pug目录中。这个目录下包含两个子目录：</p><blockquote><ul><li>layout：包含了所有页面共用的HTML整体架构</li><li>includes：局部架构，如侧边栏、导航栏和页脚等</li></ul></blockquote><h1 id="样式定制"><a href="#样式定制" class="headerlink" title="样式定制"></a>样式定制</h1><p>&emsp;&emsp;本主题样式基于SASS编写。所有样式文件都位于src/sass目录中。在这个目录中有一个main.sass，它import了所有sass文件，最后编译导出到docs/css目录中的main.css文件。<br>&emsp;&emsp;src/sass目录中有四个子目录：</p><blockquote><ul><li>1-tools：包含了所有外部库的样式以及一个_var.scss文件，包含了本主题所需变量（如：侧边栏宽度、颜色）</li><li>2-basics：包含基本样式，如整体架构CSS和主题选项</li><li>3-component：包含组件的样式，如卡片card，小工具widgets，侧边栏，导航栏等</li><li>4-pages：包含特定页面的样式，如登录页面，锁屏页面等</li></ul></blockquote><p>&emsp;&emsp;例如，要自定义主题和侧边栏的颜色，可参考<a href="https://www.materialpalette.com/colors" target="_blank" rel="noopener">图色代码</a>更改1-tools/_var.scss中的相关变量。<br>&emsp;&emsp;如果你不想使用特定的组件或插件，只需在src/sass/main.scss中注释该特定组件的import语句，然后通过运行<code>npm run build</code>命令来编译SASS。</p><h1 id="与其他框架兼容"><a href="#与其他框架兼容" class="headerlink" title="与其他框架兼容"></a>与其他框架兼容</h1><p>&emsp;&emsp;与Angular或React不同，本主题为轻量主题，由于其具有模块化特性，很容易组合到其他的前端框架中。此外，如果你使用Node JS作为你的web服务器，那你可以使用pug作为你的布局引擎，详情可见<a href="https://pugjs.org/zh-cn/api/getting-started.html" target="_blank" rel="noopener">PUG API</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;Vali是一款基于Bootstrap 4，SASS和PUG.js构建的框架和组件集合主题，特点是模块化及可定制化。该主题包含了几乎所有的图表组件，各组件按需组合，即插即用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pratikborsadiya.in/blog/vali-admin/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方说明文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用过程中涉及到&lt;a href=&quot;http://www.gruntjs.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Grunt&lt;/a&gt;相关知识  &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://pratikborsadiya.in/blog/vali-admin/vali-admin-banner.gif&quot; alt=&quot;官方示例&quot;&gt;  &lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="Node.js" scheme="https://panxiang315.github.io/categories/programme/Node-js/"/>
    
    
      <category term="Grunt" scheme="https://panxiang315.github.io/tags/Grunt/"/>
    
      <category term="PUG" scheme="https://panxiang315.github.io/tags/PUG/"/>
    
  </entry>
  
  <entry>
    <title>Java文件生成exe安装文件</title>
    <link href="https://panxiang315.github.io/programme/Java/java-2-exe/"/>
    <id>https://panxiang315.github.io/programme/Java/java-2-exe/</id>
    <published>2018-06-08T07:08:09.000Z</published>
    <updated>2018-07-02T03:04:20.544Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;Java的特点之一是平台独立与可移植性，这一特点依赖于其跨平台的运行标准环境JRE。但是当用户的电脑上没有安装jdk或jre时，若强行让用户安装，会严重影响用户体验。为解决上述问题，可将Java的可执行jar包打包成setup.exe文件，直接带着jre，供用户使用。<br>&emsp;&emsp;这里也插一句，jre在极度精简的情况下，也可能有几十M。当你自己的代码量相对jre而言比较小的情况下，如果还带着jre就有点像配有背包电池的手机。这个时候，你就可以考虑用前端解决问题了，因为前端仅依赖于几乎每台电脑都已经安装的浏览器。</p><p><strong>使用软件</strong></p><blockquote><ul><li><strong>exe4j</strong>：用于将jar包转为exe文件</li><li><strong>Inno Setup</strong>：将上述exe文件打包成软件安装包setup.exe</li></ul></blockquote><a id="more"></a>    <hr><h1 id="步骤一：生成jar包"><a href="#步骤一：生成jar包" class="headerlink" title="步骤一：生成jar包"></a>步骤一：生成jar包</h1><p>&emsp;&emsp;以Eclipse为例：</p><blockquote><ul><li>点击你的项目，右键Export；</li><li>选择导出类型为Runnable JAR file，点击Next下一步；</li><li>launch configuration选择包含主函数的类文件</li><li>Export destination选择导出jar包的路径及包名</li><li>设置第三方jar包的处置方法，包括以下三种<ul><li>Extract required libraries into generated JAR：把所有的import JAR都拆开来，包含在JAR的各个目录中</li><li>Package required libraries into generated JAR：把所有的import JAR都包在JAR的根目录下</li><li>Copy required libraries into a sub-folder next to the generated JAR：把所有import JAR放在JAR外面独立的一个文件夹  </li></ul></li><li>点击Finish结束，这个时候你就会在你指定的路径中看见生成的jar包yourjar.jar</li></ul></blockquote><p><img src="/images/programme/java2exe/step0-1.png" alt="export1"><br><img src="/images/programme/java2exe/step0-2.png" alt="export2"></p><hr><h1 id="步骤二：生成exe可执行文件"><a href="#步骤二：生成exe可执行文件" class="headerlink" title="步骤二：生成exe可执行文件"></a>步骤二：生成exe可执行文件</h1><h2 id="安装exe4j"><a href="#安装exe4j" class="headerlink" title="安装exe4j"></a>安装exe4j</h2><p>下载并安装：<a href="https://www.jb51.net/softs/541579.html" target="_blank" rel="noopener">exe4j下载地址</a><br>先安装程序，装完后运行，然后用<strong>Keymaker.exe</strong>生成一个序列号，输入到程序界面中的<strong>Change License</strong>即可。<br>名字及单位可以随便填</p><p><img src="/images/programme/java2exe/step0.png" alt="welcome"></p><h2 id="jar包转化"><a href="#jar包转化" class="headerlink" title="jar包转化"></a>jar包转化</h2><p>1.打开安装的exe4j软件，首页welcome(刚才输入序列号就在这)，直接next<br><img src="/images/programme/java2exe/step1.png" alt="welcome"></p><p>2.选择转换类型<br>Regular mode:保证程序仍具有跨平台的特性<br>JAR in EXE：可以把程序完全编译成exe文件，可以更好的保护你的程序不被反编译。<br>一般还是选第二个吧<br><img src="/images/programme/java2exe/step2.png" alt="step2"></p><p>3.输入程序的名字和并指定输出目录<br><img src="/images/programme/java2exe/step3.png" alt="step3"></p><p>4.输入扩展信息<br>Icon File可勾选，为你的exe文件设置图标，必须为xx.ico文件<br>选项Allow only a single running instance of the application，勾选上之后，该exe只能运行一个，看你的需求点；<br><img src="/images/programme/java2exe/step4.png" alt="step4"></p><p>4.1 点击左侧Redirection，在两个位置中可以写记录日志的文件名称，目录为和exe的相同目录；<br><img src="/images/programme/java2exe/step4.1.png" alt="step4.1"></p><p>4.2 点击左侧Version info，可添加版本说明；<br><img src="/images/programme/java2exe/step4.2.png" alt="step4.2"></p><p>4.3 点击左侧32-bit or 64-bit，来决定你生成的exe是32位还是64位的，勾上Generate 64 bit executeable，注意，勾选这个可以避免不必要的麻烦；<br><img src="/images/programme/java2exe/step4.3.png" alt="step4.3"></p><p>5.添加jar包<br>把程序中所用到的类路径添加上去。然后指定程序的启动类，其它如果没有必要的话，则按默认即可，点击+号添加类路径。基本上你所需要用到的Jar文件都要添加上去，可以逐个添加上去，为了使你的程序能够随处运行，所以还是强列建议你使用相对路径，并且不要使用环境变量，就是“.\yourjar.jar”。添加好你的类路径之后回到上一步去选择好你的”Main Class”即可。<br><img src="/images/programme/java2exe/step5.png" alt="step5"><br><img src="/images/programme/java2exe/step5.1.png" alt="step5.1"><br><img src="/images/programme/java2exe/step5.2.png" alt="step5.2"></p><p>6.选择运行环境<br>接下来先选择我们的程序所需要最小最高版本，我们根据自己的情况设置就ok，然后便是选择我们自带的jre了,这一步不是必须，但是为了更好的分发程序，我们自带了jre, 所以必须把我们自带的jre指定为首选的运行环境，选择Search sequence<br><img src="/images/programme/java2exe/step6.png" alt="step6"></p><p>默认情况下程序会去系统的注册表，环境变量及相关的目录查找jre,因为我们只需要自带的jre,所以这里我把默认的选项移除了，然后添加我们自己的jre所在的目录路径，这里还是建议使用相对的目录路径，点+号开始：<br><img src="/images/programme/java2exe/step6.1.png" alt="step6.1"></p><p>然后点击左侧的Preferred VM，选择Client hotspot VM，然后next。<br><img src="/images/programme/java2exe/step6.2.png" alt="step6.2"></p><p>7.选择软件启动画面</p><p>该步骤可选，之后就一直默认点next就行了。<br><img src="/images/programme/java2exe/step7.png" alt="step7"></p><p>&emsp;&emsp;在运行过程中，java.exe依照一套逻辑来寻找可以用的JRE，首先查找自己所在的目录下有没有JRE，其次查找自己的父目录下有没有JRE；最后才是查询Windows的注册表。<br>&emsp;&emsp;现在我们的程序可以在任意的计算机上执行了，可是缺点是致命的，比方说我的程序才160K，可是不论走到哪里都要背着几十M甚至一百多M的JRE，未免有点小题大做吧，其实作为我们的私有的JRE，好多内容都是可以抛弃的。可以清理几个库文件里面不需要的内容，这需要仔细的整理，会很费功夫。<br>&emsp;&emsp;清理完后，可以通过下面这个棒棒的软件来进一步瘦身了。</p><hr><h1 id="步骤三：生成setup-exe安装包"><a href="#步骤三：生成setup-exe安装包" class="headerlink" title="步骤三：生成setup.exe安装包"></a>步骤三：生成setup.exe安装包</h1><h2 id="安装inno-setup"><a href="#安装inno-setup" class="headerlink" title="安装inno setup"></a>安装inno setup</h2><p>下载并安装：<br><a href="https://blog.csdn.net/hebbely/article/details/78168071" target="_blank" rel="noopener">inno setup中文版下载地址</a>中文版记得别装附加软件！！<br><a href="http://www.jrsoftware.org/isdl.php#stable" target="_blank" rel="noopener">inno setup英文版下载地址</a></p><p>打开后点击文件&gt;新建，就可以开始了<br><img src="/images/programme/java2exe/step10.1.png" alt="step10"></p><p>这里可以自定义软件的一些附加信息，填完后下一步<br><img src="/images/programme/java2exe/step10.2.png" alt="step10"></p><p>按照默认的直接下一步<br><img src="/images/programme/java2exe/step10.3.png" alt="step10"></p><p>这一步是关键，首先选择刚才你用exe4j生成的.exe文件，然后在下面添加文件夹。将你包含你的.exe文件的文件夹选中，文件夹里有各种你这个程序运行起来的文件，特别是jre！！！之后就可以无脑点下一步了。<br><img src="/images/programme/java2exe/step10.4.png" alt="step10"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;Java的特点之一是平台独立与可移植性，这一特点依赖于其跨平台的运行标准环境JRE。但是当用户的电脑上没有安装jdk或jre时，若强行让用户安装，会严重影响用户体验。为解决上述问题，可将Java的可执行jar包打包成setup.exe文件，直接带着jre，供用户使用。&lt;br&gt;&amp;emsp;&amp;emsp;这里也插一句，jre在极度精简的情况下，也可能有几十M。当你自己的代码量相对jre而言比较小的情况下，如果还带着jre就有点像配有背包电池的手机。这个时候，你就可以考虑用前端解决问题了，因为前端仅依赖于几乎每台电脑都已经安装的浏览器。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用软件&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;exe4j&lt;/strong&gt;：用于将jar包转为exe文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inno Setup&lt;/strong&gt;：将上述exe文件打包成软件安装包setup.exe&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="Java" scheme="https://panxiang315.github.io/categories/programme/Java/"/>
    
    
      <category term="exe4j" scheme="https://panxiang315.github.io/tags/exe4j/"/>
    
      <category term="Inno Setup" scheme="https://panxiang315.github.io/tags/Inno-Setup/"/>
    
  </entry>
  
  <entry>
    <title>CSS规范文档</title>
    <link href="https://panxiang315.github.io/programme/CSS/CSS-specification/"/>
    <id>https://panxiang315.github.io/programme/CSS/CSS-specification/</id>
    <published>2018-06-07T07:19:21.000Z</published>
    <updated>2018-07-03T01:30:29.532Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>易有太极，是生两仪，两仪生四象，四象生八卦。  ——《易传》</p></blockquote><p>Java中通过总结共性，不断抽离出父类，以实现代码复用；通过继承，可不断对原有父类进行功能扩展。CSS与之类似，也是关于抽离、扩展和复用的艺术。<br>在对CSS进行分离的过程中，需要考虑以下问题：</p><blockquote><ul><li>分离层级越多，渲染开销越大</li><li>分离层级越少，样式复用率越低，样式冲突率越高</li></ul></blockquote><a id="more"></a><hr><p><a href="http://tool.oschina.net/jscompress/" target="_blank" rel="noopener">CSS在线压缩</a></p><p><a href="https://segmentfault.com/a/1190000000391762" target="_blank" rel="noopener">BEM —— 源自Yandex的CSS 命名方法论</a><br><a href="http://www.divcss5.com/jiqiao/j4.shtml" target="_blank" rel="noopener">DIV+CSS规范命名大全集合</a><br><a href="http://www.php.cn/div-tutorial-381518.html" target="_blank" rel="noopener">HTML里的命名规则</a><br><a href="https://www.zhihu.com/question/19586885" target="_blank" rel="noopener">如何规范 CSS 的命名和书写？</a></p><p><a href="http://www.zhangxinxu.com/wordpress/2010/09/%E7%B2%BE%E7%AE%80%E9%AB%98%E6%95%88%E7%9A%84css%E5%91%BD%E5%90%8D%E5%87%86%E5%88%99%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">“装逼”的精简高效的CSS命名准则/方法</a></p><p><a href="http://www.zhangxinxu.com/wordpress/2010/07/css%E6%A0%B7%E5%BC%8F%E5%88%86%E7%A6%BB%E4%B9%8B%E5%86%8D%E5%88%86%E7%A6%BB/" target="_blank" rel="noopener">“装逼”的CSS样式分离之再分离</a></p><p><a href="https://blog.csdn.net/u012182639/article/details/76063580" target="_blank" rel="noopener">前端人员必看CSS命名规范</a></p><p><a href="http://jigsaw.w3.org/css-validator/" target="_blank" rel="noopener">CSS校验网站</a></p><p>css基础语法<br>selector{property:value}<br>例如：h1{color:red;font-size:14px;}<br>如果值大于1个单词，则要加上引号 p{font-family:”sans serif”;}</p><p>引用方法</p><p><link href="mycss.css" type="text/css" rel="stylesheet"><br>其中最后一个rel=”stylesheet”是指链接文档和被链接文档的关系为外部样式</p><p>在有父类子类中，已经定义的子类不会被新的单独的覆盖<br>如：<br>li strong{color=red;}<br>strong{color=blue;}  这里显示的还是红的</p><p>id跟派生一起用：<br>/#divid p{color=red;} 只有div里头的p标签内字变红色<br>类选择器跟id差不多，不同是类可以重复用，前面不是#，是.</p><p>属性选择器，写在head中的sytle里<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/cee"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-attr">[title]</span>&#123; </span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-attr">[title=te]</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"t"</span>&gt;</span>蓝色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"te"</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>设置背景图片</strong></p><p>bcakground-color:blue;<br>background-image:url(“bg.jpg”);<br>background-repeat:no-repeat;是否重复以填充<br>background-attachment:fixed;背景固定，滚动的时候也不动<br>background-size:图片尺寸<br>background-origin:定位区域<br>background-clip:绘制区域</p><p><strong>设置文本样式</strong></p><p>color 文本颜色<br>direction 文本方向<br>line-height 行高<br>letter-spacing 字符间距<br>text-align 对齐元素中的文本<br>text-decoration 给文本添加修饰<br>text-indent 缩进元素中文本的首行 可以是xx em或者是百分多少<br>text-transform 元素中的字母，可以改成首字母大写，全大写，全小写<br>unicode-bidi 设置文本方向<br>white-space 元素中空白的处理方式<br>word-spacing 字间距<br>text-shadow 设置文本阴影，包括水平垂直偏移度，大小和颜色等<br>text-wrap 设置自动换行</p><p><strong>设置字体</strong><br>font-family 设置字体系列 如宋体<br>    可以通过@font-face{font-family:myfont;<br>                        src:url(xx);}引入字体<br>font-size 设置字体尺寸<br>font-style 设置字体风格<br>font-variant 以小型大写字体或正常字体显示<br>font-weight 设置字体的粗细</p><p><strong>链接</strong><br>a:link{color:blue;text-decoration:none} 普通未被访问<br>后面那个是去掉下划线<br>a:visited 已访问链接<br>a:hover 鼠标位于链接上方<br>a:active 链接被点击的时刻</p><p><strong>列表</strong><br>list-style 简写列表项<br>list-style-image 列表项图像<br>list-style-position 列表标志位置<br>list-style-type 列表类型，如空心圆，实心圆等</p><p><strong>表格</strong><br>border 边框宽度，颜色<br>border-collapse 折叠边框，把两条线的边框弄成一条</p><p><strong>轮廓</strong><br>outline 轮廓属性<br>outline-color 轮廓颜色<br>outline-style 轮廓样式<br>outline-width 轮廓宽度</p><p><strong>定位</strong><br>position 位置：relative相对布局 absolute绝对布局 fixed不动 static偏移量无效<br>top 上偏移量<br>left 左偏移量<br>right 右偏移量<br>bottom 下偏移量<br>overflow 溢出设置<br>clip 显示形状<br>vertical-align 垂直对齐方式<br>z-index 元素堆叠顺序  谁数值大谁在上面</p><p><strong>浮动</strong><br>float可以让元素浮在上面，值包括以下<br>left:向左浮动<br>right：向右浮动<br>none:不浮动<br>inherit：从父类继承浮动</p><p>clear去掉浮动，值包括以下<br>left right 去掉左右浮动<br>both 左右都去掉<br>inherit 去掉父类继承浮动</p><p><strong>盒子模型</strong><br>margin 外边距<br>border 边框<br>padding 内边距<br>content 内容</p><p>border-style：共有十中，定义边框样式<br>border-top-style单边框样式<br>border-left-style单边框样式<br>border-right-style单边框样式<br>border-bottom-style单边框样式</p><p>border-width 边框宽度<br>与style相同，可以定单独定义四个边框宽度</p><p>border-color 边框颜色<br>与style相同，可以单独定义四条边框颜色</p><p>border-radius 圆角边框<br>box-shadow 边框阴影<br>border-image 边框图片</p><p>padding 设置所有边距<br>padding-bottom 底边距<br>padding-left 左边距<br>padding-right 右边距<br>padding-top 上边距</p><p>margin 设置所有外边距 左右自动auto时会变成居中的<br>margin-bottom 底外边距<br>margin-left 左外边距<br>margin-right 右外边距<br>margin-top 上外边距</p><p>两个盒子如果顺序放会发生盒子合并的效果，距离取较大值</p><p><strong>对齐操作</strong><br>方法一：设置margin-left和right为auto会自适应为居中<br>方法二：使用position左右对齐<br>    position:absolute;left:0px;<br>方法三：使用float左右对齐<br>    float:right;</p><p><strong>尺寸操作</strong><br>设置line-height 设置行高，如line-height=200%则行间距为一行</p><p>max-height<br>min-height<br>max-width 设置最大宽度，如英文的有时候会直接放到第二行<br>min-width</p><p>cursor 指向某元素上的时候指针类型<br>display 设置元素显示方式<br>visibility 设置元素是否可见 hidden visible</p><p><strong>图片</strong><br>opacity设置透明度 1是不透明，0是完全透明</p><p><strong>选择器</strong></p><p>1、元素选择器，可以对p、a等设置选择器<br>/*{}通配符，一般用来除掉边距<br>2、类选择器，利用.class{}来定义<br>也可以结合元素来用如a.class{}<br>两个类选择器也可以组合，如.class1.class2，这个时候，使用该类的为class=”class1 class2”</p><p>3、ID选择器，利用/#class{}来定义<br>ID只可以使用一次，class可以多次使用<br>ID不能结合组合使用<br>当使用js的时候，需要用到id，因为js里头有个方法叫getelementbyID<br>属性选择器，就是定义在本文件中，用<style>包括进来的部分<br>里头可以通过部分属性选择，如[style~=”hello”],这样包括hello的都会变成设置样式</p><p>4 后代选择器<br>元素作为元素的后代，如<p>this is <strong>ya<i>me</i></strong></p><br>p strong i{color:red;}这样me就变红了</p><p>5 子元素选择器<br>只有子元素可以，孙子元素不继承<br>p&gt;strong&gt;i me才会变红，要一层一层下去</p><p><strong>动画</strong></p><p>2D转换,需要给所有浏览器分别加上，因为不同浏览器会有不支持<br>transform:translate 移动<br>transform:rotate 旋转<br>transform:scale 缩放<br>transform:skew 倾斜变成菱形</p><p>3D转换<br>transform:rotateX<br>transform:roateY</p><p><strong>过渡</strong><br>transition<br>transition-property 过渡名称<br>transition-durantion 过渡时间<br>transition-timing-function 过渡时间曲线<br>transition-delay 过渡开始时间</p><p><strong>多列</strong><br>创建多列来对文本或者区域进行布局<br>column-count 分列数<br>column-gap 每列之间的间隔<br>column-rule</p><p><strong>瀑布流</strong><br>每列宽度相同，高度不同<br>可以用多列来实现瀑布流</p><p><strong>OO CSS</strong></p><p>OO CSS将页面可重用元素抽象成一个类，用class加以描述，而与其对应的HTML即可看成是此类的一个实例。</p><blockquote><p> 不要直接定义子节点，应把共性声明放到父类<br> 结构和皮肤相分离<br> 容器和内容相分离<br> 抽象出可重用的元素，建好组件库，在组件库内寻找可用的元素组装界面<br> 往你想要扩展的对象本身增加class而不是他的父节点<br> 对象应保持独立性<br> 避免使用ID选择器，权重太高，无法重用<br> 避免位置相关的样式<br> 保证选择器相同权重<br> 类名 简短 清晰 语义化 OO CSS的名字并不影响HTML语义化</p></blockquote><p>reset css库，全部回归，把所有默认的东西都置成了0或者空的<br>normalize.css库 统一不同浏览器的样式<br><a href="http://thx.github.io/cube/doc/neat">Neat.css</a>来自阿里妈妈，基于normalize.css的全新reset</p></style></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;易有太极，是生两仪，两仪生四象，四象生八卦。  ——《易传》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Java中通过总结共性，不断抽离出父类，以实现代码复用；通过继承，可不断对原有父类进行功能扩展。CSS与之类似，也是关于抽离、扩展和复用的艺术。&lt;br&gt;在对CSS进行分离的过程中，需要考虑以下问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;分离层级越多，渲染开销越大&lt;/li&gt;
&lt;li&gt;分离层级越少，样式复用率越低，样式冲突率越高&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="CSS" scheme="https://panxiang315.github.io/categories/programme/CSS/"/>
    
    
      <category term="CSS" scheme="https://panxiang315.github.io/tags/CSS/"/>
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>中国古代王朝汇总</title>
    <link href="https://panxiang315.github.io/history/reprint/chronicle/"/>
    <id>https://panxiang315.github.io/history/reprint/chronicle/</id>
    <published>2018-06-07T02:00:49.000Z</published>
    <updated>2018-06-08T10:24:59.051Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;中国古代各封建王朝暨各朝皇帝始末一览表</p><a id="more"></a><hr><h1 id="秦朝"><a href="#秦朝" class="headerlink" title="秦朝"></a>秦朝</h1><p><strong>首都</strong>：&lt;咸阳&gt;<br><strong>简介</strong>：秦朝是中国历史上一个极为重要的朝代，由战国时代后期的秦国发展起来的统一大国，它结束了自春秋起五百年来分裂割据的局面，成为中国历史上第一个统一的、多民族的、中央集权的封建国家。自秦始皇赢政至秦三世子婴，共传三帝，享国十五年，公元前206 年十月，秦朝灭亡。  </p><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">嬴政（赵政）</td><td class="tac-w15">前259 —前210</td><td class="tac-w15">秦始皇</td><td class="tal-w55">一统中国、大统钱字、城筑北击、焚书坑儒、废封立郡</td></tr><tr><td class="tac-w15">嬴胡亥（赵胡亥）</td><td class="tac-w15">前230 —前207 </td><td class="tac-w15">秦二世</td><td class="tal-w55">苛政暴政、泯性杀亲、残害忠良、天真顽劣、死于阉党</td></tr><tr><td class="tac-w15">嬴子婴（赵姓）</td><td class="tac-w15">？ — 前206</td><td class="tac-w15">秦三世</td><td class="tal-w55">诛杀赵高、投降刘邦、死于项羽</td></tr></table><hr><h1 id="汉朝"><a href="#汉朝" class="headerlink" title="汉朝"></a>汉朝</h1><p><strong>首都</strong>：西汉&lt;咸阳&gt;、东汉&lt;洛阳&gt;<br><strong>简介</strong>：两汉时期是当时世界上一个伟大的一段历史，共经422年，成为东方第一大帝国，与西罗马并称两大帝国，中亚和西域各大国也都闻而惧之。首次开辟了著名的“丝绸之路”，开通了东西方贸易的通道，中国从此成为世界贸易体系的中心，直到一千多年后蒙古人的崛起。正是因为汉朝的声威远播，外族开始称呼中国人为“汉人”，而汉朝人也乐于这样称呼自己，“汉”从此成为了伟大的中国华夏民族的永远的名字同时深深影响着多少代儿女。  </p><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">西汉•刘邦</td><td class="tac-w15">前256—前195</td><td class="tac-w15">汉高祖</td><td class="tal-w55">白蛇起义、楚汉之争、建立大汉、豁达大度，从谏如流</td></tr><tr><td class="tac-w15">西汉•刘盈</td><td class="tac-w15">前211—前188</td><td class="tac-w15">汉惠帝</td><td class="tal-w55">至孝至仁、上乘父制，下尽职守、为文景之治建立基础</td></tr><tr><td class="tac-w15">西汉•刘恭</td><td class="tac-w15">？—前184</td><td class="tac-w15">汉前少帝</td><td class="tal-w55">吕后所立、又为其所害、终生无政治绩效、罢黜而死</td></tr><tr><td class="tac-w15">西汉•刘弘</td><td class="tac-w15">? —前180</td><td class="tac-w15">汉后少帝</td><td class="tal-w55">吕后所立、荡涤诸吕时因非惠帝孙而被陈平等人废黜</td></tr><tr><td class="tac-w15">西汉•刘恒</td><td class="tac-w15">前203—前157</td><td class="tac-w15">汉文帝</td><td class="tal-w55">与民休息、轻徭赋薄、推汉走向鼎盛奠定根基</td></tr><tr><td class="tac-w15">西汉•刘启</td><td class="tac-w15">前188—前141</td><td class="tac-w15">汉景帝</td><td class="tal-w55">平乱固权、清静恭俭、发展教育、打击豪强、文景之治</td></tr><tr><td class="tac-w15">西汉•刘彻</td><td class="tac-w15">前156—前87</td><td class="tac-w15">汉武帝</td><td class="tal-w55">雄才武略、空前政为、创造了中华民族史上数个第一</td></tr><tr><td class="tac-w15">西汉•刘弗</td><td class="tac-w15">前94－前74</td><td class="tac-w15">汉昭帝</td><td class="tal-w55">承接父业、四夷来朝、中兴稳定、后因多病不治而死</td></tr><tr><td class="tac-w15">西汉•刘贺</td><td class="tac-w15">前92—前59</td><td class="tac-w15">汉废帝</td><td class="tal-w55">荒淫无度、不顾社稷、霍以不看重任而在位27天被废</td></tr><tr><td class="tac-w15">西汉•刘询</td><td class="tac-w15">前92─前49</td><td class="tac-w15">汉宣帝</td><td class="tal-w55">巫蛊之祸、霍光拥立为皇、实现昭宣中兴、清除霍氏</td></tr><tr><td class="tac-w15">西汉•刘奭</td><td class="tac-w15">前74─前33</td><td class="tac-w15">汉元帝</td><td class="tal-w55">纯任德教、尊崇儒学、昭君初赛汉匈言和、西汉转弱</td></tr><tr><td class="tac-w15">西汉•刘骜</td><td class="tac-w15">前51—前7</td><td class="tac-w15">汉成帝</td><td class="tal-w55">湛于酒色、荒淫无道、不理朝政、赵氏乱内、外家擅朝</td></tr><tr><td class="tac-w15">西汉•刘欣</td><td class="tac-w15">前25—前1</td><td class="tac-w15">汉哀帝</td><td class="tal-w55">有治国之志无治国之才、断袖之癖、王莽篡位西汉没落</td></tr><tr><td class="tac-w15">西汉•刘衎</td><td class="tac-w15">前9－6</td><td class="tac-w15">汉平帝</td><td class="tal-w55">一国之君无奈于王莽之阴险、迫取王莽女、后被莽害死</td></tr><tr><td class="tac-w15">西汉•刘婴</td><td class="tac-w15">4－25</td><td class="tac-w15">孺子婴</td><td class="tal-w55">婴继位时，莽摄政，无实际权力多为傀儡、东汉亡</td></tr><tr><td class="tac-w15">西汉•刘玄</td><td class="tac-w15">生不详—</td><td class="tac-w15">更始帝</td><td class="tal-w55">才智平庸、性格懦弱、一继任即沉醉于宫廷生活</td></tr><tr><td class="tac-w15">东汉•刘秀</td><td class="tac-w15">前6年-57</td><td class="tac-w15">光武帝</td><td class="tal-w55">平乱王莽、兴建太学、提倡儒术、尊崇节义、可算贤明君王</td></tr><tr><td class="tac-w15">东汉•刘庄</td><td class="tac-w15">28－75</td><td class="tac-w15">汉明帝</td><td class="tal-w55">刑名文法、为政苛察、总揽权柄、权不借下、高不逊色</td></tr><tr><td class="tac-w15">东汉•刘炟</td><td class="tac-w15">58—88</td><td class="tac-w15">汉章帝</td><td class="tal-w55">倡导儒学、厚德行政、创明章盛世、放纵外戚而转危</td></tr><tr><td class="tac-w15">东汉•刘肇</td><td class="tac-w15">79—106</td><td class="tac-w15">汉和帝</td><td class="tal-w55">扫平外戚窦氏夺回政权、亲民宽政对外修和、英年早逝</td></tr><tr><td class="tac-w15">东汉•刘隆</td><td class="tac-w15">105—106</td><td class="tac-w15">汉殇帝</td><td class="tal-w55">中国帝王中即位年龄最小、寿命最短的皇帝（百日皇帝）</td></tr><tr><td class="tac-w15">东汉•刘祜</td><td class="tac-w15">94—125</td><td class="tac-w15">汉安帝</td><td class="tal-w55">掌权后与邓氏争权、但委政于宦官，无所不为死于巡游</td></tr><tr><td class="tac-w15">东汉•刘保</td><td class="tac-w15">115—144</td><td class="tac-w15">汉顺帝</td><td class="tal-w55">毅七月死、政变继位、宦官乱政、民不聊生、十九而死</td></tr><tr><td class="tac-w15">东汉•刘炳</td><td class="tac-w15">143—145</td><td class="tac-w15">汉冲帝</td><td class="tal-w55">终年三岁、宦官外戚乱政、朝廷腐败、九江暴乱、无为</td></tr><tr><td class="tac-w15">东汉•刘缵</td><td class="tac-w15">138—146</td><td class="tac-w15">汉质帝</td><td class="tal-w55">帝幼伶俐、继位未年、梁翼专权后被其以毒而害、九亡</td></tr><tr><td class="tac-w15">东汉•刘志</td><td class="tac-w15">132—167</td><td class="tac-w15">汉桓帝</td><td class="tal-w55">偶然为帝、外戚宦官、放姿纵恶、百般无奈、无功而终</td></tr><tr><td class="tac-w15">东汉•刘宏</td><td class="tac-w15">156—189</td><td class="tac-w15">汉灵帝</td><td class="tal-w55">政治黑暗、社会混乱、黄巾起义、官宦为王、一生无为</td></tr><tr><td class="tac-w15">东汉•刘辩</td><td class="tac-w15">176—190</td><td class="tac-w15">汉少帝</td><td class="tal-w55">何家掌政、董卓废之、行为轻摇无帝之威仪、卓害其死</td></tr><tr><td class="tac-w15">东汉•刘协</td><td class="tac-w15">181—234</td><td class="tac-w15">汉献帝</td><td class="tal-w55">乱世之帝、形同虚设、卓死后曹代刘政、庸碌一生汉亡</td></tr></table><hr><h1 id="三国（魏、蜀、吴）"><a href="#三国（魏、蜀、吴）" class="headerlink" title="三国（魏、蜀、吴）"></a>三国（魏、蜀、吴）</h1><p>三国（公元220年～280年，另有184年、190年或208年起始说）是中国历史上东汉与西晋之间的分裂对峙时期，有曹魏（魏国） 、蜀汉（蜀国）、东吴（吴国）三个政权。三国的政治、经济、外交，各具特色，充满生机。184年黄巾起义后，东汉开始失去政权实体，群雄割据纷争，东汉名存实亡。208年的赤壁之战初步奠定了三国鼎立的格局。220年，曹丕废汉献帝，在洛阳称帝建魏，东汉灭亡。此后刘备、孙权先后称帝做王，魏、蜀、吴三国鼎立局面正式形成。</p><h2 id="曹魏"><a href="#曹魏" class="headerlink" title="曹魏"></a>曹魏</h2><p><strong>首都</strong>：&lt;洛阳&gt;<br><strong>简介</strong>：魏国（220年12月10日－265 2月4日），也称曹魏，是中国汉朝末期三国之中最强大的一个政权。始于220年曹丕逼迫汉献帝刘协禅让帝位，改汉为魏。至265 年魏又被司马炎篡夺，改号为晋。曹操虽未称帝，但曹丕称帝后追封他为魏太祖（又称魏武帝） ，曹魏计曹操共6 帝。魏是三国时期最为强大，领土最辽阔的国家。由于曹魏在三国之中占据最大地区，盘踞中原一带，而这区人口也是最多；加上有汉室禅让，向来被视为正统王朝。期间最重要的改革有陈群的九品中正制，对魏晋时代之政治产生深远影响。后司马炎以接受禅让为名，代魏为晋。历五帝，共四十六年。  </p><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">曹操</td><td class="tac-w15">155—220</td><td class="tac-w15">魏武帝</td><td class="tal-w55">魏国缔造、褒贬不一、正是清平之奸贼，乱世之英雄，</td></tr><tr><td class="tac-w15">曹丕</td><td class="tac-w15">187—226</td><td class="tac-w15">魏文帝</td><td class="tal-w55">承接父业、魏国建立、政绩颇显、伐吴败后大病不起</td></tr><tr><td class="tac-w15">曹睿</td><td class="tac-w15">204—239</td><td class="tac-w15">魏明帝</td><td class="tal-w55">一生均于三国战事中、任司马懿为将、抵抗外敌、病死</td></tr><tr><td class="tac-w15">曹芳</td><td class="tac-w15">239—254</td><td class="tac-w15">魏哀帝</td><td class="tal-w55">曹爽司马懿辅政、司马氏开始把持魏国朝政、无为而去</td></tr><tr><td class="tac-w15">曹髦</td><td class="tac-w15">241—260</td><td class="tac-w15">魏废帝</td><td class="tal-w55">识破司马之心、创造出“司马昭之心路人皆知”之名句</td></tr><tr><td class="tac-w15">曹奂</td><td class="tac-w15">246—302</td><td class="tac-w15">魏元帝</td><td class="tal-w55">无权无势之傀儡、无政绩、禅让于司马炎、软禁而死</td></tr></table><h2 id="蜀汉"><a href="#蜀汉" class="headerlink" title="蜀汉"></a>蜀汉</h2><p><strong>首都</strong>：&lt;成都&gt;<br><strong>简介</strong>：公元221年―263年，刘备在四川（蜀）成都称帝，续汉之大统，国号「汉」。刘备为汉中山王刘胜之后，其国号“汉”意味着是东汉的延续，又因其占据益州，俗称蜀地，其政权历史上也称“蜀汉”。国土在今四川东部和云南、贵州北部以及陕西汉中一带，蜀汉怀帝时为魏所灭。始于昭烈帝刘备，终于后主刘禅，共2帝。  </p><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">刘备</td><td class="tac-w15">161—223</td><td class="tac-w15">蜀汉昭烈帝</td><td class="tal-w55">建立蜀汉、弘毅宽厚、仁治天下、托孤诸葛、心神无二</td></tr><tr><td class="tac-w15">刘禅</td><td class="tac-w15">207—271</td><td class="tac-w15">蜀汉怀帝</td><td class="tal-w55">平庸无能、主动投降、乐不思蜀、扶不起的阿斗</td></tr></table><h2 id="东吴"><a href="#东吴" class="headerlink" title="东吴"></a>东吴</h2><p><strong>首都</strong>：&lt;武昌、南京&gt;<br><strong>简介</strong>：建安元年（196）献帝都许以后，孙策拒袁术而联曹操，受封为吴侯。建安四年，孙策取得豫章郡地。建安五年孙策死，策弟孙权统众。建安十三年孙权由吴徙治京城（今江苏镇江）。筹划赤壁之战，势力达于荆州；十五年取得岭南。建安十六年孙权徙治秣陵，次年，改秣陵为建业。据有今福建、广东、广西、湖南的广大地区。280年，西晋军队攻破东吴，吴国灭亡。  </p><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">孙坚</td><td class="tac-w15">156—191</td><td class="tac-w15">吴武烈帝</td><td class="tal-w55">东汉末期名将、吴国奠基人、打仗勇猛命丧战场</td></tr><tr><td class="tac-w15">孙权</td><td class="tac-w15">182—252</td><td class="tac-w15">吴大帝</td><td class="tal-w55">十五而立、稳固江东、政治能家、晚年昏庸滥杀无辜</td></tr><tr><td class="tac-w15">孙亮</td><td class="tac-w15">243—260</td><td class="tac-w15">会稽王</td><td class="tal-w55">生性聪慧、谋杀专权孙綝失败、帝位被废、沦为会稽王</td></tr><tr><td class="tac-w15">孙休</td><td class="tac-w15">235—264</td><td class="tac-w15">吴景帝</td><td class="tal-w55">颁布良制、嘉惠百姓、促进东吴繁荣、好文、征西失败</td></tr><tr><td class="tac-w15">孙和</td><td class="tac-w15">224—253</td><td class="tac-w15">吴文帝</td><td class="tal-w55">无多大政治作为、但是为人好善、后因诸葛氏自杀</td></tr><tr><td class="tac-w15">孙皓</td><td class="tac-w15">242—284</td><td class="tac-w15">吴末帝</td><td class="tal-w55">初位尚贤、而后残暴骄盈、好酒色、东吴自此而亡</td></tr></table><hr><h1 id="晋"><a href="#晋" class="headerlink" title="晋"></a>晋</h1><p><strong>首都</strong>：东晋&lt;洛阳&gt;、西晋&lt;南京&gt;<br><strong>简介</strong>：晋朝是中国历史上九个大一统朝代之一，分为西晋（265年—316年）与东晋（317年—420年）两个时期。263 年司马昭发兵攻蜀后，魏帝以并州等十郡封其为“晋公”，灭蜀后进爵为晋王。265年其子司马炎自立为皇帝，国号称“晋”，定都洛阳，史称西晋，共传四帝五十二年。五胡乱华，晋室南渡，琅邪王司马睿在建业重建东晋，共传十一帝一百零四年，两晋总历时一百五十六年。  </p><blockquote><p> （注：公元291 年西晋爆发八王之乱：汝南王司马亮、楚王司马玮、赵王司马伦、齐王司马冏、长沙王司马乂、成都王司马颍、河间王司马颙、东海王司马越，晋自五马渡江天下遂分为二，又有五胡乱华十九国并立）  </p></blockquote><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">西晋·司马懿</td><td class="tac-w15">179—251</td><td class="tac-w15">晋宣帝</td><td class="tal-w55">炎追封、曹魏任职创汗马功劳、司马氏族奠基晋之基础</td></tr><tr><td class="tac-w15">西晋·司马师</td><td class="tac-w15">208—255</td><td class="tac-w15">晋景帝</td><td class="tal-w55">炎追封、以父于战场厮杀、西晋奠基者之一</td></tr><tr><td class="tac-w15">西晋·司马昭</td><td class="tac-w15">211—265</td><td class="tac-w15">晋文帝</td><td class="tal-w55">炎追封、消灭蜀汉取曹自代、奠基西晋直接人物</td></tr><tr><td class="tac-w15">西晋·司马炎</td><td class="tac-w15">236—290</td><td class="tac-w15">晋武帝</td><td class="tal-w55">奉辈开晋、消灭东吴、结束三国纷争、其非贤明君主</td></tr><tr><td class="tac-w15">西晋·司马衷</td><td class="tac-w15">259—306</td><td class="tac-w15">晋惠帝</td><td class="tal-w55">昏庸无能、不学无术、八王之乱发生、政变后背毒死</td></tr><tr><td class="tac-w15">西晋·司马炽</td><td class="tac-w15">284—313</td><td class="tac-w15">晋怀帝</td><td class="tal-w55">内政动乱、匈奴南侵发永嘉之祸、举国衰败、刘聪毒害</td></tr><tr><td class="tac-w15">西晋·司马邺</td><td class="tac-w15">300—317</td><td class="tac-w15">晋愍帝</td><td class="tal-w55">国运衰落、民不聊生、出城降刘后被刘害、西晋告亡</td></tr><tr><td class="tac-w15">东晋·司马睿</td><td class="tac-w15">276—322</td><td class="tac-w15">晋元帝</td><td class="tal-w55">任用王导、移都江南、王马共治天下、东晋江南立足</td></tr><tr><td class="tac-w15">东晋·司马绍</td><td class="tac-w15">301—325</td><td class="tac-w15">晋明帝</td><td class="tal-w55">自小聪慧、见之长安与日、平定王敦之乱、巩固基业</td></tr><tr><td class="tac-w15">东晋·司马衍</td><td class="tac-w15">321—342</td><td class="tac-w15">晋成帝</td><td class="tal-w55">比较平庸、欲借外戚庾亮树己之风、虽无建树晋也安定</td></tr><tr><td class="tac-w15">东晋·司马岳</td><td class="tac-w15">322—344</td><td class="tac-w15">晋康帝</td><td class="tal-w55">在为两年、重用庾泳、庾翼、无任何政治建树、早亡</td></tr><tr><td class="tac-w15">东晋·司马聃</td><td class="tac-w15">343—361</td><td class="tac-w15">晋穆帝</td><td class="tal-w55">年幼继位又褚太后主政、桓温驱除庾氏、在为十七而亡</td></tr><tr><td class="tac-w15">东晋·司马丕</td><td class="tac-w15">341—365</td><td class="tac-w15">晋哀帝</td><td class="tal-w55">在为四年即病死、无任何政治建树、中信道士不老仙丹</td></tr><tr><td class="tac-w15">东晋·司马奕</td><td class="tac-w15">342—386</td><td class="tac-w15">晋废帝</td><td class="tal-w55">桓温借故逼褚废帝、被逼出宫降海西公、为保身安屈辱</td></tr><tr><td class="tac-w15">东晋·司马昱</td><td class="tac-w15">320—372</td><td class="tac-w15">晋简文帝</td><td class="tal-w55">温废帝后而立、一切以温是从、形同傀儡在位两年病亡</td></tr><tr><td class="tac-w15">东晋·司马曜</td><td class="tac-w15">362—392</td><td class="tac-w15">晋孝武帝</td><td class="tal-w55">略有作为、值桓温亡东晋危机过、被宫女用被子闷死</td></tr><tr><td class="tac-w15">东晋·司马德宗</td><td class="tac-w15">382—419</td><td class="tac-w15">晋安帝</td><td class="tal-w55">愚蠢无为、权落旁人、亲政桓玄失败、刘掌权、桓自立</td></tr><tr><td class="tac-w15">东晋·司马德文</td><td class="tac-w15">385—421</td><td class="tac-w15">晋恭帝</td><td class="tal-w55">在刘裕的策划下继位又在其的威逼下禅位，东晋告亡</td></tr><tr><td class="tac-w15">东晋·司马岳</td><td class="tac-w15">322—344</td><td class="tac-w15">晋康帝</td><td class="tal-w55">在为两年、重用庾泳、庾翼、无任何政治建树、早亡</td></tr><tr><td class="tac-w15">东晋·司马聃</td><td class="tac-w15">343—361</td><td class="tac-w15">晋穆帝</td><td class="tal-w55">年幼继位又褚太后主政、桓温驱除庾氏、在为十七而亡</td></tr><tr><td class="tac-w15">东晋·司马丕</td><td class="tac-w15">341—365</td><td class="tac-w15">晋哀帝</td><td class="tal-w55">在为四年即病死、无任何政治建树、中信道士不老仙丹</td></tr><tr><td class="tac-w15">东晋·司马奕</td><td class="tac-w15">342—386</td><td class="tac-w15">晋废帝</td><td class="tal-w55">桓温借故逼褚废帝、被逼出宫降海西公、为保身安屈辱</td></tr><tr><td class="tac-w15">东晋·司马昱</td><td class="tac-w15">320—372</td><td class="tac-w15">晋简文帝</td><td class="tal-w55">温废帝后而立、一切以温是从、形同傀儡在位两年病亡</td></tr><tr><td class="tac-w15">东晋·司马曜</td><td class="tac-w15">362—392</td><td class="tac-w15">晋孝武帝</td><td class="tal-w55">略有作为、值桓温亡东晋危机过、被宫女用被子闷死</td></tr><tr><td class="tac-w15">东晋·司马德宗</td><td class="tac-w15">382—419</td><td class="tac-w15">晋安帝</td><td class="tal-w55">愚蠢无为、权落旁人、亲政桓玄失败、刘掌权、桓自立</td></tr><tr><td class="tac-w15">东晋·司马德文</td><td class="tac-w15">385—421</td><td class="tac-w15">晋恭帝</td><td class="tal-w55">在刘裕的策划下继位又在其的威逼下禅位，东晋告亡</td></tr></table><hr><h1 id="隋朝"><a href="#隋朝" class="headerlink" title="隋朝"></a>隋朝</h1><p><strong>首都</strong>：&lt;长安、洛阳&gt;<br><strong>简介</strong>：大隋之盛世在中国乃至世界历史上空前绝后，当时社会是繁荣与开放的社会， 此时的中华帝国国泰民安、经济繁荣、文化昌盛、社会安定，户口锐长，垦田速增，积蓄充盈，甲兵强锐，威动殊俗，幅员万里。有隋文帝开创的“开皇之治”。大隋天子于西元581年二月甲子日接受北周皇帝禅让，建立了大隋皇朝，先以长安为都，后来又新建大兴城为京师、以洛阳为陪都，实行东西两京制：西京长安、东京洛阳。隋朝结束了南北朝对峙和五胡乱华的社会局面，于589年，挥师南下，灭了长期割据南方的南朝最后一个朝代陈朝，统一中国。  </p><blockquote><p> 注：南北朝（公元420年—公元589年）是中国历史上的一段分裂时期，由公元420 年刘裕篡东晋建立南朝宋开始，至公元589年隋灭南朝陈为止。该时期上承东晋、五胡十六国，下接隋朝，南北两势虽然各有朝代更迭，但长期维持对峙，所以称为南北朝。南朝（公元420年—公元589年）包含宋、齐、梁、陈四朝；北朝（公元439年—公元589年）则包含北魏、东魏、西魏、北齐和北周五朝。  </p></blockquote><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">杨忠</td><td class="tac-w15">507—568</td><td class="tac-w15">隋太祖</td><td class="tal-w55">西魏权臣之一、十二大将军随国公。建隋后追崇隋太祖</td></tr><tr><td class="tac-w15">杨坚</td><td class="tac-w15">541—604</td><td class="tac-w15">隋文帝</td><td class="tal-w55">建立隋朝、精心治国、隋朝从此进入统一、兴盛的局面</td></tr><tr><td class="tac-w15">杨广</td><td class="tac-w15">604—618</td><td class="tac-w15">隋炀帝</td><td class="tal-w55">伟大与罪恶并存、“河巡科藏”、在江都宇文化及所害</td></tr><tr><td class="tac-w15">杨昭</td><td class="tac-w15">584—606</td><td class="tac-w15">隋成帝</td><td class="tal-w55">本为太子还未登基即病死，后其子恭帝继位后加以追尊</td></tr><tr><td class="tac-w15">杨侑</td><td class="tac-w15">605—619</td><td class="tac-w15">隋恭帝</td><td class="tal-w55">炀出游命其守长安、李渊攻长安后立其为帝后废之</td></tr><tr><td class="tac-w15">杨浩</td><td class="tac-w15">不详—618</td><td class="tac-w15">无帝号</td><td class="tal-w55">宇文化及弑炀帝后而立，实为傀儡后被其废</td></tr><tr><td class="tac-w15">杨侗</td><td class="tac-w15">不详—619</td><td class="tac-w15">隋末帝</td><td class="tal-w55">炀出游命其守洛阳，炀亡后由王世充立一年后被王所废</td></tr></table><hr><h1 id="唐朝"><a href="#唐朝" class="headerlink" title="唐朝"></a>唐朝</h1><p><strong>首都</strong>：&lt;长安&gt;<br><strong>简介</strong>：唐朝（公元618年～907年），是世界公认的中国最强盛的时代之一。李渊于618年建立唐朝，以长安（今陕西西安）为首都。其鼎盛时期的公元7世纪时，中亚的沙漠地带也受其支配。在690年，武则天改国号“唐”为“周”，迁都洛阳，史称武周，也称“大周”。705年唐中宗李显恢复大唐国号，恢复唐朝旧制，还都长安。唐朝在天宝十四年（755年）安史之乱后日渐衰落， 至天祐四年（907年）梁王朱温篡位灭亡。唐历经21 位皇帝（含武则天），共289 年。唐在文化、政治、经济、外交等方面都有辉煌的成就，是当时世界上最强大的国家。唐朝连同隋朝被历史学家黄仁宇认为是相继于秦汉之后的中国第二帝国时期，日本历史学者则普遍认为唐朝是中国“中世”时期的结束。唐朝国力在中国历史上数一数二，因此华人也被称为“唐人”，现今西方华人聚居处也被称为“唐人街”。  </p><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">李渊</td><td class="tac-w15">566—635</td><td class="tac-w15">唐高祖</td><td class="tal-w55">唐朝开国皇帝、结束隋朝成就大唐兴旺重要奠基者</td></tr><tr><td class="tac-w15">李世民</td><td class="tac-w15">599—649</td><td class="tac-w15">唐太宗</td><td class="tal-w55">卓越君王、贞观之治、将大唐推向高峰、奠基顶峰基础</td></tr><tr><td class="tac-w15">李治</td><td class="tac-w15">628—683</td><td class="tac-w15">唐高宗</td><td class="tal-w55">承接父业实现“永徽之治”之盛世、武氏开始沉浮于此</td></tr><tr><td class="tac-w15">李显</td><td class="tac-w15">656—710</td><td class="tac-w15">唐中宗</td><td class="tal-w55">柔软无能、何事都取决于其母武皇太后、无大作为被废</td></tr><tr><td class="tac-w15">李旦</td><td class="tac-w15">662—716</td><td class="tac-w15">唐睿宗</td><td class="tal-w55">三让天下：武后、中宗、玄宗、一生安分平淡与世无争</td></tr><tr><td class="tac-w15">武则天</td><td class="tac-w15">624—705</td><td class="tac-w15">周武皇</td><td class="tal-w55">中国唯一女皇帝、对唐朝的经济、文化、疆域皆有贡献</td></tr><tr><td class="tac-w15">李重茂</td><td class="tac-w15">695—不详</td><td class="tac-w15">唐殤帝</td><td class="tal-w55">韦太后临朝称制，相王李旦执掌政务，无实权后被废</td></tr><tr><td class="tac-w15">李隆基</td><td class="tac-w15">685—762</td><td class="tac-w15">唐玄宗</td><td class="tal-w55">开元盛世而后又安史之乱、宠信杨贵妃、唐开始衰落</td></tr><tr><td class="tac-w15">李亨</td><td class="tac-w15">711—762</td><td class="tac-w15">唐肃宗</td><td class="tal-w55">安史受命、被尊为帝、用郭子仪李光弼趁内乱平定安史</td></tr><tr><td class="tac-w15">李毅</td><td class="tac-w15">726—779</td><td class="tac-w15">唐代宗</td><td class="tal-w55">登基后安史之乱平息后，计杀李辅国，经历吐蕃战事</td></tr><tr><td class="tac-w15">李适</td><td class="tac-w15">742—805</td><td class="tac-w15">唐德宗</td><td class="tal-w55">政绩平常、亲撰中医文献、写罪己诏向天下坦白错误</td></tr><tr><td class="tac-w15">李俑</td><td class="tac-w15">761—806</td><td class="tac-w15">唐顺宗</td><td class="tal-w55">随遇而安不争强好胜、勇敢面对政治现实</td></tr><tr><td class="tac-w15">李纯</td><td class="tac-w15">778—820</td><td class="tac-w15">唐宪宗</td><td class="tal-w55">勤勉政事、君臣同心、创大唐中兴、与太宗、玄宗齐名</td></tr><tr><td class="tac-w15">李恒</td><td class="tac-w15">795—824</td><td class="tac-w15">唐穆宗</td><td class="tal-w55">纵情享乐、毫无节制、惧死求生、三是而立即死</td></tr><tr><td class="tac-w15">李湛</td><td class="tac-w15">810—827</td><td class="tac-w15">唐敬宗</td><td class="tal-w55">政治无为、比穆宗有过之无不及在位两年后被宦官谋杀</td></tr><tr><td class="tac-w15">李昂</td><td class="tac-w15">809—840</td><td class="tac-w15">唐文宗</td><td class="tal-w55">政治黑暗，官宦争斗不断，文宗形同傀儡，抑郁而死</td></tr><tr><td class="tac-w15">李炎</td><td class="tac-w15">814—846</td><td class="tac-w15">唐武宗</td><td class="tal-w55">武宗灭佛、崇道弃佛、斯是如此倒也实现会昌中兴</td></tr><tr><td class="tac-w15">李怡</td><td class="tac-w15">810—859</td><td class="tac-w15">唐宣宗</td><td class="tal-w55">明察沉断用法无私、从谏如流重惜官赏、谓之小太宗</td></tr><tr><td class="tac-w15">李漼</td><td class="tac-w15">859—873</td><td class="tac-w15">唐懿宗</td><td class="tal-w55">沉湎玩乐、任相不明、爱慕虚荣、不惜官赏、骄淫奢侈</td></tr><tr><td class="tac-w15">李儇</td><td class="tac-w15">862—888</td><td class="tac-w15">唐僖宗</td><td class="tal-w55">听任官宦、黄巢起义建立大齐、其人躲在四川七年</td></tr><tr><td class="tac-w15">李晔</td><td class="tac-w15">867—904</td><td class="tac-w15">唐昭宗</td><td class="tal-w55">聪明又才能、分形唐朝形势、只可惜挽救已经无力回天</td></tr><tr><td class="tac-w15">李祝</td><td class="tac-w15">892—908</td><td class="tac-w15">唐哀帝</td><td class="tal-w55">哀帝当国、朱全忠当政、自此大唐灭亡、后被其弑杀</td></tr></table><hr><h1 id="宋朝"><a href="#宋朝" class="headerlink" title="宋朝"></a>宋朝</h1><p><strong>首都</strong>：北宋&lt;开封&gt;、南宋&lt;临安&gt;<br><strong>简介</strong>：宋朝（960年——1279年）是中国历史上承五代十国、下启元朝的时代，根据首都及疆域的变迁，可再分为北宋与南宋，合称两宋。北宋是中国历史上一个强盛的、繁荣的王朝。而此时也有西夏、大理、吐蕃、契丹、女真并存，也给宋朝的稳定带来了不利的影响。北宋于公元960 年由宋太祖赵匡胤建立，到公元1127 年政权南迁的这段时间，被称为北宋，定都开封。北宋王朝的建立，结束了自唐末而形成的四分五裂的的局面，使中国又归于统一，但由于与宋同时代的辽、金、西夏等国的强大，使北宋政权一直处于外族的危胁之中。南宋（1127年——1279年）是中国历史上的一个朝代，宋高宗赵构在临安（今杭州）重建宋朝，史称南宋，与金朝东沿淮水（今淮河），西以大散关为界。南宋与西夏、金朝和大理为并存政权。南宋偏安于淮水以南，是中国历史上封建经济发达、古代科技发展、对外开放程度较高，但军事实力较为软弱、政治上较为无能的一个王朝。</p><blockquote><p> 注：五代十国并非指一个朝代，而是指一个特殊的历史时期。五代指的是后梁、后唐、后晋、后汉、后周五个次第更迭的政权。十国指五代之外相继出现的十个割据政权：前蜀、后蜀、吴、南唐、吴越、闽、楚、南汉、南平（即荆南）、北汉，统称十国。关于五代十国的年限，一说为：北宋灭亡北汉时是公元979年，所以五代十国的历史时期为公元907 年到979 年。另一说为，五代十国存在于公元907 年－公元960 年期间。  </p></blockquote><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">北宋·赵匡胤</td><td class="tac-w15">927—976</td><td class="tac-w15">宋太祖</td><td class="tal-w55">陈桥兵变龙袍加身，创立大宋国、励精图治整治江山</td></tr><tr><td class="tac-w15">北宋·赵匡义</td><td class="tac-w15">939—997</td><td class="tac-w15">宋太宗</td><td class="tal-w55">政绩有为、不善武功、晚年教循规蹈矩，致积贫积弱</td></tr><tr><td class="tac-w15">北宋·赵恒</td><td class="tac-w15">998—1022</td><td class="tac-w15">宋真宗</td><td class="tal-w55">治理有方国日益坚固完善社会经济繁荣，史称咸平之治</td></tr><tr><td class="tac-w15">北宋·赵桢</td><td class="tac-w15">1010—1063</td><td class="tac-w15">宋仁宗</td><td class="tal-w55">仁义著称、出现包、范、欧阳、苏、王等名人</td></tr><tr><td class="tac-w15">北宋·赵曙</td><td class="tac-w15">1032—1067</td><td class="tac-w15">宋英宗</td><td class="tal-w55">颇有政治才能、英年早逝而有志无力、政治手段较成熟</td></tr><tr><td class="tac-w15">北宋·赵顼</td><td class="tac-w15">1048—1085</td><td class="tac-w15">宋神宗</td><td class="tal-w55">支持王安石变法但操之过快而失败、励精图治做好国君</td></tr><tr><td class="tac-w15">北宋·赵煦</td><td class="tac-w15">1076—1100</td><td class="tac-w15">宋哲宗</td><td class="tal-w55">继续推行变法，国虽稍有起色，但最终仍以失败而告终</td></tr><tr><td class="tac-w15">北宋·赵佶</td><td class="tac-w15">1082—1135</td><td class="tac-w15">宋徽宗</td><td class="tal-w55">生活奢侈、政治无为、宋江农民起义爆发、靖康难</td></tr><tr><td class="tac-w15">北宋·赵桓</td><td class="tac-w15">1100—1156</td><td class="tac-w15">宋钦宗</td><td class="tal-w55">优柔寡断、反复无常、与其父皆遭遇靖康之难而亡</td></tr><tr><td class="tac-w15">南宋·赵构</td><td class="tac-w15">1107—1187</td><td class="tac-w15">宋高宗</td><td class="tal-w55">临安自立是为南宋、政治平庸、酷爱书法艺术文学</td></tr><tr><td class="tac-w15">南宋·赵眘</td><td class="tac-w15">1127—1194</td><td class="tac-w15">宋孝宗</td><td class="tal-w55">南宋能力最强、最杰出、最节俭的皇帝</td></tr><tr><td class="tac-w15">南宋·赵惇</td><td class="tac-w15">1147—1200</td><td class="tac-w15">宋光宗</td><td class="tal-w55">昏庸、体弱多病、无治国安邦之才又听信谗言</td></tr><tr><td class="tac-w15">南宋·赵扩</td><td class="tac-w15">1168—1224</td><td class="tac-w15">宋宁宗</td><td class="tal-w55">赔款求全、在位期间均是碌碌无为之辈</td></tr><tr><td class="tac-w15">南宋·赵昀</td><td class="tac-w15">1205—1264</td><td class="tac-w15">宋理宗</td><td class="tal-w55">本非皇子但乃皇族、死后头颅被割制成器具、一生无为</td></tr><tr><td class="tac-w15">南宋·赵禥</td><td class="tac-w15">1240—1274</td><td class="tac-w15">宋度宗</td><td class="tal-w55">昏庸无能、沉迷美色、南宋从此岌岌可危、面临灭亡</td></tr><tr><td class="tac-w15">南宋·赵显</td><td class="tac-w15">1271—1323</td><td class="tac-w15">宋恭帝</td><td class="tal-w55">贾似道当权、元军进攻其被俘、被派往藏区后成高僧</td></tr><tr><td class="tac-w15">南宋·赵昰</td><td class="tac-w15">1269—1278</td><td class="tac-w15">宋端宗</td><td class="tal-w55">元进犯其南逃、闽粤港都有其之身影、后病死葬于江门</td></tr><tr><td class="tac-w15">南宋·赵昺</td><td class="tac-w15">1272—1279</td><td class="tac-w15">宋末王</td><td class="tal-w55">流亡政府海丰被击垮、文天祥被俘、昺跳海而亡、宋亡</td></tr></table><hr><h1 id="元朝"><a href="#元朝" class="headerlink" title="元朝"></a>元朝</h1><p><strong>首都</strong>：大都北京<br><strong>简介</strong>：元朝（1271年－1368年），是中国历史上的一个朝代，中国历史上第一个由少数民族（蒙古族）建立并统治全国的封建王朝。由蒙古族统治者忽必烈于1271年所建，定都于大都（今北京市），国号大元，1218年蒙古灭西辽，1227年灭西夏，1234年灭金国，1246年招降吐蕃，1253年灭大理，1279年击败南宋残余势力，元朝最终统一中国。1279年灭南宋。统治地区西到新疆东部，西南包括西藏、云南及缅甸北部，北至西伯利亚南部，越过贝加尔湖（一说直到北冰洋），东到鄂霍次克海。1368年被朱元璋建立的明朝北伐所推翻。其残余势力退居漠北，与明军对峙，史称北元，元朝正式结束的时间是1635年，1635年四月，后金皇太极派多尔衮、岳托、萨哈璘、豪格率军远征察哈尔余部。额哲与母亲苏泰太后献元朝传国玉玺投降。元朝正式结束。  </p><table><tr><th class="tac-w15">皇帝称谓（汉名）</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">谥庙称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">孛儿只斤成吉思汗</td><td class="tac-w15">1162—1227</td><td class="tac-w15">元太祖</td><td class="tal-w55">蒙古帝国和大元朝的奠基者、杰出的军事家、其子追封</td></tr><tr><td class="tac-w15">孛儿只斤拖雷汗</td><td class="tac-w15">1193—1232</td><td class="tac-w15">元睿宗</td><td class="tal-w55">窝阔台继位后其为监国、子忽必烈追封、矫勇善战</td></tr><tr><td class="tac-w15">孛儿只斤窝阔台汗</td><td class="tac-w15">1186—1241</td><td class="tac-w15">元太宗</td><td class="tal-w55">扩张国土、南北西征、忽必烈继位后追尊为太宗</td></tr><tr><td class="tac-w15">孛儿只斤贵由汗</td><td class="tac-w15">1206—1248</td><td class="tac-w15">元定宗</td><td class="tal-w55">母归政在位期间收服吐蕃全境、此后新疆归入大元版图</td></tr><tr><td class="tac-w15">孛儿只斤蒙哥汗</td><td class="tac-w15">1208—1259</td><td class="tac-w15">元孝宗</td><td class="tal-w55">雷长子、攻俄罗斯、灭大理灭南宋、元朝大疆初定</td></tr><tr><td class="tac-w15">孛儿只斤忽必烈</td><td class="tac-w15">1215—1294</td><td class="tac-w15">元世祖</td><td class="tal-w55">攻打日本、印度、缅甸、发展经济、元朝之名始于该帝</td></tr><tr><td class="tac-w15">奇渥温铁穆耳</td><td class="tac-w15">1265—1307</td><td class="tac-w15">元成宗</td><td class="tal-w55">整顿军政、免除江南税收、社会压力缓和、平息战乱</td></tr><tr><td class="tac-w15">孛儿只斤海山</td><td class="tac-w15">1281—1311</td><td class="tac-w15">元武宗</td><td class="tal-w55">元朝逐渐强大、是一位明主、打印钱钞、物价上涨</td></tr><tr><td class="tac-w15">爱育黎拔力八达</td><td class="tac-w15">1285—1320</td><td class="tac-w15">元仁宗</td><td class="tal-w55">元朝贤明君主、固定中国固有版图、大举改革、元强盛</td></tr><tr><td class="tac-w15">孛儿只斤硕德八剌</td><td class="tac-w15">1303—1323</td><td class="tac-w15">元英宗</td><td class="tal-w55">以儒治国、颁布元朝大元通制、南坡之变被杀</td></tr><tr><td class="tac-w15">也孙铁木儿</td><td class="tac-w15">1276—1328</td><td class="tac-w15">泰定帝</td><td class="tal-w55">在位期间国家比较安宁、也出现暴乱、软硬政策平反</td></tr><tr><td class="tac-w15">孛儿只斤阿速吉八</td><td class="tac-w15">生卒不详</td><td class="tac-w15">天顺帝</td><td class="tal-w55">与元文帝争天下、后只当了一个月的皇帝就不知所踪</td></tr><tr><td class="tac-w15">孛儿只斤图帖睦尔</td><td class="tac-w15">1304—1332</td><td class="tac-w15">元文宗</td><td class="tal-w55">知枢密院事燕铁木儿发动政变，谋立其为帝较有政为</td></tr><tr><td class="tac-w15">孛儿只斤和世梀</td><td class="tac-w15">1300—1329</td><td class="tac-w15">元明宗</td><td class="tal-w55">文宗兄、文宗逊位迎接他时又将其害死</td></tr><tr><td class="tac-w15">孛儿只斤懿璘质班</td><td class="tac-w15">1326—1332</td><td class="tac-w15">元宁宗</td><td class="tal-w55">文宗为赎罪传位于明宗次子就是元宁宗，43天后病死</td></tr><tr><td class="tac-w15">氏同上妥欢贴睦尔</td><td class="tac-w15">1320—1370</td><td class="tac-w15">元惠宗</td><td class="tal-w55">爆发红巾军起义、元虽胜但因起义势力大、元退居漠北</td></tr><tr><td class="tac-w15">爱猷识理答腊</td><td class="tac-w15">1338—1378</td><td class="tac-w15">元昭宗</td><td class="tal-w55">势力还是很强大，已经退居漠北、中原之地与其无关</td></tr><tr><td class="tac-w15">脱古思帖木儿</td><td class="tac-w15">1378—1388</td><td class="tac-w15">元平宗</td><td class="tal-w55">想恢复元朝势力和失地、只可惜无力回天、后被部将杀</td></tr></table><hr><h1 id="明朝"><a href="#明朝" class="headerlink" title="明朝"></a>明朝</h1><p><strong>首都</strong>：南京、北京<br><strong>简介</strong>：明朝（公元1368年～1644年），又称大明王朝、大明帝国。1368年明太祖朱元璋在应天称帝，国号“大明”。同年以“驱逐胡虏，恢复中华”为号召进行北伐，明军攻占元朝首都大都（今北京），元顺帝北逃，元朝灭亡。明初以应天府（今南京）为京师，1421年（永乐十九年），明成祖朱棣迁都顺天府（今北京），南京应天府改为留都。明朝疆域达1100多万平方公里，包括内地两京十三省、东北、新疆东部、西藏、南海诸岛、今缅甸北部、西伯利亚东部等地，并曾在东南亚旧港等地设有羁縻管理机构，影响力波及整个亚洲和非洲东岸。1662年郑成功打败荷兰殖民者收复台湾，首次在台湾岛设立行政机构一府两县（东宁府，下辖天兴、万年两县）正式管理台湾全岛，台湾收归中国版图。明朝经济文化在中国历史上属于发达阶段。明朝早期君主集权强化，皇帝大权独揽。宣德以后，皇权开始削弱，权力在内阁与宦官之间争夺。从明朝晚期开始，西方伴随着文艺复兴、地理大发现和宗教改革，科技发展很快。与此同时，中国也涌现了徐光启，宋应星，徐霞客，冯梦龙等一大批科学家，地理学家和文学家西学也随着一批传教士来到中国，为东西文化的交流开辟了窗口与机会，中国传统科学技术进入了最后的加速发展阶段。  </p><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">年号称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">朱元璋</td><td class="tac-w15">1328—1398</td><td class="tac-w15">洪武</td><td class="tal-w55">起义反元、大明王朝缔造者、网罗天下名士</td></tr><tr><td class="tac-w15">朱允文</td><td class="tac-w15">1377—？</td><td class="tac-w15">建文</td><td class="tal-w55">重用文人实行改革惠民政策重视农桑后靖难之变被赶</td></tr><tr><td class="tac-w15">朱棣</td><td class="tac-w15">1360—1424</td><td class="tac-w15">永乐</td><td class="tal-w55">发动靖难、创永乐盛世、迁都北京、建紫禁皇城</td></tr><tr><td class="tac-w15">朱高炽</td><td class="tac-w15">1378—1425</td><td class="tac-w15">洪熙</td><td class="tal-w55">在位十个月后病死、与民生息发展明朝经济</td></tr><tr><td class="tac-w15">朱瞻基</td><td class="tac-w15">1398—1435</td><td class="tac-w15">宣德</td><td class="tal-w55">御驾亲征叛军，得胜而归、发展明朝全局、染病而亡</td></tr><tr><td class="tac-w15">朱祁镇</td><td class="tac-w15">1427—1464</td><td class="tac-w15">正统</td><td class="tal-w55">两次继位、在位期间因御驾亲征被俘、后受代宗软禁</td></tr><tr><td class="tac-w15">朱祁钰</td><td class="tac-w15">1428—1457</td><td class="tac-w15">景泰</td><td class="tal-w55">英宗被虏代宗被立、后英宗复辟将其以亲王待遇安葬</td></tr><tr><td class="tac-w15">朱见深</td><td class="tac-w15">1447—1487</td><td class="tac-w15">成化</td><td class="tal-w55">英宗复辟后立其为皇太子、政绩比较突出、贤明君主也</td></tr><tr><td class="tac-w15">朱祐樘</td><td class="tac-w15">1470—1505</td><td class="tac-w15">弘治</td><td class="tal-w55">勤于政事、驱除奸臣、明朝再度中兴盛事</td></tr><tr><td class="tac-w15">朱厚照</td><td class="tac-w15">1505—1521</td><td class="tac-w15">正德</td><td class="tal-w55">以嫡子继位、国运减弱、淫乱而无子嗣</td></tr><tr><td class="tac-w15">朱厚熜</td><td class="tac-w15">1507—1566</td><td class="tac-w15">嘉靖</td><td class="tal-w55">前期大有所为、后期迷恋仙丹、不问朝政、严嵩当国</td></tr><tr><td class="tac-w15">朱载垕</td><td class="tac-w15">1537—1572</td><td class="tac-w15">隆庆</td><td class="tal-w55">贞静仁义、隆庆开关解除海禁、内阁斗争明显</td></tr><tr><td class="tac-w15">朱翊均</td><td class="tac-w15">1563—1620</td><td class="tac-w15">万历</td><td class="tal-w55">李太后、高拱、张居正辅佐下中兴、后期怠政转危</td></tr><tr><td class="tac-w15">朱常洛</td><td class="tac-w15">1582—1620</td><td class="tac-w15">泰昌</td><td class="tal-w55">红丸案之后做了一个月皇帝就死、无任何作为</td></tr><tr><td class="tac-w15">朱由校</td><td class="tac-w15">1605—1627</td><td class="tac-w15">天启</td><td class="tal-w55">魏忠贤当道、社会黑暗、明朝的气数将尽、传位于其弟</td></tr><tr><td class="tac-w15">朱由检</td><td class="tac-w15">1611—1644</td><td class="tac-w15">崇祯</td><td class="tal-w55">清兵进犯、李自成起立、自毁长城、国破家亡后自缢</td></tr><tr><td class="tac-w15">朱由崧</td><td class="tac-w15">1607—1646</td><td class="tac-w15">弘光</td><td class="tal-w55">崇祯自缢后在南京建立南明小王朝、无能死于北京</td></tr><tr><td class="tac-w15">朱聿键</td><td class="tac-w15">1602—1646</td><td class="tac-w15">隆武</td><td class="tal-w55">想一举恢复明朝，只可惜无力回天、后被清兵所害</td></tr><tr><td class="tac-w15">朱聿鐭</td><td class="tac-w15">1605—1647</td><td class="tac-w15">绍武</td><td class="tal-w55">在广州被拥立为帝、一个月后被清兵害死，葬于越秀区</td></tr><tr><td class="tac-w15">朱由榔</td><td class="tac-w15">1602—1646</td><td class="tac-w15">永历</td><td class="tal-w55">在肇庆监国兵败逃到缅甸、后被吴三桂害死于云南</td></tr></table><hr><h1 id="清朝"><a href="#清朝" class="headerlink" title="清朝"></a>清朝</h1><p><strong>首都</strong>：北京<br><strong>简介</strong>：公元1636年～1911年，一说1616年建立，1644年起为全国性政权，又称大清，简称清，是中国历史上最后一个封建王朝，也是中国历史上第二个由少数民族（满族）建立并统治全国的封建王朝。1616年（明万历四十四年，后金天命元年），清太祖努尔哈赤建国称汗，国号大金，史称“后金”。1636年（明崇祯九年，清崇德元年），清太宗皇太极称帝，改国号为“大清”。1644年（明崇祯十七年、清顺治元年），李自成的大顺军攻占北京，明朝灭亡；驻守山海关的明将吴三桂降清，清摄政王多尔衮指挥清军入关，打败大顺农民军；同年清顺治帝迁都北京，从此清朝取代明朝成为全国的统治者。入关后20年时间里，清朝先后灭亡大顺、大西和南明等政权，基本统一全国。清朝最初建都于赫图阿拉（今辽宁新宾），1621年迁都辽阳，1625年迁都沈阳（改称“盛京”），1644年定都北京，以盛京为陪都。清朝奠定了我国今天疆域的基础，鼎盛时领土达1300万平方公里。疆域西跨葱岭，西北达巴尔喀什湖，北接西伯利亚，东北至黑龙江以北的外兴安岭和库页岛，东临太平洋，东南到台湾及附属岛屿钓鱼岛、赤尾屿等，南至南海诸岛。1911年（清宣统三年），辛亥革命爆发。1912年（中华民国元年）1月1日，中华民国宣告成立。同年2月12日，清宣统帝正式下诏退位，清朝灭亡。清朝共历经十二帝，统治全国268年。清朝是由中国满族建立的封建王朝，是中国历史上统一全国的大王朝之一。清朝的人口数也是历代封建王朝最高，清末时达到四亿以上。清朝开疆拓土，鼎盛时领土达1300多万平方公里。清初为缓和阶级矛盾，实行奖励垦荒、减免捐税的政策，内地和边疆的社会经济都有所发展。至十八世纪中叶，封建经济发展到一个新的高峰，史称“康乾盛世”。于是中央集权专制体制更加严密，国力强大，秩序稳定，清代人口至十八世纪后期，已达到三亿左右。康熙年间，统一了台湾，并与俄国签订《尼布楚条约》，划定了中俄东段边界；乾隆中叶，平定准噶尔、回部，统一了新疆。这不仅一举解决了中国历史上游牧民族和农耕民族之间旷日持久的冲突，而具采取了一系列政策，发展边疆地区的经济、文化和交通，巩固了中国多民族国家的统一，奠定了现代中国的版图，增强了中华民族的团结力和凝聚力。在文化上，康乾时期编纂了几部集大成之作，像《四库全书》、《古今图书集成》等，对清理和总结中国历史文化遗产作出了重大贡献。</p><table><tr><th class="tac-w15">皇帝称谓</th><th class="tac-w15">生卒年份（公元）</th><th class="tac-w15">年号称谓</th><th class="tac-w55">评价</th></tr><tr><td class="tac-w15">爱新觉罗努尔哈赤</td><td class="tac-w15">1559—1662</td><td class="tac-w15">天命</td><td class="tal-w55">含七恨反明、建立起后金、奠基清朝基业</td></tr><tr><td class="tac-w15">爱新觉罗皇太极</td><td class="tac-w15">1592—1643</td><td class="tac-w15">天聪</td><td class="tal-w55">随着父亲南征北战、建立清朝国号、沈阳称帝</td></tr><tr><td class="tac-w15">爱新觉罗福临</td><td class="tac-w15">1638—1661</td><td class="tac-w15">顺治</td><td class="tal-w55">子承父业在叔父多尔衮的帮助之下成了大清开国皇帝</td></tr><tr><td class="tac-w15">爱新觉罗玄烨</td><td class="tac-w15">1654—1722</td><td class="tac-w15">康熙</td><td class="tal-w55">勤政爱民、平三番、复台湾、统一全中国、大清盛世</td></tr><tr><td class="tac-w15">爱新觉罗胤禛</td><td class="tac-w15">1678—1735</td><td class="tac-w15">雍正</td><td class="tal-w55">子承父业、励精图治、整治官吏、为康乾盛世过度衔接</td></tr><tr><td class="tac-w15">爱新觉罗弘历</td><td class="tac-w15">1711—1799</td><td class="tac-w15">乾隆</td><td class="tal-w55">将清朝推向顶峰但清朝也从此多事情、十全老人太上皇</td></tr><tr><td class="tac-w15">爱新觉罗颙琰</td><td class="tac-w15">1760—1820</td><td class="tac-w15">嘉庆</td><td class="tal-w55">清朝由盛转衰、鸦片开始流向中国、社会矛盾开始强化</td></tr><tr><td class="tac-w15">爱新觉罗旻宁</td><td class="tac-w15">1782—1850</td><td class="tac-w15">道光</td><td class="tal-w55">清朝鸦片横行、第一次鸦片战争爆发、清朝变得贫弱</td></tr><tr><td class="tac-w15">爱新觉罗奕詝</td><td class="tac-w15">1831—1861</td><td class="tac-w15">咸丰</td><td class="tal-w55">第二次鸦片战争爆发、圆明园被毁、死于避暑山庄</td></tr><tr><td class="tac-w15">爱新觉罗载淳</td><td class="tac-w15">1856—1875</td><td class="tac-w15">同治</td><td class="tal-w55">无所作为早逝、在位时由其母垂政、清朝逐渐走向灭亡</td></tr><tr><td class="tac-w15">爱新觉罗载湉</td><td class="tac-w15">1871—1908</td><td class="tac-w15">光绪</td><td class="tal-w55">思想进步、奋发图强、采用变法、被西后遏制、后软禁</td></tr><tr><td class="tac-w15">爱新觉罗溥仪</td><td class="tac-w15">1906—1967</td><td class="tac-w15">宣统</td><td class="tal-w55">辛亥革命爆发、被迫逊位、后成满州傀儡、加入政协</td></tr></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;中国古代各封建王朝暨各朝皇帝始末一览表&lt;/p&gt;
    
    </summary>
    
      <category term="history" scheme="https://panxiang315.github.io/categories/history/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/history/reprint/"/>
    
    
      <category term="年号" scheme="https://panxiang315.github.io/tags/%E5%B9%B4%E5%8F%B7/"/>
    
      <category term="谥庙" scheme="https://panxiang315.github.io/tags/%E8%B0%A5%E5%BA%99/"/>
    
  </entry>
  
  <entry>
    <title>语言：语言决定了人对世界的认知</title>
    <link href="https://panxiang315.github.io/psychology/reprint/psychology-language/"/>
    <id>https://panxiang315.github.io/psychology/reprint/psychology-language/</id>
    <published>2018-06-07T01:29:37.000Z</published>
    <updated>2018-06-07T01:33:24.761Z</updated>
    
    <content type="html"><![CDATA[<p><strong>关键概念</strong>：萨巫尔一沃尔夫假说（SaPir-whorf Hypothesis)<br><strong>「释义」</strong>：语言会决定我们的思维和文化，特定的文化也只有通过特定的语言才能得到表达。<br><strong>「应用」</strong>：对一个文明的完全摧毁，不是烧掉房子或者破坏祖先的祭祀．而是中断这个民族的语言。所以殖民者最热衷于干的事情，就是不允许殖民地上的民众说他们自己的母语，而是改说殖民者的语言。<br><strong>核心问题</strong>：语言决定了人对世界的认知吗？</p><a id="more"></a><hr><p>&emsp;&emsp;在前面4讲中，我为你逐一分析了我们在认识自我中存在的陷阱与偏差。我们之所以能够认识到这些问题，是因为我们人是能够思考、擅长思考的。事实上，我们正是因为成为了能思考的动物，才能够很好地生存下来。<br>&emsp;&emsp;我们的思维实际上就是我们的生存能力。思维把外部世界反映、投射在我们大脑内部，这样我们在大脑里就可以模拟出外部世界的运作，从而制定决策，指导我们行动。正如《小王子》的作者，法国作家圣•埃克苏佩里说：一个人可以通过思考将一堆乱石变成一座宏伟的宫殿。<br>&emsp;&emsp;那你有没有想过，我们的思维是如何做到这一点的呢？这一讲我就要跟你分享，思维的载体——语言。<br>&emsp;&emsp;你能想象在一天里，你不使用任何语言么？不使用语言，并不是说你一句话都不说，保持沉默；不使用语言，你的大脑的思维也要停止下来。因为我们的思维，是一个个的想法连接在一起，而装载它们的，就是我们的语言。<br>&emsp;&emsp;所以，你可以想象没有情绪的一天，没有行动的一天，但是你不能想象没有语言的一天，因为，你的思维如河流一样，不能停止，不能干涸。语言不仅仅是我们思维的载体，而且它还会在一定程度上去塑造我们的思维。比如雪在爱斯基摩人的生活中特别重要，因此他们有十几个单词来描述不同状态的雪。而对我们中国人来说，就只有雪这一个词。所以，在爱斯基摩人的言语中，他们能够传递更加精准的关于雪的信息。在另外一方面，有些言语又非常含糊。比如说“爱”这个词，我们在各个场所都在用。我们爱我们的母亲，我们爱我们的祖国，我们爱我们的爱人，我们爱我们的工作。但是，在这些不同的地方，“爱”的含义是完全不一样的，容易引发歧义。</p><h1 id="萨王尔一沃尔夫假说：语言决定思维"><a href="#萨王尔一沃尔夫假说：语言决定思维" class="headerlink" title="萨王尔一沃尔夫假说：语言决定思维"></a>萨王尔一沃尔夫假说：语言决定思维</h1><p>&emsp;&emsp;基于这些观察，就有心理学家进一步提出：语言不仅仅会影响我们的思维，它还会决定我们的思维，最后决定我们的文化。这个假说，就是心理语言学上著名的萨巫尔一沃尔夫假说。这个假说有两个主要观点：一个是语言决定论，一个是语言相对论。下面我们分别来介绍。</p><h2 id="假说一：语言决定论"><a href="#假说一：语言决定论" class="headerlink" title="假说一：语言决定论"></a>假说一：语言决定论</h2><p>&emsp;&emsp;语言决定论的核心思想是：语言决定了我们对世界的认知，因为语言有自我形成和自我创造的能力。<br>&emsp;&emsp;什么意思呢？就是我们的思维完全是由我们的母语所决定的，这是因为我们只能根据母语的词汇和结构，来描述和认识这个世界。所以说，我们有不同的语言，就会有不同的思维和不同的世界观，最后我们就有不同的社会。语言决定论这个假说在乔治•奥威尔的乌托邦小说《1984》里得到了充分的展示。<br>&emsp;&emsp;乔治•奥威尔在小说里虚构了一个社会，而这个社会通过发明了一种新语言来控制这个社会里人们的思维。这个新语言有一个最大的特点，就是它要让那些反对这个社会的思想无法产生。<br>&emsp;&emsp;比如说，在这个语言体系里面，没有推翻政府、抢劫、杀人这样的词。这个社会的人没办法用语言来描述这些罪行和反政府的行为，他们也就没法在脑子里想象这些事情，更不用说来采取行动了。<br>&emsp;&emsp;所以，在这个新语言环境长大的人，就变得不再可能去反政府和犯罪了。在小说里，当每个人都学会了新语言而忘掉了旧语言的时候，那些异端的想法，那些偏离这个社会所倡导的准则以外的想法，就失去了语言的基础，失去了载体，成了无源之水，再也无法被产生出来了。<br>&emsp;&emsp;这就是萨巫尔一沃尔夫假说的第一点：语言决定论。通过控制语言，你就可以控制思维，而通过控制思维，你就可以控制行动。</p><h2 id="假说二：语言相对论"><a href="#假说二：语言相对论" class="headerlink" title="假说二：语言相对论"></a>假说二：语言相对论</h2><p>&emsp;&emsp;语言相对论指的是：不同的语言不能表示同一个社会的现实。这个论断包含两层意思：第一层是，一种文化的内容，只有用这种文化的语言才能得到充分的表达。第二层意思是，一个文化当中的某个概念，要是用不同文化背景的语言去解释，意思就会有差别。至少在人们心中所唤起的内容是不一样的。这里我给你举两个例子。<br>&emsp;&emsp;比如我们中国人用“稻”、“米”、“饭”分别表示带壳的米、去壳的米和煮熟的米，而美国人只用一个词，rice。所以你可以看出米在中国文化的重要性。与此相对的是，美国用肋排、菲力、沙朗、牛眼等十多个名称来称呼由牛的不同部位做出的牛排，而汉语则只有牛肉这一个词。<br>&emsp;&emsp;所以说，不同的语言定义了不同的思维乃至文化。<br>&emsp;&emsp;既然不同的语言对应不同的思维和不同的文化，那么对一个文明的完全摧毁，不是烧掉房子或者破坏祖先的祭祀，而是中断这个民族的语言。所以殖民者最热衷于干的事情，就是不允许殖民地上的民众说他们自己的母语，而是改说殖民者的语言。<br>通过语言的殖民，就实现了思想的殖民、文化的殖民，最后彻底消灭了殖民地的传承。</p><h1 id="萨王尔一沃尔夫假说的局限"><a href="#萨王尔一沃尔夫假说的局限" class="headerlink" title="萨王尔一沃尔夫假说的局限"></a>萨王尔一沃尔夫假说的局限</h1><p>&emsp;&emsp;好，说到这里，虽然很多证据都对萨巫尔－沃尔夫假说有所验证，但是进一步的研究发现，这个假说有点过于极端了。语言的确会影响我们的思维，但是它不是完全地决定我们的思维。语言影响我们思维的地方，是在于抽象概念、大逻辑，比如像法律、自由、尊严。但是，反映我们人类直接感官体验的具体概念，比如像是山川、雷电、雪花等等，我们的思维则较少受语言的影响。<br>&emsp;&emsp;不同语言的使用者，对世界的基本认识过程和基本概念范畴是相似的，由此形成了相似的最基本的价值观，比如人对于大自然的热爱、对于战争的厌恶等等。<br>&emsp;&emsp;所以，一个更为正确的观念是：语言、思维和文化三者是交织在一起，互为影响，互为成长。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;这一讲当中，我们一起了解了心理语言学领域里的萨巫尔一沃尔夫假说。这个假说提出：语言会决定我们的思维和文化，特定的文化也只有通过特定的语言才能得到表达。<br>&emsp;&emsp;虽然这个论断有它的局限，但是语言的确是思维的载体，会影响我们认知世界的方式。也正是因为语言的这种重要性，当我们回头看过去200年最重要的发明时，我们首先想到的不是能够救命的青霉素或者磁共振成像设备，而是电话、电报、电视和互联网这些能够提升我们沟通效率的设备。<br>&emsp;&emsp;但反讽的是，科技让我们的沟通变得越来越容易，越来越快捷，但我们的思想传递却并非变得更加高效。在互联网上我们可以随口说，随手写，匿名的保护也让分歧进一步凸显、放大。所以线上社交工具虽然让表达更容易，但是一定程度上反而增加了我们的隔阂。语言的不恰当使用，也会阻碍甚至禁锢我们的思维。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;关键概念&lt;/strong&gt;：萨巫尔一沃尔夫假说（SaPir-whorf Hypothesis)&lt;br&gt;&lt;strong&gt;「释义」&lt;/strong&gt;：语言会决定我们的思维和文化，特定的文化也只有通过特定的语言才能得到表达。&lt;br&gt;&lt;strong&gt;「应用」&lt;/strong&gt;：对一个文明的完全摧毁，不是烧掉房子或者破坏祖先的祭祀．而是中断这个民族的语言。所以殖民者最热衷于干的事情，就是不允许殖民地上的民众说他们自己的母语，而是改说殖民者的语言。&lt;br&gt;&lt;strong&gt;核心问题&lt;/strong&gt;：语言决定了人对世界的认知吗？&lt;/p&gt;
    
    </summary>
    
      <category term="psychology" scheme="https://panxiang315.github.io/categories/psychology/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/psychology/reprint/"/>
    
    
      <category term="语言相对论" scheme="https://panxiang315.github.io/tags/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%AF%B9%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>自我（下）：聚焦偏差的陷阱</title>
    <link href="https://panxiang315.github.io/psychology/reprint/self2/"/>
    <id>https://panxiang315.github.io/psychology/reprint/self2/</id>
    <published>2018-06-07T01:07:38.000Z</published>
    <updated>2018-06-07T01:34:47.160Z</updated>
    
    <content type="html"><![CDATA[<p><strong>关键概念</strong>：聚焦偏差<br><strong>「释义」</strong>由于关注自己的行为细节关注某一个具体场景或者社会群体关系、关注自我，而产生的自我认知偏差。<br><strong>「应用」</strong>你可以用这三种聚焦偏差，反观自己在职场的表现。如果你每天埋头做事．把自己的标签定位于“公司员工”那么你是否“跳出来”思考过，自己的存在价值是什么？同事如何看待你的存在价值，以及工作动机？<br><strong>核心问题</strong>：“当局者迷，旁观者清”的心理学原理是什么？</p><a id="more"></a><hr><p>&emsp;&emsp;在上一讲中，我跟你解释了为什么一个陌生人会比你更了解你自己。这是因为你有一种错觉，这种错觉是你自认为能够观察自己的内心状态，而事实上你只是在通过观察自己的表情、生理状态等去推测自己的内心状态。而这个推理的过程中，经常会出现各种偏差。<br>我把这种偏差总结为三种聚焦偏差：</p><blockquote><ul><li>聚焦行动导致的偏差</li><li>聚焦场景导致的偏差</li><li>聚焦自我导致的偏差</li></ul></blockquote><h1 id="聚焦行动导致的偏差"><a href="#聚焦行动导致的偏差" class="headerlink" title="聚焦行动导致的偏差"></a>聚焦行动导致的偏差</h1><p>&emsp;&emsp;<br>我们常说“旁观者清，当局者迷”，这话说的就是，当你专注于你所做的事情的时候，你通常会只见树木不见森林，看见的是细节而不是宏观的大局。举个简单的例子。我问你：你现在在干什么？你会说：我在看博客，我在听你说话。而一个旁观的人则会说，你现在正在学习心理学知识，你正在训练你的思维，你正在提升自己的能力。<br>&emsp;&emsp;你和旁观者都对，但是你们俩看问题的层次水平不一样。从我在听你讲话，到我在学习心理学知识，到我在训练我的思维，再到我正在提升我自己。对你当前的行为，我们会有不同层次的解读，而越宏观、越大局的解读，就会越接近事情的真相。<br>&emsp;&emsp;但是，当你具体在做某件事情的时候，你更多地是关注于你当下的行为。要完成你的行为，你就必然更多地关注事情或者行为的细节，而不是全局。另一方面，当你做的事情越复杂，就越需要耗费你的认知与心理资源，你就会更专注于细节。而旁观者由于没有做事，所以他的任务是简单的，他所需要做的，只是观察你而已。这个时候，旁观者就能更多地给出一些全面的、更加有高度的想法来解释你现在的状态。<br>&emsp;&emsp;所以，旁观者会说你是在提升自己，而你只是感受到你在听我说话，在看博客而已。</p><h1 id="聚焦场景导致的偏差"><a href="#聚焦场景导致的偏差" class="headerlink" title="聚焦场景导致的偏差"></a>聚焦场景导致的偏差</h1><p>&emsp;&emsp;不仅是因为对细节和全局的关注，会导致你和旁观者对你自己的状态分析出现了差异。你和旁观者因为处于不同的位置和场景也会导致对你的状态分析出现差异。有一句诗可以非常好地来解释你们的这个差异：横看成岭侧成峰，远近高低各不同。不识庐山真面目，只缘身在此山中。<br>&emsp;&emsp;如何用心理学来理解这段话？我们不妨来看一个经典的心理学实验。心理学家去调查大学生，分别问他们自己，和他们的好朋友同样一个问题：你为什么选择这个专业？你的朋友为什么会选这个专业？这时，心理学家发现，当你在描述你自己和描述你朋友为什么答案非常地不一样。<br>&emsp;&emsp;当你在描述你的好朋友为什么会选择这个专业时，你会说他之所以选择经济专业，是因为他想当一个成功的商人，他想挣很多的钱，他想开一个跨国公司等等。这个时候，你会站在你好朋友的角度去推断他的想法和动机。<br>&emsp;&emsp;但是，当心理学家问你，那你自己为什么选择这个专业的时候，你通常会说：这个专业是我父母帮我选的，因为这个专业能让我更好地找到工作；或者会说，因为这个学校的经济专业非常好，所以我就选了这个专业等等。<br>&emsp;&emsp;这个时候，你看见的不是自己的动机，你看见的是你所在的情景和所在的位置——你是你父母的小孩，所以他们对你的期望就成了你选择这个专业的原因；你是这个学校的学生，所以学校的这个专业的状态就成了你选择这个专业的原因。你很少真正地去问一句：我为什么要选择这个专业。在心理学看来，你之所以没有这么问，是因为“我”这个概念已经被你所处的情景和位置所掩盖住了。<br>&emsp;&emsp;在第7讲谈到心理学的第四个公理“社会是心理的最终归属”的时候，我专门讲了，我们每一个人都是带有各种社会群体标签的人，比如：“父亲”，比如“部门领导”,比如“驴友”。这些群体的标签，当我们去对号入座的时候，这些角色就会影响我们的心理和认知。<br>&emsp;&emsp;特别是在我们去了解自己行为的内在动机，和状态的时候，这些社会群体的标签就会成为解释我们行为的主要来源。而当我们去分析别人行为的内在动机和状态时，我们通常能够把他身上的这些社会标签给去掉，而更多地关注他个人的原因。<br>&emsp;&emsp;小结一下什么是场景导致的偏差：在认识自己的过程中，当我们用不同的标签，就会有不同的结论，这也正是横看成岭侧成峰。而另一方面，在旁观者眼中，就没有这些社会群体标签的影响。</p><h1 id="聚焦自我导致的偏差"><a href="#聚焦自我导致的偏差" class="headerlink" title="聚焦自我导致的偏差"></a>聚焦自我导致的偏差</h1><p>&emsp;&emsp;好，刚才说了聚焦行动和聚焦场景都会带来偏差。但是，我现在要给你介绍的第三种偏差聚焦自我所带来的偏差会更大。在第2讲谈到摆脱幼稚的自我中心的时候，我提到，虽然我们没有自闭症，但是我们总是或多或少有点自我中心，也就是“聚光灯效应”：我所看到的，我所听见的，我所想的，也应该是别人所看到的、听见的和所想的。我的世界，就是别人的世界。<br>&emsp;&emsp;这里，我又要告诉你一个经典的心理学研究案例。心理学家在进行婚姻家庭咨询和干预的时候，通常会让来访的夫妻做这么一件事情。你也可以试着和你的同事或者朋友做一下。<br>&emsp;&emsp;首先，心理学家请夫妻俩把所有的家务家庭活动全部列出来，比如说做早洗盘子、买菜、拖地、出去旅游等事餐等。其次，心理学家会再请夫妻俩估计一下各自承担了多少。比如说，做早餐，你承担了多少，他承担了多少？显然，夫妻俩肯定有个人在某一件事情上多干一点，而另一个人在其他的事情上会多干一些。这没有关系，这也不是我们关注的重点。<br>&emsp;&emsp;重点是，当这对夫妻把各自估算的比例加起来，你会发现，这个数字一定会超过百分之百，可能是120%，甚至更多。也就是说，一定有人高估了自己的贡献。但是更大的可能是，两个人都高估了自己的贡献。为什么会这样？道理非常简单。当心理学家问你是否做过早餐的时候，即使你很少做早餐，但是你的脑海里会浮现出你原来做过一两次早餐的场景。而这个场景是如此地深刻，所以你会觉得你当时花了不少时间，做了不少努力来做早餐．对吗？<br>&emsp;&emsp;而你的爱人做了多少，你看不见，你很少能去体会到他（她）的付出。这个时候，你就自然会低估你爱人的贡献，而高估自己的贡献。所以当你们俩把对某件事情的贡献比例合起来，就会一定高过而永远不会低于100％。<br>&emsp;&emsp;所以，这个研究就得出一个结论：对自我的聚焦，会使得我们不仅夸大我们的贡献，也会夸大我们的感受。所以当你抱怨的时候——为什么恋爱又失败了？为什么领导不喜欢我的报告？为什么我的考试又考砸了？这些失败和挫折，对你而言，都有特别的原因。但是在旁观者眼里，他们更多地是看见你的各种原因背后的共同因素，他们更多地是看清了你的行为模式。所以说，此时，旁人通常能够给出更好的建议，而不是你自己。<br>&emsp;&emsp;在古希腊阿波罗神庙里有一句篇言，也就是心理学家和哲学家常说的，“认识你自己”。这是我在学校教学的时候，希望每一个学心理学的学生必须要做到的。它还是我们每一个人来到这个世界上，都需要完成的终极任务。因为在这个世界上，没有任何一件事情，没有任何一个物体，比你自己更重要。<br>&emsp;&emsp;但是，我们有一种错觉，我们错误地认为我们更了解自己，这是因为“我”能看到“我自己”内心的想法，“我”知道“我自己”过去的历史。但是，难以捉摸的潜意识与意识，使得我们并不能清晰、准确无误地洞悉我们的内心，我们只能依靠观察我们此时的情绪与行为，此时的生理状况等，来了解自己的内心状况。更不幸的是，我们因为聚焦行动、聚焦场景和聚焦自我，还在认识自我上有很大的偏差。<br>&emsp;&emsp;所以这正好应了尼采的一句话：“离每个人最远的，就是他自己。”</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;我们用两讲的时间解析了可以说是心理学最重要的概念——“自我”。那么，到底应该如何认识自己？我想，首先是要知道可能的陷阱，从而避免具身认知产生的盲区，和今天说的三种偏差。然后，就是继续用科学的心理学，让你越来越了解自己。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;关键概念&lt;/strong&gt;：聚焦偏差&lt;br&gt;&lt;strong&gt;「释义」&lt;/strong&gt;由于关注自己的行为细节关注某一个具体场景或者社会群体关系、关注自我，而产生的自我认知偏差。&lt;br&gt;&lt;strong&gt;「应用」&lt;/strong&gt;你可以用这三种聚焦偏差，反观自己在职场的表现。如果你每天埋头做事．把自己的标签定位于“公司员工”那么你是否“跳出来”思考过，自己的存在价值是什么？同事如何看待你的存在价值，以及工作动机？&lt;br&gt;&lt;strong&gt;核心问题&lt;/strong&gt;：“当局者迷，旁观者清”的心理学原理是什么？&lt;/p&gt;
    
    </summary>
    
      <category term="psychology" scheme="https://panxiang315.github.io/categories/psychology/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/psychology/reprint/"/>
    
    
      <category term="聚焦偏差" scheme="https://panxiang315.github.io/tags/%E8%81%9A%E7%84%A6%E5%81%8F%E5%B7%AE/"/>
    
  </entry>
  
</feed>
