<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pan&#39;s record</title>
  
  <subtitle>background of my life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://panxiang315.github.io/"/>
  <updated>2018-10-09T09:41:15.248Z</updated>
  <id>https://panxiang315.github.io/</id>
  
  <author>
    <name>Pan Xiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图片请求情况分析</title>
    <link href="https://panxiang315.github.io/programme/HTTP/picture-request/"/>
    <id>https://panxiang315.github.io/programme/HTTP/picture-request/</id>
    <published>2018-10-09T09:36:22.000Z</published>
    <updated>2018-10-09T09:41:15.248Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;网站优化的重点之一就是图片的请求，因为图片在前端请求资源体积上占比较大。</p><a id="more"></a><hr><p>参考文献<br><a href="https://www.jb51.net/css/469033.html" target="_blank" rel="noopener">CSS控制前端图片HTTP请求的各种情况示例</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;网站优化的重点之一就是图片的请求，因为图片在前端请求资源体积上占比较大。&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="HTTP" scheme="https://panxiang315.github.io/categories/programme/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://panxiang315.github.io/tags/HTTP/"/>
    
      <category term="图片" scheme="https://panxiang315.github.io/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Less学习</title>
    <link href="https://panxiang315.github.io/programme/CSS/Less-learning/"/>
    <id>https://panxiang315.github.io/programme/CSS/Less-learning/</id>
    <published>2018-09-29T07:13:24.000Z</published>
    <updated>2018-09-29T07:14:44.380Z</updated>
    
    <content type="html"><![CDATA[<p>Less is more</p><a id="more"></a><hr><p><a href="https://www.w3cplus.com/css/an-introduction-to-less-and-comparison-to-sass.html" target="_blank" rel="noopener">Less介绍及其与Sass的差异</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Less is more&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="CSS" scheme="https://panxiang315.github.io/categories/programme/CSS/"/>
    
    
      <category term="Less" scheme="https://panxiang315.github.io/tags/Less/"/>
    
      <category term="Sass" scheme="https://panxiang315.github.io/tags/Sass/"/>
    
  </entry>
  
  <entry>
    <title>Yahoo前端规范</title>
    <link href="https://panxiang315.github.io/programme/HTTP/yahoo-rules/"/>
    <id>https://panxiang315.github.io/programme/HTTP/yahoo-rules/</id>
    <published>2018-08-31T01:24:39.000Z</published>
    <updated>2018-08-31T10:52:01.936Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;曾记得，第一次注册邮箱的时候，以邮箱为关键字首选是Yahoo，便注册了雅虎邮箱，还智障的以www为邮箱开头。如今，雅虎携邮箱逃离中国已有近5年。<br>&emsp;&emsp;你伤害了我，我一笑而过T_T，当然是选择原谅它了，下面介绍一下yahoo前端优化的35条规范。</p><a id="more"></a><hr><p>参考文献</p><p><a href="https://www.cnblogs.com/xianyulaodi/p/5755079.html" target="_blank" rel="noopener">雅虎前端优化的35条军规</a><br><a href="https://developer.yahoo.com/performance/rules.html" target="_blank" rel="noopener">Best Practices for Speeding Up Your Web Site</a><br><a href="https://www.imooc.com/learn/50" target="_blank" rel="noopener">雅虎军规-慕课网视频课</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;曾记得，第一次注册邮箱的时候，以邮箱为关键字首选是Yahoo，便注册了雅虎邮箱，还智障的以www为邮箱开头。如今，雅虎携邮箱逃离中国已有近5年。&lt;br&gt;&amp;emsp;&amp;emsp;你伤害了我，我一笑而过T_T，当然是选择原谅它了，下面介绍一下yahoo前端优化的35条规范。&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="HTTP" scheme="https://panxiang315.github.io/categories/programme/HTTP/"/>
    
    
      <category term="规范" scheme="https://panxiang315.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="HTTP" scheme="https://panxiang315.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>webpack学习笔记</title>
    <link href="https://panxiang315.github.io/programme/HTML/webpack-learning/"/>
    <id>https://panxiang315.github.io/programme/HTML/webpack-learning/</id>
    <published>2018-08-29T03:00:27.000Z</published>
    <updated>2018-08-29T03:02:02.936Z</updated>
    
    <content type="html"><![CDATA[<p>Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。还可以将按需加载的模块进行代码分隔，等到实际需要的时候再异步加载。通过 loader 的转换，任何形式的资源都可以视作模块，比如 CommonJs 模块、 AMD 模块、 ES6 模块、CSS、图片、 JSON、Coffeescript、 LESS 等。</p><a id="more"></a><hr><p>参考文献<br><a href="http://www.css88.com/doc/webpack2/" target="_blank" rel="noopener">webpack官方文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。还可以将按需加载的模块进行代码分隔，等到实际需要的时候再异步加载。通过 loader 的转换，任何形式的资源都可以视作模块，比如 CommonJs 模块、 AMD 模块、 ES6 模块、CSS、图片、 JSON、Coffeescript、 LESS 等。&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="HTML" scheme="https://panxiang315.github.io/categories/programme/HTML/"/>
    
    
      <category term="webpack" scheme="https://panxiang315.github.io/tags/webpack/"/>
    
      <category term="打包" scheme="https://panxiang315.github.io/tags/%E6%89%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>前端开发工具</title>
    <link href="https://panxiang315.github.io/programme/HTML/web-tool/"/>
    <id>https://panxiang315.github.io/programme/HTML/web-tool/</id>
    <published>2018-08-29T01:49:38.000Z</published>
    <updated>2018-08-30T12:04:28.846Z</updated>
    
    <content type="html"><![CDATA[<p>web前端，又名切图仔，少不了一些小工具来辅助排版切图</p><a id="more"></a><hr><p><strong>chrome浏览器工具 Page Ruler</strong></p><p>学shan习zhai网站比较好的工具，不用开发者模式，也能轻松获取盒子大小，自带尺子</p><p><strong>FastStoneCapturePortable</strong></p><p>美滋滋的切图仔实用工具，融合了拾色器，尺寸测量。实在是切图仔优秀伙伴<br><img src="\images\programme\front-end\cut.jpg" alt="切图仔"></p><p><strong>fences</strong><br>作为一个切图仔，桌面管理是必不可少的，不然会显得比较凌乱。这里强推一款fences，可以根据自己的喜好，像前端div一样，划分快捷图标。各个模块可自定义大小位置、命名、收起、透明化等。<br>PS 双击桌面空白隐藏桌面图标和图标收起，以前不敢放桌面的快捷键可以随意放咯。</p><p><img src="\images\programme\front-end\desktop.png" alt="切图仔桌面"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;web前端，又名切图仔，少不了一些小工具来辅助排版切图&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="HTML" scheme="https://panxiang315.github.io/categories/programme/HTML/"/>
    
    
      <category term="实用工具" scheme="https://panxiang315.github.io/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>http学习笔记</title>
    <link href="https://panxiang315.github.io/programme/HTTP/http-learning/"/>
    <id>https://panxiang315.github.io/programme/HTTP/http-learning/</id>
    <published>2018-08-28T07:05:08.000Z</published>
    <updated>2018-08-31T07:23:06.850Z</updated>
    
    <content type="html"><![CDATA[<p>上学的时候没学明白</p><a id="more"></a><hr><p>参考文献</p><p><a href="https://www.imooc.com/article/14397" target="_blank" rel="noopener">前端应该知道的HTTP协议</a><br><a href="https://www.cnblogs.com/chaoran/p/4783633.html" target="_blank" rel="noopener">学习前端前必知的——HTTP协议详解</a><br><a href="https://blog.csdn.net/qq_25178609/article/details/51769191" target="_blank" rel="noopener">HTTP协议流程</a><br><a href="https://blog.csdn.net/qq_33915826/article/details/79118955" target="_blank" rel="noopener">HTTP状态码</a><br><a href="https://www.cnblogs.com/azhai-biubiubiu/p/6048901.html" target="_blank" rel="noopener">http与https的区别</a><br><a href="https://www.cnblogs.com/xianyulaodi/p/6547807.html" target="_blank" rel="noopener">从输入url到页面展示到底发生了什么</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上学的时候没学明白&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="HTTP" scheme="https://panxiang315.github.io/categories/programme/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://panxiang315.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>token学习笔记</title>
    <link href="https://panxiang315.github.io/programme/HTTP/token-learning/"/>
    <id>https://panxiang315.github.io/programme/HTTP/token-learning/</id>
    <published>2018-08-28T06:59:47.000Z</published>
    <updated>2018-10-09T01:58:30.960Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;当你第一次登陆某个网站时，浏览器通常会问问你，是否要保存账号密码鸭？这个时候，你是不是心中一颤？啊啊啊，这个鳖孙居然想保存我的密码！<br>&emsp;&emsp;设计网站的时候，是不是也在担心，啊啊啊，会不会有鳖孙想来攻击我的网站。</p><a id="more"></a><hr><p>&emsp;&emsp;HTTP是无状态协议，是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。<br>&emsp;&emsp;客户端与服务器进行动态交互的Web应用程序出现之后，HTTP无状态的特性严重阻碍了这些应用程序的实现，毕竟交互是需要承前启后的，比如需要对用户鉴权的网站，不能一直让用户输入账号密码。于是，用于保持HTTP连接状态的技术就应运而生了，一个是Cookie，而另一个则是Session。token则是后来发展起来，是基于非对称加密和cookie的。</p><h2 id="保存账号密码"><a href="#保存账号密码" class="headerlink" title="保存账号密码"></a>保存账号密码</h2><p>&emsp;&emsp;首次登陆网站时，浏览器检测到你发送了包含账号密码的表单，就会提示你要不要保存账号密码。这个账号密码可以在浏览器的设置中查到的。<br>&emsp;&emsp;以chrome浏览器为例：设置-&gt;更多高级设置-&gt;密码和表单-&gt;管理密码，如下图所示。可以查看已保存的网站对应账号密码（看密码的时候需要输入本机用户设置密码）。<br><img src="\images\programme\front-end\chromeForm.png" alt="谷歌浏览器表单"><br>&emsp;&emsp;当你浏览一个网站后，如果浏览器中cookie保存了你的用户名和密码，那么当你再次登陆这个网站时，可以获取到你在电脑本地保存的cookie，cookie里面有你的用户名和密码，可以直接登录。<br>&emsp;&emsp;cookie里保存的账号和密码和你浏览器保存的账号密码是相互独立的。当你进入网站时，这两者验证是有先后顺序的，<strong>首先会看cookie有没有，如果没有，再将浏览器保存的用户名和密码放到登陆表单中</strong>。</p><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h2><p>&emsp;&emsp;cookie是保存在本地终端的数据。cookie的作用就是为了解决HTTP协议无状态的缺陷所作的努力。cookie由服务器生成，发送给浏览器，浏览器把cookie以键值对形式保存到某个目录下的文本文件内，之后每次请求同一网站时会把该cookie附在请求资源的HTTP请求头上发送给服务器。<br>&emsp;&emsp;cookie的实质是一个String，内容为“key1=value1;key2=value2”（需要注意，末尾是没有;）的。因此，可以用以下代码来获取某个key对应的value。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">cname</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> name = cname + <span class="string">"="</span>; <span class="comment">// 生成key</span></span><br><span class="line"><span class="keyword">var</span> ca = <span class="built_in">document</span>.cookie.split(<span class="string">';'</span>); <span class="comment">//把cookie字符串使用;分割为数组</span></span><br><span class="line"><span class="comment">// 找到key对应数组中的位置，从=后开始切割，获取value</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;ca.length; i++) &#123;</span><br><span class="line"><span class="keyword">var</span> c = ca[i].trim(); <span class="comment">//trim方法清除首尾空格</span></span><br><span class="line"><span class="keyword">if</span> (c.indexOf(name)==<span class="number">0</span>) &#123; <span class="keyword">return</span> c.substring(name.length,c.length); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;cookie的组成有：名称(key)、值(value)、有效域(domain)、路径(域的路径，一般设置为全局:”\”)、失效时间、安全标志(指定后，cookie只有在使用SSL连接时才发送到服务器(https))。<br>&emsp;&emsp;路径与域一起构成cookie的作用范围。若不设置过期时间，则表示这个cookie的生命期为浏览器会话期间，关闭浏览器窗口，cookie就消失。这种生命期为浏览器会话期的cookie被称为会话cookie。会话cookie一般不存储在硬盘上而是保存在内存里，当然这种行为并不是规范规定的。若设置了过期时间，浏览器就会把cookie保存到硬盘上，关闭后再次打开浏览器，这些cookie仍然有效直到超过设定的过期时间。存储在硬盘上的cookie可以在不同的浏览器进程间共享，比如两个IE窗口。而对于保存在内存里的cookie，不同的浏览器有不同的处理方式。<br>&emsp;&emsp;由于cookie是存在客户端上的，需要用户打开客户端的cookie支持。此外，浏览器加入了一些限制确保cookie不会被恶意使用，同时不会占据太多磁盘空间，所以每个域的cookie数量是有限的。</p><h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><p>&emsp;&emsp;session的中文翻译是“会话”，当用户打开某个web应用时，便与web服务器产生一次session。<br>&emsp;&emsp;当客户端请求创建一个session时，服务器首先检查这个客户端的请求里是否已包含了一个session标识（称为session id），如果包含则说明以前已经为此客户端创建过session，服务器就按照session id把这个session检索出来使用（检索不到，会新建一个），如果客户端请求不包含session id，则为此客户端创建一个session并且生成一个与此session相关联的session id，session id的值应该是一个既不会重复，又不容易被找到规律以仿造的字符串，这个session id将被在本次响应中返回给客户端保存。<br>&emsp;&emsp;客户第一次发送请求给服务器，此时服务器产生一个唯一的sessionID，并返回给客户端(通过cookie)，保存于客户端的内存中，并与一个浏览器窗口对应着,由于HTTP协议的特性，这一次连接就断开了以后此客户端再发送请求给服务器的时候，就会在请求request中携带cookie,由于cookie中有sessionID,所以服务器就知道这是刚才那个客户端。<br>&emsp;&emsp;举个简单例子就像人们去超市购物，去存包，第一个去的时候(客户第一次发送请求给服务器),超市会给你一个号码牌(此时服务器产生一个唯一的sessionID，并返回给客户端(通过cookie)),你可以在你自己的柜子里存东西(在服务器属于此客户的内存区域存数据),下次你再去的时候，拿着这个号码牌(请求request中携带cookie),超市就知道哪些东西是你的，然后给你取出来，如果你几天都没去取（session失效了，在服务器端配置）,你再去的时候东西就拿不到了。如果你把这个号码牌丢了(刚才的cookie失效了，比如你重启电脑，刚才存于内存中sessionID也就丢了)，再去拿东西，当然无法定位了，也就拿不到东西了。如果是新打开一个浏览器的情况，那就像是又一个人去超市存东西一样，你的东西跟他的东西是两码事，互不影响,他有他自己的sessionID,你有你自己的。<br>&emsp;&emsp;保存这个session id的方式可以采用cookie，这样在交互过程中浏览器可以自动的按照规则把这个标识发挥给服务器。一般这个cookie的名字都是类似于SEEESIONID。但cookie可以被人为的禁止，则必须有其他机制以便在cookie被禁止时仍然能够把session id传递回服务器。<br>&emsp;&emsp;经常被使用的一种技术叫做URL重写，就是把session id直接附加在URL路径的后面。还有一种技术叫做表单隐藏字段。就是服务器会自动修改表单，添加一个隐藏字段，以便在表单提交时能够把session id传递回服务器。</p><h2 id="token"><a href="#token" class="headerlink" title="token"></a>token</h2><p>&emsp;&emsp;token的意思是“令牌”，是用户身份的验证方式，最简单的token组成:uid(用户唯一的身份标识)、time(当前时间的时间戳)、sign(签名，由token的前几位+盐以哈希算法压缩成一定长的十六进制字符串，可以防止恶意第三方拼接token请求服务器)。还可以把不变的参数也放进token，避免多次查库。</p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><h3 id="cookie和session的区别"><a href="#cookie和session的区别" class="headerlink" title="cookie和session的区别"></a>cookie和session的区别</h3><blockquote><ul><li>1、cookie数据存放在客户的浏览器上，session数据放在服务器上。</li><li>2、存取方式的不同，Cookie中只能保管ASCII字符串，假如需求存取Unicode字符或者二进制数据，需求先进行编码。Cookie中也不能直接存取Java对象。若要存储略微复杂的信息，运用Cookie是比拟艰难的。而Session中能够存取任何类型的数据，包括而不限于String、Integer、List、Map等。Session中也能够直接保管Java Bean乃至任何Java类，对象等，运用起来十分便当。能够把Session看做是一个Java容器类。</li><li>3、Cookie存储在客户端阅读器中，对客户端是可见的，客户端的一些程序可能会窥探、复制以至修正Cookie中的内容。别人可以分析存放在本地的cookie并进行COOKIE欺骗。而Session存储在服务器上，对客户端是透明的，不存在敏感信息泄露的风险。考虑到安全应当使用session。</li><li>4、为了在cookie中保存信息，只需要设置cookie的过期时间属性为一个很大很大的数字。而Session依赖于名为JSESSIONID的Cookie，Cookie JSESSIONID的过期时间默许为–1，只需关闭了阅读器该Session就会失效，因而Session不能完成信息永世有效的效果。运用URL地址重写也不能完成。而且假如设置Session的超时时间过长，服务器累计的Session就会越多，越容易招致内存溢出。session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能，考虑到减轻服务器性能方面，应当使用cookie。因此，对于Google、Baidu、Sina来说，Cookie或许是唯一的选择。</li><li>5、单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。</li><li>6、跨域支持上的不同，Cookie支持跨域名访问，例如将domain属性设置为“.biaodianfu.com”，则以“.biaodianfu.com”为后缀的一切域名均能够访问该Cookie。跨域名Cookie如今被普遍用在网络中，例如Google、Baidu、Sina等。而Session则不会支持跨域名访问。Session仅在他所在的域名内有效。</li></ul></blockquote><p>&emsp;&emsp;所以初步建议是：将登陆信息等重要信息存放为session;其他信息如果需要保留，可以放在cookie中。仅运用Cookie或者仅运用Session可能完成不了理想的效果。这时应该尝试一下同时运用Cookie与Session。Cookie与Session的搭配运用在实践项目中会完成很多意想不到的效果。</p><h3 id="token和session的区别"><a href="#token和session的区别" class="headerlink" title="token和session的区别"></a>token和session的区别</h3><p>&emsp;&emsp;Session是一种HTTP存储机制，目的是为无状态的HTTP提供的持久机制。session认证只是简单的把用户信息存储到Session里，因为SID的不可预测性，暂且认为是安全的。这是一种认证手段。<br>&emsp;&emsp;而Token提供的是认证和授权，认证是针对用户，授权是针对App。其目的是让某App有权利访问 某用户的信息。这里的Token是唯一的。不可以转移到其它App上，也不可以转到其它用户上。<br>&emsp;&emsp;Session只提供一种简单的认证，即有此SID，即认为有此 User的全部权利。SID是需要严格保密的，这个数据应该只保存在站方，不应该共享给其它网站或者第三方App。所以简单来说，如果你的用户数据可能需要和第三方共享，或者允许第三方调用API接口，用Token。如果永远只是自己的网站，自己的App，用什么就无所谓了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>&emsp;&emsp;token就是令牌，比如你授权（登录）一个程序时，他就是个依据，判断你是否已经授权该软件；cookie就是写在客户端的一个txt文件，里面包括你登录信息之类的，这样你下次在登录某个网站，就会自动调用cookie自动登录用户名；session和cookie差不多，只是session是写在服务器端的文件，也需要在客户端写入cookie文件，但是文件里是你的浏览器编号。Session的状态是存储在服务器端，客户端只有session id；而Token的状态是存储在客户端。</p><p>参考文献<br><a href="https://my.oschina.net/jamesfancy/blog/1613994" target="_blank" rel="noopener">Token 认证的来龙去脉</a><br><a href="https://www.cnblogs.com/xiekeli/p/5607107.html" target="_blank" rel="noopener">基于Token的WEB后台认证机制</a><br><a href="https://www.cnblogs.com/wxinyu/p/9154178.html" target="_blank" rel="noopener">session 、cookie、token的区别及联系</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;当你第一次登陆某个网站时，浏览器通常会问问你，是否要保存账号密码鸭？这个时候，你是不是心中一颤？啊啊啊，这个鳖孙居然想保存我的密码！&lt;br&gt;&amp;emsp;&amp;emsp;设计网站的时候，是不是也在担心，啊啊啊，会不会有鳖孙想来攻击我的网站。&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="HTTP" scheme="https://panxiang315.github.io/categories/programme/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://panxiang315.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>mockjs学习笔记</title>
    <link href="https://panxiang315.github.io/programme/JavaScript/mockjs-learning/"/>
    <id>https://panxiang315.github.io/programme/JavaScript/mockjs-learning/</id>
    <published>2018-08-28T06:23:07.000Z</published>
    <updated>2018-08-28T06:58:57.182Z</updated>
    
    <content type="html"><![CDATA[<p>生成随机数据，拦截 Ajax 请求</p><a id="more"></a><hr><p>参考文献<br><a href="http://mockjs.com/" target="_blank" rel="noopener">mock官方文档</a><br><a href="http://www.cnblogs.com/lmxxlm-123/p/9305561.html" target="_blank" rel="noopener">mock模仿后端，实现前后端分离</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生成随机数据，拦截 Ajax 请求&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="JavaScript" scheme="https://panxiang315.github.io/categories/programme/JavaScript/"/>
    
    
      <category term="前端" scheme="https://panxiang315.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="模拟" scheme="https://panxiang315.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>axios学习填坑</title>
    <link href="https://panxiang315.github.io/programme/JavaScript/axios-learning/"/>
    <id>https://panxiang315.github.io/programme/JavaScript/axios-learning/</id>
    <published>2018-08-28T06:14:06.000Z</published>
    <updated>2018-08-28T11:01:04.985Z</updated>
    
    <content type="html"><![CDATA[<p>vue更新到2.0之后，作者就宣告不再对vue-resource更新，而是推荐的axios</p><a id="more"></a><hr><p>参考文献<br><a href="https://www.kancloud.cn/yunye/axios/234845" target="_blank" rel="noopener">Axios 中文说明——官方文档</a><br><a href="https://blog.csdn.net/nihaoqiulinhe/article/details/79084755" target="_blank" rel="noopener">axios post参数有问题</a></p><p>问题1：改变Request-Headers</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">axios.post(<span class="string">'/user'</span>, &#123;</span><br><span class="line">    firstName: <span class="string">'Fred'</span>,</span><br><span class="line">    lastName: <span class="string">'Flintstone'</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>post默认Request-Headers的Content-Type是application/json;charset=UTF-8。如果不想使用application/json的解决方式，可以使用URLSearchParams传参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> param = <span class="keyword">new</span> URLSearchParams();<span class="comment">//使用URLSearchParams传参数</span></span><br><span class="line">          param.append(<span class="string">"name"</span>, <span class="string">"admin"</span>);</span><br><span class="line">          param.append(<span class="string">"pwd"</span>, <span class="string">"123456"</span>);</span><br><span class="line">          axios.post(<span class="string">'http://127.0.0.1:8080/test/login'</span>,param)</span><br><span class="line">          .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(response);</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(error);</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><p>2 post之后404错误</p><p>request failed with status code 404</p><p>现在很多项目为了模拟后端的一些简单功能，如登录等，会使用Mock来模拟。当和后端对接时，这时就相当于对接了两个接口。可能会出现404错误，需要把他们注释掉。之后使用axios请求获得信息。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import Mock from './mock' </span></span><br><span class="line"><span class="comment">// Mock.bootstrap();</span></span><br></pre></td></tr></table></figure><p>3 设置请求超时VUE axios重新再次请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在main.js设置全局的请求次数，请求的间隙</span></span><br><span class="line">axios.defaults.retry = <span class="number">4</span>;</span><br><span class="line">axios.defaults.retryDelay = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">axios.interceptors.response.use(<span class="literal">undefined</span>, <span class="function"><span class="keyword">function</span> <span class="title">axiosRetryInterceptor</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> config = err.config;</span><br><span class="line">    <span class="comment">// If config does not exist or the retry option is not set, reject</span></span><br><span class="line">    <span class="keyword">if</span>(!config || !config.retry) <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Set the variable for keeping track of the retry count</span></span><br><span class="line">    config.__retryCount = config.__retryCount || <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Check if we've maxed out the total number of retries</span></span><br><span class="line">    <span class="keyword">if</span>(config.__retryCount &gt;= config.retry) &#123;</span><br><span class="line">        <span class="comment">// Reject with the error</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Increase the retry count</span></span><br><span class="line">    config.__retryCount += <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Create new promise to handle exponential backoff</span></span><br><span class="line">    <span class="keyword">var</span> backoff = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            resolve();</span><br><span class="line">        &#125;, config.retryDelay || <span class="number">1</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Return the promise in which recalls axios to retry the request</span></span><br><span class="line">    <span class="keyword">return</span> backoff.then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> axios(config);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4 与ajax格式对齐</p><p>axios<br>Content-Type:application/json<br>Request Payload</p><p>ajax<br>Content-Type:application/x-www-form-urlcoded<br>Form Data</p><p>添加 axios 请求拦截器， 修改post请求的请求头部及请求参数处理方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">'qs'</span>;</span><br><span class="line"><span class="comment">/* 请求拦截器 */</span></span><br><span class="line">axios.interceptors.request.use(<span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(config.method === <span class="string">'post'</span>) &#123;</span><br><span class="line">        config.headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>;</span><br><span class="line">        config.transformRequest = [<span class="function"><span class="keyword">function</span> (<span class="params">data, headers</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> qs.stringify(data);</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> config;</span><br><span class="line">&#125;, (err) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vue更新到2.0之后，作者就宣告不再对vue-resource更新，而是推荐的axios&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="JavaScript" scheme="https://panxiang315.github.io/categories/programme/JavaScript/"/>
    
    
      <category term="Ajax" scheme="https://panxiang315.github.io/tags/Ajax/"/>
    
      <category term="POST" scheme="https://panxiang315.github.io/tags/POST/"/>
    
  </entry>
  
  <entry>
    <title>github中ssh原理</title>
    <link href="https://panxiang315.github.io/programme/Hexo/github-ssh/"/>
    <id>https://panxiang315.github.io/programme/Hexo/github-ssh/</id>
    <published>2018-07-31T03:26:16.000Z</published>
    <updated>2018-07-31T03:30:39.388Z</updated>
    
    <content type="html"><![CDATA[<p>在github的SSH keys中添加本地的key，这样就可以免账号密码登录、push代码了。</p><a id="more"></a><hr><p>参考文献<br><a href="https://www.cnblogs.com/dzblog/p/6930147.html" target="_blank" rel="noopener">ssh原理以及与https的区别</a></p><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>&emsp;&emsp;加密的方式主要有两种：对称加密（也称为秘钥加密），非对称加密（也称公钥加密）。SSH就是一种常用的公钥加密协议。<br>&emsp;&emsp;SSH为Secure Shell的缩写，由IETF的网络小组所制定；SSH为建立在应用层基础上的安全协议。SSH是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用SSH协议可以有效防止远程管理过程中的信息泄露问题。SSH中主要涉及以下概念：</p><blockquote><ul><li>public /private key：公钥/私钥，可以是公钥加密，私钥解密；也可以是私钥加密，公钥解密</li><li>know_hosts : 存储在客户端中，已经确保正常、可以安全连接的所有服务器(hosts)</li><li>authorized_keys ：存储在服务器中，已经认证的客户端的公钥</li><li>文件夹c:/user/.ssh中包含本客户端的SSH文件，包括<ul><li>id_rsa ：本客户端的私钥存放文件</li><li>id_rsa.pub ：本客户端的公钥存放文件</li><li>known_hosts ：已判定安全的服务器</li></ul></li></ul></blockquote><h1 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h1><p><img src="/images/programme/ssh/symmetrical-code.jpg" alt="对称加密"><br>&emsp;&emsp;公钥加密后的密文，只能通过其对应的私钥进行解密。对称加密的加密强度高，很难破解。但是在实际应用过程中不得不面临一个棘手的问题：如何安全的保存密钥呢？尤其是考虑到数量庞大的Client端，很难保证密钥不被泄露。一旦一个Client端的密钥被窃据，那么整个系统的安全性也就不复存在。</p><h1 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h1><p>&emsp;&emsp;为了解决对称加密中秘钥安全性问题，非对称加密应运而生。非对称加密有两个密钥：”公钥”和”私钥”。<br>&emsp;&emsp;从客户端来看，SSH提供两种级别的安全验证。第一种级别（基于口令的安全验证）,第二种级别（基于密匙的安全验证）。</p><h2 id="基于口令"><a href="#基于口令" class="headerlink" title="基于口令"></a>基于口令</h2><p><img src="/images/programme/ssh/unsymmetrical-code.jpg" alt="非对称加密"></p><p>&emsp;&emsp;登录流程：</p><blockquote><p> 1、服务器收到客户端用户的登录请求，服务器把自己的公钥发给客户。<br> 2、客户使用这个公钥，将密码进行加密。<br> 3、客户将加密的密码发送给服务器端。<br> 4、服务器用自己的私钥，解密登录密码，然后验证其合法性。<br> 5、若验证结果，给客户端相应的响应。</p></blockquote><p>&emsp;&emsp;私钥是服务器端独有的，这就保证了客户端的登录信息即使在网络传输过程中被窃据，也没有私钥进行解密，保证了数据的安全性，这充分利用了非对称加密的特性。<br>&emsp;&emsp;但是不能保证你正在连接的服务器就是你想连接的服务器。可能会有别的服务器在冒充真正的服务器，也就是受到“中间人”这种方式的攻击。</p><h2 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击</h2><p><img src="/images/programme/ssh/unsymmetrical-code-attack.jpg" alt="中间人攻击"><br>&emsp;&emsp;如果有人截获了登录请求，然后冒充远程主机，将伪造的公钥发给用户，那么用户很难辨别真伪。因为不像https协议，SSH协议的公钥是没有证书中心（CA）公证的，也就是说，都是自己签发的。可以设想具体场景，如果攻击者插在用户与远程主机之间（比如在公共的wifi区域），用伪造的公钥，获取用户的登录密码。再用这个密码登录远程主机，那么SSH的安全机制就荡然无存了。这种风险就是著名的”中间人攻击”(Man-in-the-middle attack)。<br>&emsp;&emsp;从上面的描述可以看出，问题就在于如何对Server的公钥进行认证？在https中可以通过CA来进行公证，可是SSH的publish key和private key都是自己生成的，<strong>没法公证</strong>。<strong>只能通过Client端自己对公钥进行确认</strong>。</p><p>&emsp;&emsp;在使用ssh进行第一次git登录的时候，系统会出现下面提示信息：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh user@host</span><br><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">'host (12.18.429.21)' can't be established.</span></span><br><span class="line">RSA <span class="keyword">key</span> fingerprint <span class="keyword">is</span> <span class="number">98</span>:<span class="number">2</span>e:d7:e0:de:<span class="number">9</span>f:ac:<span class="number">67</span>:<span class="number">28</span>:c2:<span class="number">42</span>:<span class="number">2</span>d:<span class="number">37</span>:<span class="number">16</span>:<span class="number">58</span>:<span class="number">4</span>d.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no)?</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面的信息说的是：无法确认主机host(12.18.429.21)的真实性，不过知道它的公钥指纹，询问你是否继续连接？所谓”公钥指纹”，是指公钥长度较长（这里采用RSA算法，长达1024位），很难比对，所以对其进行MD5计算，将它变成一个128位的指纹。上例中是98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d，再进行比较，就容易多了。<br>&emsp;&emsp;当远程主机的公钥被接受以后，它就会被保存在文件.ssh/known_hosts之中。下次再连接这台主机，系统就会认出它的公钥已经保存在本地了，从而跳过警告部分，直接提示输入密码。</p><h2 id="基于秘钥"><a href="#基于秘钥" class="headerlink" title="基于秘钥"></a>基于秘钥</h2><p>&emsp;&emsp;使用密码登录，每次都必须输入密码，非常麻烦。好在SSH提供了另外一种可以免去输入密码过程的登录方式：公钥登录。<br>&emsp;&emsp;所谓”公钥登录”，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。</p><p><img src="/images/programme/ssh/unsymmetrical-login.jpg" alt="公钥登录"></p><p>&emsp;&emsp;公钥认证流程：</p><blockquote><p> 1、客户端用户将自己的公钥存放在服务器上，追加在服务器的文件authorized_keys中。<br> 2、服务器收到登录请求后，随机生成一个字符串str1，并发送给客户端。<br> 3、客户端用自己的私钥对字符串str1进行加密。<br> 4、将加密后字符串发送给服务器。<br> 5、服务器用之前存储的公钥进行解密，比较解密后的字符串和str1是否一致。<br> 6、根据比较结果，返回客户端登陆结果。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在github的SSH keys中添加本地的key，这样就可以免账号密码登录、push代码了。&lt;/p&gt;
    
    </summary>
    
      <category term="programme" scheme="https://panxiang315.github.io/categories/programme/"/>
    
      <category term="Hexo" scheme="https://panxiang315.github.io/categories/programme/Hexo/"/>
    
    
      <category term="git" scheme="https://panxiang315.github.io/tags/git/"/>
    
      <category term="ssh" scheme="https://panxiang315.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>产品连接客观世界、过去与将来</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/product-connection/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/product-connection/</id>
    <published>2018-07-30T02:01:24.000Z</published>
    <updated>2018-07-30T08:35:07.457Z</updated>
    
    <content type="html"><![CDATA[<p>互联网时代已经结束了。2018年之后，新机会属于以互联网为基础设施的科技公司、新品牌公司。<br>中国原生品牌井喷的时代，愿你置身局内。</p><a id="more"></a><hr><p>&emsp;&emsp;我的好朋友李学凌曾经有个签名档，是“make things, change things”。简单可以翻译为“做东西，改变东西”。另外一个好朋友王兴也曾经有个签名档，”create as god, work as slave”可以翻译为“像奴隶一样去工作，像上帝一样去创造。”<br>&emsp;&emsp;这都是他们很久很久以前的签名档，但是因为我非常喜欢，所以一直记得。因为这两句话，“做东西，改变东西”,“像奴隶一样去工作，像上帝一样去创造”就是一个产品经理的人生。应罗胖和脱不花之邀，很高兴在得到上做这套产品课，讲了作为一个产品经理，应该具备的概念点和思考框架。但可能我个人的心愿还不止于此。我希望中国有更多产品经理，有更多动手工作，改变现实、优化世界的人。</p><h1 id="海中之盐"><a href="#海中之盐" class="headerlink" title="海中之盐"></a>海中之盐</h1><p>&emsp;&emsp;我讲一个盐的故事。1914年冬天，有个年轻人叫范旭东，他独自一个人到了天津塘沽。塘沽靠海，海滩上一片白，但那不是冬天的冰雪，而是盐。你想象一下那个景象：无人的海边，海里的盐一佗一佗凝结在沙滩上，放眼望去白茫茫一片。范旭东是湖南人，他看到这一幕非常激动。日后他对伙伴说：“一个化学家，看到这样丰富的资源，如果还没有雄心，未免太没有志气了。”<br>&emsp;&emsp;咱们国家有漫长的海岸线，但是几干年来咱们的祖先一直都没盐吃。古代盐就是钱，钱谬、程咬金都贩过私盐，《金瓶梅》中西门庆赚的最大一笔钱是从盐上来的。但是这些盐，这些钱，就这样像冰雪一样堆在沙滩上。为什么面对资源却不能处理？任何一个学过高一化学的人，如果穿越回古代，都可以找个无人的海岸，从大海里取出盐。而就生活在海边的渔民，是古代最惨的人，他们只认识鱼，而不知道在身边滚滚而来的海浪里，就有盐，就有资源的本身。<br>&emsp;&emsp;缺乏专业化视角和专业化能力会导致什么呢？仅从产品结果看，我们中国人一直吃土法制作的粗盐，盐氯化钠含量不足50％。当时西方发达国家已经明确规定，氯化钠含量不足85％的盐不许拿来做伺料。因此，有西方人讥笑我们是“食土民族”。直到1915年范旭东开办久大精盐公司，中国才做出了95％以上纯度的盐。中国人吃到像回事的盐，才刚刚100年。今天我们中国人对自己美食真实的自信，但是100年前连像回事的盐都没有，更谈何自信。<br>&emsp;&emsp;所谓自信是在不断的创造与反馈中建立的。盐是如此。互联网也是如此。</p><h1 id="产品能力，大海取盐"><a href="#产品能力，大海取盐" class="headerlink" title="产品能力，大海取盐"></a>产品能力，大海取盐</h1><p>&emsp;&emsp;我们不谈过去60年或者20年，互联网对这个世界的优化，只谈最近7年。7年前的2011年，有两个重要的产品，微信和小米手机。微信的意义是什么，对于每个人都有体会。小米手机有两个意义：</p><blockquote><p> 1、它开启了低端智能手机的市场，直接推动了中国智能手机的普及。之后的一年2012年，被定义为中国的移动互联网元年。<br> 2、小米的极致化单品。创始人社会化网络粉丝经济的系列爆发，开启了中国的新品牌浪潮。</p></blockquote><p>&emsp;&emsp;这7年，因为智能手机的普及，微信这种超级应用的拉动，中国8亿人成为了高频的网民。基于移动场景的商业O2O、新闻、娱乐都在重构。很多人学习小米的爆品策略，推出的网红品牌层出不穷，例如社会化营销的网红奶茶、网红洗发水、网红内衣、网红面膜等。<br>&emsp;&emsp;今天你已经习以为常，成为生活依赖的应用，放到7年前，其实统统都是还没有的。你有专业化视角，你有专业化能力，你可以从大海里取出盐，你可以在一间会议室里做出微信，你可以在一个小屋子里定义出小米手机。自此，无数人有了不同的机会，无数人的生活因此改变。这就是一个产品经理的荣耀。</p><h1 id="中国产品的大航海时代"><a href="#中国产品的大航海时代" class="headerlink" title="中国产品的大航海时代"></a>中国产品的大航海时代</h1><p>&emsp;&emsp;前一段我和雷军、曾鸣都做了深度沟通，大家的共识是：互联网时代结束了。2018年以后，新公司应该是以互联网为基础设施的科技公司，新品牌公司。<br>&emsp;&emsp;这些年，新品牌已经冒出来很多了，但是一定还会更多，还会更强。我坚信下一个时代，由中国原生的品牌一定会像宝洁、雀巢一样走向全世界。为什么我有这个信心？大家有没有注意，美国网红品牌没有中国多，因为美国没有消费升级。美国的消费升级，是由现在已经成为国际大牌的这些企业主导完成的。它们借助了美国的内需和工业能力，建设了企业对用户的服务能力，借助资本能力、设计能力、心理优势，快速实现全球化。<br>&emsp;&emsp;在上一时代，国际大品牌碾压中国消费品、快消品、日化品的时候，因为我们资本能力、设计能力、心理优势、产业链掌控度全面低微。但是今天时代变了，整个中国商业的基础能力，发生变化了。<br>&emsp;&emsp;淘宝一个90后女孩创立的网红女装，一个公司400人，充分使用社会化网络协同，一年可以做到20亿的交易额。雷军、杨元庆、余承东这些国际化先行者的竞争擂台，已经到了在印度市场论输赢，在印尼市场较高低，在巴西在北美分胜负。今天的中国不少领域的产品人，在中观套路、在微观体感、在宏观视野，都已经不输于那些国际大厂的产品经理。<br>&emsp;&emsp;如果你抛开惯性化的仰视和妄自菲薄，我们客观评估一下，曾经横吞了整个中国日化、消费品类的那些国际大牌，你会感受到中国还在孕育奇迹。我们一定会孕育出下一个宝洁，下一个雀巢，下一个ZARA。<br>&emsp;&emsp;这是我为什么要分享这个课程的原因。不管是20年前我在联想，亲历联想如何同时打败四五十个国内品牌和十余个国际大牌，成为中国第一的过程。还是今天我站在这里讲，怎么从零做一个产品，怎么拥有第一个用户，怎么与用户连接，怎么在用户驱动里迭代。20多年来，我从来都没有改变过，对我们自己的创造力，对我们自己做东西能力的信心。<br>&emsp;&emsp;100年前中国人对中国美食有自信吗？那会儿连像样的盐都没有。就好像1997年，或者2007年一样，站在一个新的机会窗口，我相信这又是一个中国原生品牌并喷的时代。</p><h1 id="愿你伟大时代，置身局内"><a href="#愿你伟大时代，置身局内" class="headerlink" title="愿你伟大时代，置身局内"></a>愿你伟大时代，置身局内</h1><p>&emsp;&emsp;这是另外一个伟大的时代，你我，都不应该置身局外。愿你拥有专业化视角和专业化能力。看到时代的浪潮，不再抱怨波涛滚滚的凶险，而能看到大海的本身就是资源。<br>&emsp;&emsp;不需要哀怨自己没有出身背景，没有干爹，在这个时代，只要你拥有一个用户，你就拥有了一个开始。<br>&emsp;&emsp;愿你能够使用这套方法，建立自己的动手能力。动动手，你所在的小世界就会优化一点点。愿你在这个时代，把握真正属于你的那个机会。把你一生积累的认知、审美、好恶全部用上，为这个世界提供一个不一样的产品，向世界交付你的价值。愿你拥有自信、财富与荣耀。让我们相信，明天会更好。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;互联网时代已经结束了。2018年之后，新机会属于以互联网为基础设施的科技公司、新品牌公司。&lt;br&gt;中国原生品牌井喷的时代，愿你置身局内。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="盐" scheme="https://panxiang315.github.io/tags/%E7%9B%90/"/>
    
  </entry>
  
  <entry>
    <title>人生逻辑大于商业逻辑</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/product-logic/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/product-logic/</id>
    <published>2018-07-30T01:59:34.000Z</published>
    <updated>2018-07-30T07:10:29.598Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;商业是以利益为中心的，人生是以意义为中心的。“点线面体”的战略选择固然重要，但正确的判断不一定就是你的机会。</p><a id="more"></a><hr><p>&emsp;&emsp;产品能力是现实的、功利的能力。做产品要求你判断客观条件和机会、盘点资源、按照用户体验的方式，有层次地整合起来，向世界交付价值获得报偿。在这一节课的时间，我想和你分享一下我的一些观察和感受，就是：人生逻辑大于商业逻辑。<br>&emsp;&emsp;我为了把课串起来，做了一套扑克牌。那就会面临问题是谁是大王小王？刚一开始，我想用“点线面体”做大王，“依赖”做小王。“点线面体”的战略选择，属于宏观能力，打大仗，靠的得是宏观视野、势能的使用和趋势的把握。但心里还是有些不确定，和很多朋友沟通后，最后选择“确定性”做大王，“依赖”做小王。</p><h1 id="雷军和“风口论”"><a href="#雷军和“风口论”" class="headerlink" title="雷军和“风口论”"></a>雷军和“风口论”</h1><p>&emsp;&emsp;为什么次序是这样的？不得不提雷军那句广泛传播的名言：“只要站在风口，猪也能飞起来。”这些年，风口论成了最著名的成功学。抢风口几乎成了创业的规定动作，你在不在风口上成了所有资源方判断你的标尺，成了社交场面里介绍每个人必须有的一个标签。<br>&emsp;&emsp;不过，我给我的女性朋友们创业建议时，我的说法是：“女性创业，不要抢风口。”抢风口，背后的一个核心能力是抢资源的能力：争夺最好的团队，争夺最大笔的投资，争夺公众最大化的关注，争夺合作伙伴最优质的资源与配合……争夺这件事上，基本上女性的能力是弱于男性的。男生从小就会有推推打打的游戏，踢足球、打篮球，与人协作去争抢一个东西，甚至经常磕蹭受伤，所以从小就习惯争夺。而女生从小玩的是安安静静的游戏，对如何主动去争夺，如何组织团队去集体争夺，甚至在争夺过程中，自己与队友如何应对有意无意的碰撞与伤害，几乎是完全没有概念的。<br>&emsp;&emsp;很多人看到一个资本的风口，觉得自己有认知能力，有一些所谓的资源，有不甘心于人后的心气，就冲上去。但其实对“争夺”这件事，无论是历史训练，还是心理准备其实都是不足的，很难不败下阵来。<br>&emsp;&emsp;2014年到现在，咱们看到了几次风口，O2O上门服务、打车大战、外卖大战、网络金融、共享单车……所有的“风口争夺战”挺到最后并飞上天的那个，其实真没有谁是碰了运气的猪，全部是创业了好久，磨炼了好久的老手。<br>&emsp;&emsp;雷军会说这句话，其实是因为他曾经是个内心非常骄傲的人。如果你当自己是一只雄鹰，就不需要依赖风，不论自己做什么随时随地都可以成功。但是，2007年金山上市，对一般人来讲已经非常成功了，而雷军却郁闷得要死，因为这不是他要的大成。所以他做小米时谈飞猪理论，把自我矮化成一头猪，时刻提醒自己：我个体能力只能达到这个点，如果我想大成，需要依赖机会、环境、势能。<br>&emsp;&emsp;我们上一课谈了中观、微观、宏观能力，就能否大成要靠宏观能力，个体的能力之于机遇其实微不足道。</p><h1 id="确定性和不确定性"><a href="#确定性和不确定性" class="headerlink" title="确定性和不确定性"></a>确定性和不确定性</h1><p>&emsp;&emsp;宏观能力、点线面体的战略选择当然很重要。但是它是最重要的吗？当你对自己根据“点线面体”做了一个宏观判断，是否真的能不论自己准备是否成熟，内心是否确定，就冲到那个风口去？<br>&emsp;&emsp;我想讲一个我自己的故事。熟悉我的一些朋友都了解，2016年我差点和一个投资界的大佬一起做一个母基金。折腾了近一年，连第一笔钱都筹齐了，最后我还是选择不做了。这个过程很狼狈，算我人生的教训之一。我选择做母基金肯定是点线面体的战略选择，合作伙伴丁先生是业界资深人士，我们之间有很多共同的朋友。母基金又很高端，算是一个上流社交圈，客观来讲我应该做这件事。<br>&emsp;&emsp;接着，就要抛出这副扑克牌的王牌“确定性”和作为红桃K的“不确定性”。说“确定性”和“不确定性”之前，我说一下马云的组织观：</p><blockquote><p> 三级组织是共同规则。一般的公司职员、学生、生产线的工人、军人、犯人都是共同规则管理。<br> 二级组织是共同利益。平时管士兵是共同规则；打仗要攻城了，谁先进城有赏，这算一种共同利益。老板和员工之间，是共同规则；和股东之间是共同利益。<br> 一级组织是共同信仰。共产党早期的故事，就是有信仰的组织。<br> 顶级组织呢？是至情至性。</p></blockquote><p>&emsp;&emsp;桃园结义是中国最美的图景之一。我算了一下时间，他们三个人从公元184年起兵征讨黄巾军，到公元214年入蜀建立了自己的稳定地盘，整整30年一直在四处征战，没有根据地。刘备三顾茅庐去请诸葛亮是公元207年，隆中对的重要性在于确定了天下三分的战略。刘关张三个人在没有清晰战略，一直辗转征战的情况下合作了23年。23年，一直都在不确定、受挫的状态里，核心团队没有散，我们们心自问一下这有多难？这真是至情至性。<br>&emsp;&emsp;所以我为什么没和丁先生做母基金？因为母基金周期较长，至少10年。我和丁先生至情至性肯定谈不上，共同信仰好像也没有，剩下的就只有共同利益。10年，充满了各种不确定的冲击，我们对彼此的价值和利益的认定，一定会有分歧。这就是一个极其脆弱的合作。我知道母基金是符合点线面体的好选择，但是我对我和丁先生的关系没有确定感。于是我没有办法因为一瞬间看到了一件事的好，就把自己交给这个很脆弱的关系，一起面对未来10年的不确定。<br>&emsp;&emsp;这其实是我把“点线面体”变成了黑桃K，而把“确定性”做成了大王的原因。世界是多维的，到处是此起彼伏的点线面体，各种机会呈现出的就是各种变幻，各种不确定。你会因为对于机会和利益的判断，而在各种不确定中坚持多久呢？<br>&emsp;&emsp;那什么样的人、东西、感觉会给你确定感，让你觉得可依赖，其实是极其重要的。为什么有人画秘密花园填色图会觉得治愈？有人做饭会觉得治愈？因为这些都是有确定感的东西。对一个产品的使用，对一个人的关系。持续收到确定感的反馈，就会觉得安全，觉得可以依赖。如果突然变得不确定，就会有被伤害的感觉。这也是网站不要轻易改版的原因。<br>&emsp;&emsp;我们的课是产品课，是否符合点线面体的大趋势，固然是大成的标准；但如果你无法持续输出确定感，无法让人依赖，其实连小成都达不到。</p><h1 id="点线面体VS确定性依赖"><a href="#点线面体VS确定性依赖" class="headerlink" title="点线面体VS确定性依赖"></a>点线面体VS确定性依赖</h1><p>&emsp;&emsp;说完确定性，那什么是依赖呢？依赖是一种真实的长期关系。<br>&emsp;&emsp;你观察你的父母，你身边的伴侣，你认识的创业合伙人，谁是完美的？他们之间有没有抱怨、不满？肯定的。他们之间有依赖吗？有的。所谓“完美的产品”“极致的产品”就像“完美的人”一样，只是一种追求，但世上并不存在。重要的不是完美，而是对方要的那个确定性你是否还能提供，对方是否还依赖你，这才是关系的关键。就好像我们对我们的父母，当我们不依赖他们，即使千恩万谢，也是会离开。产品和用户之间也是如此。<br>&emsp;&emsp;所以，红桃K是“不确定性”，它是生活的一部分，是我们不能畏惧，需要勇敢拥抱的东西。黑桃K是“点线面体”，是宏观格局的判断，是你做人生选择题时可以采用的思考框架。而大王是确定性，小王是依赖。这就是我们最后确定的4张牌。<br>&emsp;&emsp;如果你内心没有“确定感”，如果没有人依赖你，你也没有人可以依赖，点线面体、价值网、三级火箭这些创新战略，即使你看到了也是空无而不可持续的。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;所以，为什么会有很多企业家，很多事看上去可以做、应该做，但没有做，这就是“非不为也，是不能也”。成功学给出的逻辑虽都很对，但是我实在是干不来。<br>&emsp;&emsp;其实正确的做法就是，自己真实能做到的。商业是以利润为中心，人生是以意义为中心。商业并非人生的全部。人死前盘点自己的一生，其实没有人看这一生赚了多少利润。做你有内心确定感的事，人生逻辑大于商业逻辑。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;商业是以利益为中心的，人生是以意义为中心的。“点线面体”的战略选择固然重要，但正确的判断不一定就是你的机会。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="人生逻辑" scheme="https://panxiang315.github.io/tags/%E4%BA%BA%E7%94%9F%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>看产品的微观、中观与宏观视角</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/product-view/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/product-view/</id>
    <published>2018-07-30T01:56:50.000Z</published>
    <updated>2018-07-30T07:01:20.783Z</updated>
    
    <content type="html"><![CDATA[<p>人的能力分为三种：<br>中观套路：从大公司里学习做事的招数；<br>微观体感：长时间联系，练就高手的判断；<br>宏观能力：带大队伍打大仗的能力。</p><a id="more"></a><hr><p>&emsp;&emsp;有人问我，你怎么判断一个人是不是产品高手？怎么评估这个人厉害在哪里，不厉害在哪里？<br>&emsp;&emsp;我把好产品体系用三个层次再总结一下，分别是：中观、微观、宏观。你可以对照看一下自己，或者你要评估的人，在这个三个层面水平如何？</p><h1 id="中观套路：学习招数"><a href="#中观套路：学习招数" class="headerlink" title="中观套路：学习招数"></a>中观套路：学习招数</h1><p>&emsp;&emsp;什么叫中观？就是套路。<br>&emsp;&emsp;第二模块之后的内容，有大量的套路：用户画像、痛点和痒点、整体流程图、用户体验地图和服务蓝图。书店里有很多讲套路的书：用户需求、产品策略、功能定义、流程图制作、产品原型制作、项目管理、数据分析、产品运大公司是学习套路的好地方。一家公司能系统培养某一类人，说明这家公司在这个领域有与众不同的套路，比如：联想出销售、腾讯出产品经理、阿里出运营、百度出技术。<br>&emsp;&emsp;所以大学毕业去大公司是有价值的，因为套路有价值。套路像武功招数一样，是前人总结的有效经验。比如用户体验，如果你不懂用户画像、用户体验地图、用户体验这些套路性动作，按照自己的模糊感觉做，也许也能接近用户体验的完整。但练好套路可以自我排查问题，便于和团队沟通。<br>&emsp;&emsp;除非你打算在大公司呆一辈子，否则最好不要超过5年。为什么？因为大公司教你套路，同时也会深深地把你角色化，让你只能作为系统的一个角色，习惯系统内的生存。创业企业也不要迷信大公司的套路，最典型的就是从腾讯挖个产品经理，创业者就觉得可以把自己的产品交给他。甚至与这个产品经理PK的时候，还不自信，觉得对方是大公司出来的更专业。<br>&emsp;&emsp;因为，靠套路成不了高手。<br>&emsp;&emsp;套路可以让你更有章法地展现自己，更容易搞定面试官，成为系统内按指令行事的公司中层。如果你为既定资源，既定需求的系统服务，套路足以胜任。因为一件事做到什么程度，多一点少一点的刻度，有领导控制，有系统控制。但是如果你想依靠这门手艺，自理门户，博得名利，那么你面对的是整个市场的竞争与用户的分流。你每天每时每刻，都需要面对每一个细节的取舍。没有人告诉你“可以了”，没人告诉你对与错，甚至用户给你的反馈都是混杂的。<br>&emsp;&emsp;你如何做出每一个微小的决策，持续迭代，持续优化？</p><h1 id="微观体感：成为高手"><a href="#微观体感：成为高手" class="headerlink" title="微观体感：成为高手"></a>微观体感：成为高手</h1><p>&emsp;&emsp;要成为能够自我决策的好手，我们就需要产品经理能力的第二个维度：微观体感。每一个微小的动作选择叠加起来，就是你拿出来的产品，就是你活出来的样子。那么日常中，我们做每一个细小选择，靠的是什么？靠微观体感，就是真实地感知每一个微小瞬间。<br>&emsp;&emsp;产品是一种被动的艺术。一个产品只能在被动中，默默把握每一个微小的主动机会，在每一个接触的瞬间，每一次的交互里，让用户顺畅地深入下来。用户动力不足，要放弃这个产品，你是没有任何办法的。最挑剔的人，其实就是最有防御意识的人。如果产品突然碰触用户的某个意识神经，让用户产生防御，那流失的几率就会加大。<br>&emsp;&emsp;举一个并不新鲜的例子，日本一位做寿司的师傅叫小野二郎，一部有关他的纪录片叫《寿司之神》。小野二郎做寿司时间超过55年，直到70多岁，他还对寿司还有很多新想法，还会在梦里继续捏寿司。纪录片里讲小野怎么带徒弟；在小野二郎的店里做学徒，首先必须学会用手拧毛巾，毛巾很烫，一开始会烫伤手。没学会拧毛巾，就不可能碰鱼；然后，要学会用刀、料理鱼。十年之后，徒弟才能煎蛋。纪录片里的学徒说：“我练习煎蛋很久了，以为自己没问题，但在实际操作时，却不断搞砸。他们一直说‘不行，不够好’。”十年的基础训练完毕，一名学徒终于够格煎蛋，却发现自己似乎永远无法满足师傅们的标准。他又花了4个月，经历200多个失败品后，做出了第一个合格的成品。小野二郎说：“这才是应该有的样子”，终于承认这名学徒为“职人”。他高兴哭了：“我想挥拳庆祝，但我很努力地不动声色。”<br>&emsp;&emsp;如果是你，你能清晰地说出那200个失败品的不同吗？能说出那200个失败品和唯一的合格品之间，微妙的临界点在哪吗？小野二郎可以真切地判断——来自他的微观体感。为什么花10年学习拧毛巾、用刀和料理鱼？为了建立精微的微观体感。达•芬奇为什么要练习画鸡蛋？为了建立精微的观察和手感。用普通人的视角来看，鸡蛋都一样。但要是成为一个伟大的画家，就要不断练习，在最不容易建立观察的地方，建立每一个微小处的觉察。<br>&emsp;&emsp;反思什么样的设计才能让用户满足？复盘用户是否产生了防御心？为什么会在这里卡顿？产品应该怎么做才自然？成为天才的一万小时都干了些什么？大量的时间都是在建立细微的微观体感，建立长在自己身体上的真实感觉，眨眼之间的好恶判断。<br>&emsp;&emsp;很多爱好者、发烧友是有微观体感的，他们需要补中观的套路，才能够有系统、有层次地释放他的感受。而在大公司也好，看书纸上谈兵也好，拥有了中观套路的人，一定要补微观体感。否则，说起来都对，做事却都不到位。<br>&emsp;&emsp;如果能够同时拥有微观体感和中观套路，那就是一个产品好手了。</p><h1 id="宏观能力：打大仗"><a href="#宏观能力：打大仗" class="headerlink" title="宏观能力：打大仗"></a>宏观能力：打大仗</h1><p>&emsp;&emsp;那什么是宏观能力？就是打大仗的能力。你说锤子手机的微观体感和中观套路如何？很好啊。比起小米手机，差在宏观能力。你说易到用车当时的用户体验和口碑如何？很好啊。比起滴滴，差在宏观能力。在这套课里的点线面体、创新模式都是宏观能力。几家定位相似、体验相似的产品，靠优化用户体验，其实是无法终结战争的。大仗拼胜负，靠的是宏观能力。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;练好套路，在大公司做到中层没问题。要想自己为结果负责，开门立户创业，必须有长在自己身上的微观体感。没有微观体感，靠套路判断，就是自欺欺人。但打大仗，做顶级高手，其实宏观能力也要强。这是我们对之前的内容，用微观、中观、宏观三个层级做的一个小小的总结。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人的能力分为三种：&lt;br&gt;中观套路：从大公司里学习做事的招数；&lt;br&gt;微观体感：长时间联系，练就高手的判断；&lt;br&gt;宏观能力：带大队伍打大仗的能力。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="微观、中观、宏观、视角" scheme="https://panxiang315.github.io/tags/%E5%BE%AE%E8%A7%82%E3%80%81%E4%B8%AD%E8%A7%82%E3%80%81%E5%AE%8F%E8%A7%82%E3%80%81%E8%A7%86%E8%A7%92/"/>
    
  </entry>
  
  <entry>
    <title>颠覆式创新：成败价值网</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/value-net/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/value-net/</id>
    <published>2018-07-30T01:55:15.000Z</published>
    <updated>2018-07-30T06:22:05.188Z</updated>
    
    <content type="html"><![CDATA[<p>一家企业，成也价值网，败也价值网。<br>价值网里有三个角色：客户、对手、投资人，他们既成就了你，也会束缚你。<br>一家企业会形成自己整体思考问题的方式，就是组织心智，一旦形成，很难改变。</p><a id="more"></a><hr><p>&emsp;&emsp;讲创新不能不谈颠覆式创新，颠覆式创新5年前还是非常新的概念，现在已经成了一个互联网的热词了。马克思说：人的本质在其现实性上是一切社会关系的总和。你不是一个孤立的个体，你是你一切社会关系的总和。企业是其赖以生存的价值网的某一节点。不管人还是企业都生活在一个网里。</p><h1 id="价值网与颠覆式创新"><a href="#价值网与颠覆式创新" class="headerlink" title="价值网与颠覆式创新"></a>价值网与颠覆式创新</h1><p>&emsp;&emsp;什么叫价值网？《创新者的窘境》里有这样一段话：真正决定企业未来发展方向的是市场价值网，而非管理者；真正主导企业发展进程的是机构以外的力量，而非机构内部的管理者。管理者只是扮演一个象征性的角色。<br>&emsp;&emsp;企业真正的管理者，就是识别自己赖以生存的价值网。这个管理者应该建立一个组织，与这个价值网进行资源对接。一个好的组织结构，它的每一个组织部门，都是为了和某一个社会价值网的分支进行对接而设计的。一个失败的企业的组织结构，是管理者按照自己需求设置的。<br>&emsp;&emsp;谈颠覆式创新，为什么要先谈价值网？因为很多没落的企业，在自己的价值网上依然是优秀的，只是它依附的价值网过时了；搭载在新的价值网上的企业，实现了自己的颠覆式创新。就好像你是你社会关系的总和，你的社会关系哺育塑造了你，同时他们也锁定、限制和束缚了你。一个企业成就于自己不同部门和它依附价值网之间，资源与资金的输入输出。但它赖以存在的价值网，也会锁死这家企业。<br>&emsp;&emsp;马化腾说：“也许你什么错都没有，只是老了。”很多没落的企业，也是什么错都没有，只是它的价值网过时了。</p><h1 id="计算机行业的价值网更迭"><a href="#计算机行业的价值网更迭" class="headerlink" title="计算机行业的价值网更迭"></a>计算机行业的价值网更迭</h1><p>&emsp;&emsp;我先讲一个古老的故事，其实是一连串古老的故事。<br>&emsp;&emsp;1940年代，世界第一台计算机UNIVAC（通用自动计算机）被研制出来。这一伟大产品被认为是专为科研工作而设计的，因此对企业级商业市场毫无兴趣。<br>&emsp;&emsp;1950年左右，UNIVAC的公司市场调研结论：到2000年，电脑的销售量将达到1000台。为什么会出现这样的市场预判？因为它是基于自己的价值网做的预判，而UNIVAC的公司的价值网就是为顶级科研服务，从这个角度而言，他并没有错。IBM和其他早期的美国计算机一样，也是专门为科研设计的。但是不同的是，IBM积极拥抱了企业对计算机的强烈需求。它其实用的就是UNIVAC的技术，但是为会计工作做了优化，所以IBM公司叫国际商业机器公司，靠着服务会计起家。<br>&emsp;&emsp;10年以后，UNIVAC仍然拥有当时最先进的计算机。但是，IBM却几乎拥有了整个计算机市场。因为大家选择了不同的价值网，你可以认为IBM颠覆式创新，颠覆了UNIVAC的市场。UNIVAC的价值网在科研，而IBM公司的价值网在商业企业。<br>&emsp;&emsp;80年代，有句话说，“任何公司向IBM业已占据的领先地位直接发起挑战都无望获得成功。”然而PC出现了，苹果电脑诞生了，联想诞生了。后来的故事，就是我自己亲身经历的故事了，中国出了联想。1997年联想电脑在中国市场打败IBM、惠普、康柏位列中国市场占有率第一的时候，乔布斯刚返回苹果不久。<br>&emsp;&emsp;2004年，联想收购了IBM的PC业务，成为了全球PC的老大。IBM曾经是神一般的存在，而PC行业皇冠上的明珠Thinkpad，被联想摘下了。苹果手机现在是手机行业皇冠上的明珠，如果有一天，小米把iphone买了，一举成为全球手机行业老大，那成就和2004年联想收购了IBM的PC业务是类似的。<br>&emsp;&emsp;2004年，联想的杨元庆做到这件事的时候，只有40岁，雷军是40岁才刚刚创办了小米。所以杨元庆在40岁就已经取得了一个较高的成就。但是之后的十几年，他一直被牢牢地锁死在PC的这张价值网里，错过了移动互联网。大家都说雷军是劳模，极其勤奋，如果说我还见过一个勤奋程度不逊于雷军的人，就是杨元庆。杨元庆以一个中国本土企业，去整合高贵傲慢的IBM全球资源，两年的时间，持续两个星期飞3个洲，睡觉都在飞机上，下了飞机就开会，还练好了英语，用英语直接管理IBM分布在全球的经理人。<br>&emsp;&emsp;可见价值网的力量多么强大，即使像杨元庆这样超级优秀的人都难以挣脱。</p><h1 id="价值网的三大要素"><a href="#价值网的三大要素" class="headerlink" title="价值网的三大要素"></a>价值网的三大要素</h1><p>&emsp;&emsp;混沌大学的李善友教授是专门讲颠覆式创新的，他对价值网的解释是：价值网里，至少有三个角色：一是客户，二是对手，三是投资人。就是这三个核心力量，加上其他千丝万缕的牵制，牢牢地捆住一个大企业。<br>&emsp;&emsp;为什么IBM没有推出小型计算机？因为它的客户是大型机构的核算和数据处理部门，不需要小型计算机。他们因为服务客户而错过了另外一个大的增长。IBM没有进入小型机，因为背后的价值网是顾客决定的。企业第一目的是生存，生存必须获取资源，而资源是顾客提供的。客户是我们最重要的资产，但也能是我可们最主要的创新盲区。所以资源分配流程其实不是管理者定义的，而是来自价值网中的客户需求与对手挤压。并不是有技术、有人才就什么都能做。<br>&emsp;&emsp;价值网里的第二个要素，是对手。在江湖里做企业，很多时候对手对你的刺激是直接刺激。生物学说共同进化，两个人与其说是相互竞争，不妨说是跟竞争对手构成一个网，我恨你，你恨我，互相作为参照物，谁也离不开谁，眼里全是竞争对手。比如360公司2011年上市，2012年全力以赴做搜索，在这之前是周鸿伟与李彦宏十一年的缠斗，这在周鸿伟最近出的自传中有提到。但事实上，其实我们应该警醒。我们会被思维遮蔽，真正缠住你视野的，有时候不是客户，而是你的对手。所以，放下贪婪、愤怒，这也许真的要靠智慧。<br>&emsp;&emsp;价值网里的第三个要素：是投资人。我想所有的创业者尤其是上市公司，对此深有体会。这也是为什么窝窝团要上市的时候，美团说谁先上市谁就输了。因为资本所要求的增长是个魔咒。联想2014年财务报告很漂亮，但是之后股价就大跌，为什么？因为没有达到分析师预测的增长。股市是一个很丑陋的游戏，增长是一个魔咒，所有企业都丧失在里边，只有10％的企业能够维持良好的增长势头，而只有2%的企业长期超过市场绩效。在资本的增长压力下，大公司很难进入小市场。李彦宏说过，对于百度来讲，低于1％收入比例的市场是不看的。埃隆•马斯克做特斯拉的时候，电动车的销售额占据大型汽车厂商销量的不到1％。所以，大型汽车厂商会因增长魔咒的控制而眼睁睁地放任了特斯拉的崛起。而小市场一旦启动指数级的爆发增长，大公司就再也追不上了。</p><h1 id="组织心智"><a href="#组织心智" class="headerlink" title="组织心智"></a>组织心智</h1><p>&emsp;&emsp;很多极其优秀的公司为什么失败了？管理的书一定会告诉你是管理出问题了。但是写《创新者的窘境》的克里斯坦森的说法是，良好的管理恰恰是他们未能保持行业领先地位的最重要的原因。所以，所谓管理得好的公司，往往是与现有价值网的紧密对接。响应现有客户需求，紧盯对手，满足投资人。所有的弦都绷得高效、流畅，没有冗余和浪费，管理得无比完美。<br>&emsp;&emsp;整个公司的管理设计，都是为了高效服务现有价值网。公司的资源配置如此，公司组织流程的设计也是类似，公司财务评估的方式更是如此。然后就这样长期循环下去。资源要这样安排，组织流程必须这样才合理，财务评估要按照这种价值判断，以上因素加在一起，这是什么？这就形成了“组织心智”!虽然一般说用感叹号很粗鲁，我忍不住用了感叹号，这也是这门课唯一一次使用感叹号的地方。<br>&emsp;&emsp;联想是我的第一份工作，我19岁就在联想上班，我对这家公司有强烈的情感。当年它要做手机的时候，我就知道没戏，因为我了解这家公司的“组织心智”。一系列在这个组织里无比合理的决定，让这家曾经伟大的企业，无法从现有的PC价值网中逃出来。一个组织的心智模式定下来就真的很难以改变，像我们的基因一样看不见，但决定组织的整体思考方式。<br>&emsp;&emsp;这也是为什么新经济给了我们这些没背景，只会琢磨用户体验的人机会。我们的机会就是看到新崛起、新展开的价值网。因为如果是一个新的增量市场，意味着这是一个新的价值网。传统老企业，它的组织心智不一样，所以它没有办法和你一样去做出反应，因此我们创业者充满机会。<br>&emsp;&emsp;iphone开启了移动互联网，iphone是第一台智能手机吗？当然不是。诺基亚早就开始了开发智能手机，并且智能心智开发的很好。但是诺基亚对手机的定义是通信产品，iPhone对手机的定义是互联网手机，是移动互联网的终端。看上去是一样的产品，但代表了完全不同的两张价值网。<br>&emsp;&emsp;联想从PC到移动互联网叫做遇到了非连续；诺基亚曾经是手机霸主，遇到了苹果也叫遇到了非连续。什么是非连续？就是整个社会在发展，整体社会能力升级，新的需求被释放催生新的价值网。传统企业在它传统的价值网里依然可以生存，例如联想依然是pC价值网的霸主，但它在新的价值网里是边缘企业。<br>&emsp;&emsp;新崛起的价值网，才是新大陆。什么是颠覆式创新？颠覆式创新最重要的标准就是，是否开启了一个新的价值网？你是不是到了“新大陆”也许它刚一开始很小，不到传统企业的1％。<br>&emsp;&emsp;1990年新浪来跟联想谈合作，我们会感到奇怪，当时它显然不如《计算机世界》，《计算机报》，但是它是新的价值网。特拉斯刚启动，不到传统汽车厂商的1％。iphone一代刚发布，包括微软的鲍尔默在内的整个硅谷，都对它冷嘲热讽。但是，它一旦开始，就不可逆。<br>&emsp;&emsp;我之前讲的产品方法，都是教你怎么从零到一做一个产品，安身立命赚点钱，继续服务、迭代。颠覆式创新是屠龙术，是产生新帝国的机会。概率非常之小，但我希望听我课程的你，有机会做这样的事。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;我们的创新模块就到此结束了。总结一下：<br>&emsp;&emsp;第一节课，我们谈了用户价值公式。用户价值=新体验-旧体验-用户迁移成本，存量市场的打法就是拼体量，创业公司唯一的机会就是创新、去增量市场。<br>&emsp;&emsp;第二节课，我们谈了未来已来，只是分布得不均匀。根据小鸡孵化器，可以做出人类婴儿的恒温箱。其实我们需要的很多解决方案，就在你旁边已经出现了，需要的是你的思考和洞察。<br>&emsp;&emsp;第三节课，我们谈了新要素、新物种。所有的新产品，都会有些新要素，有些是产本身的升级，有些是把整个社会升级的新能力纳入企业，使企业看上去在提供原来的服务，但它的内在商业运作机理已经非常不同，甚至已经变成了一个新物种。<br>&emsp;&emsp;第四节课，我们谈了互联网圈很爱使用的三级火箭模型。第一级火箭是头部流量，第二级火箭是沉淀用户的商业场景，第三级火箭是交易变现。<br>&emsp;&emsp;最后这节课，我们讲创新模式的帝王术——颠覆式创新，开启新的价值网。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一家企业，成也价值网，败也价值网。&lt;br&gt;价值网里有三个角色：客户、对手、投资人，他们既成就了你，也会束缚你。&lt;br&gt;一家企业会形成自己整体思考问题的方式，就是组织心智，一旦形成，很难改变。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="颠覆" scheme="https://panxiang315.github.io/tags/%E9%A2%A0%E8%A6%86/"/>
    
  </entry>
  
  <entry>
    <title>三级火箭：深度讲解互联网降维打击</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/product-rocket/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/product-rocket/</id>
    <published>2018-07-30T01:52:12.000Z</published>
    <updated>2018-07-30T04:32:26.836Z</updated>
    
    <content type="html"><![CDATA[<p>商业模式的三级火箭：<br>第一级火箭，搭建高频的头部流量；<br>第二级火箭，沉淀用户的商业场景；<br>第三级火箭，完成商业闭环。<br>但有一个问题值得思考，你是追求无限上升的快感？<br>还是想在人类的天空上放一颗星星？</p><a id="more"></a><hr><p>&emsp;&emsp;三级火箭是互联网圈一个特别容易被提起的概念词。我们在《机会判断：点线面体的战略选择》那节课讲了360的三级火箭。<br>&emsp;&emsp;360的第一级火箭是免费杀毒工具，利用这级火箭打破了持续10年的杀毒软件市场三国鼎立的局面，成为用户量最大的安全工具。360的第二级火箭是从免费杀毒工具变为安全网络平台，进而推出360安全浏览器和360安全网址导航。360的第三级火箭就是它最终承载的商业闭环，从安全浏览器和网址导航的广告收入，获得企业的经营利润。</p><h1 id="搜狗的三级火箭"><a href="#搜狗的三级火箭" class="headerlink" title="搜狗的三级火箭"></a>搜狗的三级火箭</h1><p>&emsp;&emsp;2017年上市的搜狗，也是三级火箭模式的受益者。<br>&emsp;&emsp;2003年，张朝阳委任王小川开发搜狗搜索引擎，制衡百度，现在来看搜狗的起步相比较而言是较早的。搜狗开始的时候，Google、百度都还没有上市，Google是2004年上市的，百度是2005年上市的。<br>&emsp;&emsp;百度在做自有品牌的搜索之前，一直运营着两大业务。第一是为门户网站做搜索服务提供商。2000年，新浪就是中国的互联网，新浪的搜索是百度在背后提供服务。百度的第二个业务是做机房，也就是服务器托管服务。百度的强，不仅强在搜索技术优于当时的对手，它对流量的理解也远远优于其他对手，包括在中国开展业务的Google。百度有机房在手，哪台服务器上流量高，这个服务器上跑什么业务，百度再清楚不过了。蔡文胜说过，百度早期最重要的一笔交易就是收购了hao123网址大全，这笔交易为百度奠定了核心流量和利润。<br>&emsp;&emsp;互联网商业就是产品、流量、转化率三个词。2003年，搜狗的产品技术不如百度，对流量的理解更不如百度，做不起来是必然的事。但王小川是天才少年，并且韧劲儿十足，居然没有放弃。2005年，他做了搜狗输入法。我们说一个搜狗的秘史——搜狗输入法是如何快速达到市场占有率70％以上的份额的。360免费杀毒的动力是来自于传统杀毒软件都是收费的，而且价格不菲。输入法一直都是免费的，那么搜狗应该怎么做？搜狗输入法的流量获取依然很有中国的风格。当时“番茄花园”、“雨林木风”这类盗版系统非常受欢迎，搜狗就请他们帮助做了内置。就是这样一个简单的渠道，一年的时间搜狗输入法达到了70％的市场占有率。<br>&emsp;&emsp;十几年后，搜狗上市了，曾经做盗版系统的天才少年都陨落了。如果搜狗输入法是搜狗的第一节火箭，那么这些产品就是它的燃料。搜狗的二级、三级火箭和360是一样的利用一个大流量工具，推浏览器和搜索再用这两个模式的商业变现。<br>&emsp;&emsp;今天搜狗的模式又有了变化，为什么？大家的网络场景已经变成了手机。iphone有内置输入法，安卓也有输入法。如果这时依旧用输入法再做头部流量，显然不够健壮。这时我们发现，王小川在股东选择上的智慧。回到“点线面体”的第二讲，谁是最有能力给你赋能的那个“面”。搜狗是互联网的万人迷，一堆老大都想做搜狗的股东。王小川做了什么？王小川拒绝了周鸿伟，清退了阿里，这并不是容易做到的事。拥抱了腾讯作为股东，并且两次让腾讯增加对搜狗的持股。<br>&emsp;&emsp;这就形成了今天搜狗搜索的新三级火箭。</p><blockquote><p> 第一级火箭：头部流量。今天搜狗在移动搜索方面80％一90％的流量来自腾讯，其中从QQ浏览器导入的流量占到70％。<br> 第二级火箭，内置搜索。用户在微信内、QQ内等不同的场景里的诉求，在浏览器之外通过庞大的使用场景去释放更多搜索的需求。搜狗内部称之为智慧战略。<br> 第三级火箭，商业变现。</p></blockquote><p>&emsp;&emsp;理解互联网公司的三级火箭总结一下，三级火箭是什么意思？</p><blockquote><p> 第一级，头部流量。<br> 第二级，沉淀某类用户的商业场景。<br> 第三级，完成商业闭环。</p></blockquote><p>&emsp;&emsp;举两个例子，第一个先讲一下罗辑思维。第一级火箭是罗振宇坚持了多年的免费脱口秀。现在做知识付费的平台很多，只有得到App是有头部流量的。第二级火箭，就是沉淀用户的商业场景得到App。第三级火箭，你今天付费听我讲课，这就是第三级火箭。<br>&emsp;&emsp;小米公司也是如此。一级火箭是手机。手机对于vivo、OPPO是利润中心，对于小米是头部流量。所以为什么业界很多人批评小米价格低、利润薄，搞得行业都不好做，其实是因为对产品的战略定位不一样。二级火箭是它的一系列零售场景，小米商城、米家、小米之家、小米小店。我和雷军说，等你开了1000家小米之家，100万个小米小店，那真是插根扁担都能开花。三级火箭是一个高利润的产品。现在雷总还是不愿意说出来，但最后一定是一个利润非常高的项目，能扛住整个小米的财报。<br>&emsp;&emsp;为什么要把三级火箭当一节课来讲？我们上节课讲了新要素、新物种。你以为亚朵在做酒店，其实亚朵在做社群共创的实景电商。你以为你在和雷军比手机，其实他只是拿手机做头部流量。你要赚利润的东西，并非是他人要赚钱的地方。面对这样的竞争者，传统的生意套路会失效。<br>&emsp;&emsp;什么人能玩三级火箭？玩三级火箭，如果去掉三个字，就是玩火。要玩三级火箭，有几个必要条件。<br>&emsp;&emsp;第一，第一级火箭一定要高频应用。三级递推一定是高频推低频，没有低频推高频的。比如招商银行App用户量很大，但是它能做第一级火箭吗？它太低频了，只能推更低频的产品，比如出国、理财等。但陌陌是个高频应用，陌陌推直播，直播变现，这就是陌陌的三级火箭。斗鱼是个非常火的直播平台，它能推短视频吗？不行，短视频比直播高频，它难以作为一个高频应用的一级火箭，但是如果它做游戏分发，也许可以。因为大家下游戏，一两个月才下一个，比看游戏直播低频。总原则就是一级比一级低频。<br>&emsp;&emsp;第二，通过第一级火箭获得大量用户之后，要快速展开一个够沉淀用户的商业场景。比如，共享单车看上去是一个非常好的头部流量，用户量大，又足够高频。但是在这样一个头部流量很大的基础上，如何顺滑地建设出能够沉淀用户的商业场景？这是共享单车的运营企业需要面临的考题。<br>&emsp;&emsp;第三，操盘三级火箭的人，一定是个势能积累到一定程度的人。为什么？首先，他要有强大的融资能力。一级火箭是不赚钱的，你需要用免费来支撑一个庞大的用户服务系统，还要保障用户满意，这是一笔很大的钱。没有势能的人，很难募到这个规模的钱。其次，当一级火箭铺开头部流量，他需要快速张开，短时间聚拢资源的能力是要有一定的势能积累才能做到的。得到App快速扩展了这么多的好老师，这并不是随便可以做到的事。<br>&emsp;&emsp;第四，操盘三级火箭的人，一定是个狠人。因为你的一级火箭就是抢流量的，就是把别人河里的水都抢到自己的水渠里，成就自己的河流生态。你想想，这得多少人恨你。所以，干三级火箭，不是偶然干成的，而是一开始就想着颠覆现有的行业，干掉现有的企业。所以如果不是狠人，不是积蓄已久的人，不是有高频应用场景的人，不是承受指责的人，三级火箭还是没法轻易玩。</p><h1 id="三级火箭的原理"><a href="#三级火箭的原理" class="headerlink" title="三级火箭的原理"></a>三级火箭的原理</h1><p>&emsp;&emsp;我们一直在说三级火箭，火箭为什么是三级的？<br>&emsp;&emsp;因为火箭和汽车、飞机目的不一样，所以动力原理不一样。汽车、飞机一节燃料就够了，但只有一节燃料，火箭没办法突破大气层。火箭是靠自己把自己推起来，这就跟咱们这些没有靠山的创业者一样。你凭什么有势能，其中一点就是靠割让自己的利益。别人挣钱，我不挣钱，我获得的用户多一点，我才拥有了势能。<br>&emsp;&emsp;火箭如果只有一节，里面又装燃料，又装要发射的卫星，会怎样？结论是，按照传统模式，火箭是飞不起来的，它无法突破大气。二战时，德国研制的火箭，不能突破到外大气层，飞不到地球同步轨道，只能在大气层里飞。解决方案就是做一个动态系统，喷射燃料，抛出火箭壳，降低负载。如果火箭只有二节，飞一块丢掉一块，第二块再飞上去，需要多重呢？以1吨重的卫星为例，需要149吨燃料，三级需要77吨，四级65吨。火箭级数越多，需要的燃料越少。但每增加一级，不可控程度越高。就好像咱们做商业，模型过于复杂，变现链条过长，就容易玩脱了。如果只做二级火箭，149吨才能推1吨，三级只需要77吨。如果三级火箭能够省一半的重量，危险程度也提升一倍。然而到了四级火箭，燃料重量可以省10吨，危险程度却变成了四倍。<br>&emsp;&emsp;所以，三级火箭是一个成本和可控性平衡后的选择。</p><h1 id="在人类的天空放上星星"><a href="#在人类的天空放上星星" class="headerlink" title="在人类的天空放上星星"></a>在人类的天空放上星星</h1><p>&emsp;&emsp;我还想说两件事：第一件事，火箭是自己把自己推起来的，它的一级就是一个巨大的燃料堆，目的是给自己制造势能。但火箭的目的不是飞得越高越好，而是为了放卫星，是为了把一颗星星放到星空上。<br>&emsp;&emsp;无数有权力、有钱的人，都拥有巨大的势能，就好像拥有一级火箭。但很多人只是享受无限上升的乐趣，完全没有概念要把一颗星星放到人类文明的天顶上，所以当他们势能耗散，也会被快速遗忘。我想说说我崇敬的一个人，就是诺贝尔。诺贝尔奖发了100多年，其实没多少钱。中关村有很多比诺贝尔奖基金更有钱的基金、企业，但中关村的那些故事早就消失了，或者10年后20年后就消失了。<br>&emsp;&emsp;分析一下诺贝尔奖，他一生的财富、心愿是一级火箭；忠实执行的管理机构是二级火箭；而一次次发放的奖金，往人类的天顶上安放的星星，这才是真正有价值的三级火箭。终我们的一生，追逐金钱、创建人脉、获得权力、积蓄势能，一切其实成就了你的势能，打造了你的一级火箭。但是你的一生是无限享受上升的乐趣，还是有一颗星星想放到人类的天顶上，这是一个问题。<br>&emsp;&emsp;另外，需要说的是，关于三级火箭的事是张云帆给我讲的。张云帆是完美世界控股集团董事、纵横文学CEO。他给我讲了他对三级火箭模式的完整理解，我觉得非常棒。我就问他能不能把他的三级火箭模式，放到得到APP里来讲，他同意了。感谢张云帆。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;这节课就到这里，总结一下，商业模式的三级火箭：第一级，搭建高频头部流量；第二级，沉淀用户的商业场景；第三级，完成商业闭环。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;商业模式的三级火箭：&lt;br&gt;第一级火箭，搭建高频的头部流量；&lt;br&gt;第二级火箭，沉淀用户的商业场景；&lt;br&gt;第三级火箭，完成商业闭环。&lt;br&gt;但有一个问题值得思考，你是追求无限上升的快感？&lt;br&gt;还是想在人类的天空上放一颗星星？&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="三级火箭" scheme="https://panxiang315.github.io/tags/%E4%B8%89%E7%BA%A7%E7%81%AB%E7%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>怎样从新要素到新物种</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/new-element/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/new-element/</id>
    <published>2018-07-30T01:50:15.000Z</published>
    <updated>2018-07-30T04:22:36.807Z</updated>
    
    <content type="html"><![CDATA[<p>实体商业的流量创新：<br>1、好位置可以通过合作加盟获得，互联网公司为“房东”赋能；<br>2、用众筹把单纯的“消费者”变成忠实的“投消者”;<br>3、IP合作．自带流量。</p><a id="more"></a><hr><p>&emsp;&emsp;新要素这个概念，字面意思很普通。每个人都有这个意识，任何一个新产品，总得有新要素在里面。比如服装采用最新的面料，食物采用最新的食材配方，手机采用了最新的屏幕，这些都是新要素。<br>&emsp;&emsp;我今天想谈的是新要素与新物种的概念。如何利用不是本行业体验迭代产生的新要素，而是引用跨行业的新要素，让你的产品看起来依然是原来的产品，但是它已经成为了一个新物种。</p><h1 id="新要素一：找到实体空间的好位置"><a href="#新要素一：找到实体空间的好位置" class="headerlink" title="新要素一：找到实体空间的好位置"></a>新要素一：找到实体空间的好位置</h1><p>&emsp;&emsp;我主要讲一个案例，就是“服务蓝图的核心要素：峰值、终值”那节课讲到过的亚朵酒店。曾经大家认为，酒店行业最难做的是中档酒店。但是亚朵酒店用了不到5年时间，在全国110个城市开了150家酒店。而且，在2017年的《中国中端酒店投资报告》中，亚朵在用户满意度、投资回报率、投资人满意度三个维度上，同时位居第一。<br>&emsp;&emsp;它做了哪些不一样的事情？我们在“服务蓝图的核心要素：峰值、终值”那节课讲了它有哪些细节做得不一样，但这些是优化前端体验的东西，而这一课我们来说它的商业模式的变化。<br>&emsp;&emsp;我们把互联网商业简单地抽象为三个要素，产品、流量和转化率。那么，实体商业可以简单地抽象成四个要素：产品、空间、流量和转化率。我在准备产品课案例的时候，在空间上创新的产品，我想到过好几个，比如：亚朵、漫咖啡。在对亚朵的具体访谈过程中，我发现亚朵不仅仅在空间的定义和运营上做了创新，而且在流量和转化率方面，也有不一样的尝试。今天我谈一下，它在流量和转化率方面的一些新要素尝试。<br>&emsp;&emsp;实体经济要拼位置，为什么？因为位置即流量。所以，亚朵需要和能取得好位置商业地产的人合作。在好的地段，开一家前端服务体验不错成本能控制的酒店，赚钱是大概率事件。在亚朵的商业体系中，有两个核心角色系统，一个是亚朵酒店管理公司，一个是房东。在这个角色系统里，亚朵的核心工作有六项：</p><blockquote><p> 1、定义亚朵的服务品质，包括但不限于软硬件要求（空调、暖气等等）；<br> 2、提供亚朵视觉系统的装修方案<br> 3、为每个酒店输出总经理和人力资源经理<br> 4、为所有员工提供培训和考核<br> 5、全网打通亚朵网络预订通道，将酒店收入项及时向房东结算；<br> 6、对亚朵品牌及各店进行形象推广和公关宣传。</p></blockquote><p>&emsp;&emsp;房东做什么呢？房东有四个核心工作：</p><blockquote><p> 1、找到当地适合开店的房子，适合开店有很多要求，地段、位置、房租价格等，这个由房东搞定；<br> 2、按照亚朵提供的装修方案进行装修<br> 3、招聘该酒店除了总经理和人力资源经理外的所有员工，并按照亚朵给予的考核标准及时结算工资；<br> 4、先行支付前期所有因租房、装修、雇佣人员等发生的款项。</p></blockquote><p>&emsp;&emsp;亚朵之所以开得这么快，是亚朵酒店管理公司与当地一个个房东一起合的结果。合能就是把能力合起来，彼此赋能。酒店该开成什么样？人该怎么管？如何利用互联网炒作知名度？优化转化率达到用户？这些事情都是亚朵的专业。房东的核心能力就是落地的能力，找到地段好、租金合适的房子，而且能够处理所有属于当地的消防、招聘员工等问题。<br>&emsp;&emsp;当然，还有一个很重要的能力，就是房东得前期投资。大概要投多少钱？平均一个亚朵酒店前期需要投2000万。</p><h1 id="要素二：把“消费者”变成“投消者”"><a href="#要素二：把“消费者”变成“投消者”" class="headerlink" title="要素二：把“消费者”变成“投消者”"></a>要素二：把“消费者”变成“投消者”</h1><p>&emsp;&emsp;这时我们就要谈亚朵定位之外，第二个新要素——亚朵众筹酒店。<br>&emsp;&emsp;如果我有能力搞定一个不错的房子，但是我没有2000万怎么办？亚朵推出了众筹酒店的模式，把筹备中的酒店项目作为一个项目融资，在众筹平台上发起众筹。投资人可以出资1万元到10万元不等，参与新亚朵酒店的股权融资，并获得经营分红。比如，天津小白楼亚朵发起众筹，只用了2个小时预约金额就已经达到了募资需求，5小时预约总金额超过5000万。<br>&emsp;&emsp;为什么会这么火？<br>&emsp;&emsp;第一，一个人的参与款是10万元，参与人数会更广泛。绝大多数家庭都有10万元的投资能力，但是如今10万元很难参与像样的项目。天津小白楼亚朵酒店算是个地段好的品牌项目，并且给出了较高的年回报预期，大股东还承诺分红达不到承诺值时，由特许业主补足，当然大家热情就很压习。<br>&emsp;&emsp;第二，除了投资收益外，参与众筹的投资人，还可以获得对应等级的酒店消费权益。这时就可以对朋友吹牛，“我是这个酒店的股东，报我名字能打折”，这个对于中国人来说很重要。<br>&emsp;&emsp;第三，我最想强调的一个，历次亚朵酒店发起众筹时，最热烈的支持者首先是亚朵酒店的用户和忠诚会员。以小白楼项目为例，两个小时就达到了预约的募资需求。其预约的投资人65％以上都是亚朵消费者或会员。他们是亚朵产品的体验者、消费者，现在经由众筹升格为投资者。所以，亚朵的投资者也都成为了高忠诚、高钻性的消费者，最早参与亚朵众筹的7500位会员，每人每年平均在亚朵住宿15间夜（酒店行业统计所有房间出租天数的单位）以上，这些人累计贡献间夜量达15万。他们不仅仅是消费者，更是“投消者”。一方面，亚朵在授权一些特许业主投资的时候，这些人就会积极响应众筹，同时他们是亚朵最忠诚的消费者。这种“投消者”模式成了亚朵品牌扩张中最重要的盟友。<br>&emsp;&emsp;亚朵在流量方面的创新有：<br>&emsp;&emsp;第一，亚朵使用了众筹这个新要素，不但让一批有能力搞定房子和关系的房东，不会因为没有2000万启动资金而被阻止开酒店。<br>&emsp;&emsp;第二，通过众筹让上万人成为投资参与亚朵建设的小股东，这群人是亚朵真实的铁粉、死忠粉、带路粉。</p><h1 id="要素三：IP酒店"><a href="#要素三：IP酒店" class="headerlink" title="要素三：IP酒店"></a>要素三：IP酒店</h1><p>&emsp;&emsp;亚朵在流量方面的另外一个创新就是IP酒店。<br>&emsp;&emsp;在影视行业，这两年IP特别热，为什么热？IP就是情感触发，就是场景，就是流量。什么叫情感触发，场景流量，请回头去看《设计产品时要包括产品的场景》那一讲。既然我们已经说了，实体生意就是产品、空间、流量和转化率。IP即是新流量，为什么不用呢？何况还有众筹酒店这个杠杆。<br>&emsp;&emsp;他们把亚朵和吴晓波合作的亚朵•吴酒店定义为“社群酒店”。《吴晓波频道》自己介绍亚朵•吴酒店的时候说：</p><blockquote><p> 第一，社群活动。未来每一座城市的亚朵•吴酒店，都会成为《吴晓波频道》的线下社群场景。这里是《吴晓波频道》社群线下活动的场所，全国书友会的小伙伴都可以到亚朵酒店申请场地举办“每月同读一本书”等活动。<br> 第二，阅读空间。在“《吴晓波频道》＆亚朵24小时阅读空间”活动中，你可以读到我们精心挑选的图书。旅行和读书这种场景概念便可以结合起来。<br> 第三，场景电商。这里是场景电商的试验田，我们可以在这里看到《吴晓波频道》精选的“美好的店”产品陈列，在实际使用场景中体验到这些产品。例如，在睡前抿一口安枕的吴酒，喝一盏巴九灵茶田的茶，在猫王收音机里，听一集《每天听见吴晓波》。利用吴晓波的品牌场景和《吴晓波频道》已经建设的社群流量，优化入住转化率。</p></blockquote><p>&emsp;&emsp;现在亚朵•吴酒店已经开了两家，北京、杭州各一家，前一段热炒的杭州网易严选酒店也是亚朵做的。亚朵的计划是未来10%的酒店是IP酒店，因为地段自带流量，IP也自带流量。</p><h1 id="要素四：场景电商"><a href="#要素四：场景电商" class="headerlink" title="要素四：场景电商"></a>要素四：场景电商</h1><p>&emsp;&emsp;第四个新要素，刚才介绍亚朵•吴酒店的时候带了一句，就是场景电商。<br>&emsp;&emsp;你在亚朵酒店体验到的东西，例如枕头、床垫、洗发水都是可以买的。在讲服务蓝图的时候，我说过亚朵在它的床垫上比较下功夫。2016年，亚朵床垫卖了3万张，即使对于一个天猫店来说，这都是一个不小的量。亚朵创始人说到将来亚朵开到1000家店的时候，一年会有至少600万独立用户，真实体验亚朵空间的各个产品，因此亚朵有机会成为一家巨大的电商公司。<br>&emsp;&emsp;亚朵创始人对亚朵空间定义的第一之前提到实体经济的四个重点：产品、流量、空间、转化率。亚朵的空间定义不仅是休息空间，也不仅是基于用户体验地图优化的峰终体验，而且还是用户在不同的地方体验各种生活新产品、所见即所得的电商空间。<br>&emsp;&emsp;你住亚朵酒店，不管它在用户体验地图，在你体验的峰值、终值上如何设计，从用户体验上它依然是个酒店。不像上一节课讲的小鸡孵化器变成婴儿恒温箱一样，成为了不同的东西。但是，用户体验没有很大变化的亚朵酒店从经营角度来讲，其实已经成为了一个新物种。因为它的流量模式、融资渠道、收入来源都发生了变化，使它与传统酒店业有了完全不同的腾挪空间和借力点。<br>&emsp;&emsp;别人只能收房费，但它至少有三种利润来源：房费、商品的展示费、电商的利润。所以亚朵才会在过去几年，呈现出如此强大的生命力和扩张态势。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;总结一下，新产品一定要有新要素，否则没有竞争力。新要素有两种：</p><blockquote><p> 第一种，在现有体验的基础上，运用最新科技等新要素，提升用户体验，或者改变成本结构。<br> 第二种，用整个社会经济升级、产业升级所产生的其他领域新要素，变革内在的商业逻辑。也许用户的前端体验，依然是那个产品、那个服务，但公司背后的商业运作，已经成为了完全不同的新物种。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实体商业的流量创新：&lt;br&gt;1、好位置可以通过合作加盟获得，互联网公司为“房东”赋能；&lt;br&gt;2、用众筹把单纯的“消费者”变成忠实的“投消者”;&lt;br&gt;3、IP合作．自带流量。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="IP" scheme="https://panxiang315.github.io/tags/IP/"/>
    
      <category term="新要素" scheme="https://panxiang315.github.io/tags/%E6%96%B0%E8%A6%81%E7%B4%A0/"/>
    
  </entry>
  
  <entry>
    <title>用“交叉视角”跨界创新</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/product-creative/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/product-creative/</id>
    <published>2018-07-30T01:37:22.000Z</published>
    <updated>2018-07-30T04:14:34.688Z</updated>
    
    <content type="html"><![CDATA[<p>未来已来，只是分布得不均匀。</p><a id="more"></a><hr><h1 id="婴儿恒温箱的发明"><a href="#婴儿恒温箱的发明" class="headerlink" title="婴儿恒温箱的发明"></a>婴儿恒温箱的发明</h1><p>&emsp;&emsp;19世纪70年代后期，妇产科医生斯蒂芬•塔尼在繁忙工作之后，给自己放了个假，去巴黎动物园散步。那时候相当于中国的清朝同治年间，鸡鸭等都是动物园里的观赏动物。动物园他看到了小鸡的孵化器。斯蒂芬看到了从小鸡孵化器中刚孵出的小鸡，在温暖适宜的环境中蹦蹦跳跳，他有了一个想法。他聘用了动物园的家禽饲养员奥迪尔•马丁，两个人合作用小鸡孵化器的模式，制作出了给人类的婴儿恒温箱。<br>&emsp;&emsp;19世纪末期新生婴儿的死亡率高得惊人。斯蒂芬做了统计，使用了他做的婴儿恒温箱之后，体重过轻的新生儿死亡率从66%降低为38％。每一个数字，都是一个人的生命。第二次世界大战之后，婴儿恒温箱已经成为美国的每家医院的标配，让1950年到1998年，近50年间新生儿死亡率降低了75％。研究认为，婴儿恒温箱的发明对公共健康有巨大的保护作用，超过20世纪其他任何一项发明。因为它是在生命之初提供帮助，让一个新生儿拥有了人生。<br>&emsp;&emsp;这么伟大的发明，来自于一个医生去逛动物园，看到的小鸡孵化器。</p><h1 id="未来已来，只是分布不均"><a href="#未来已来，只是分布不均" class="headerlink" title="未来已来，只是分布不均"></a>未来已来，只是分布不均</h1><p>&emsp;&emsp;这节课的核心概念就是：“未来已来，只是分布得不均匀。”跟这个观点意思一样，还有一本专门介绍创新的书《伟大创意的诞生》中，介绍了一个概念叫“相邻可能”。我们需要的某种能力要素，它可能已经产生并成熟了，只是它正在另外的某个领域被使用着。就看这个已经存在的未来，它会不会撞到你眼睛里，让你起心动念。这就是灵感的瞬间。<br>&emsp;&emsp;所以，婴儿保温箱的发明者到底是谁？是斯蒂芬，还是动手做出了小鸡孵化器，又用同样的技术辅助斯蒂芬做了婴儿恒温箱的动物园家禽饲养员奥迪尔呢？当然是斯蒂芬，因为起心动念的人是他，定义产品的人是他，完成产品化关键环节推动的人还是他。此外，斯蒂芬还做了一个非常重要的工作。他知道法国的医疗机构对于统计数字的依赖，因此他在将婴儿恒温箱投入使用后，马上跟进数据调查。“使用恒温箱后新生儿死亡率从66％降低为38%”，这个关键数据就是斯蒂芬给出的调研结果。这个统计结果，迅速撬动了所有的关键资源，从医疗机构、媒体，到投资大佬、慈善人士全面关注，推动了这一设备的普及。<br>&emsp;&emsp;斯蒂芬不仅完成了产品的定义，产品的实现，并且提供了产品市场化的关键动力。所以，虽然动手实现婴儿恒温箱的人是家禽伺养员奥迪尔，但是我们仍然认为这个伟大产品的发明人是斯蒂芬。就好像第一代QQ的每一行代码，都是吴宵光写的，但是QQ之父是马化腾。因为是马化腾起心动念做了QQ的产品定义。</p><h1 id="婴儿恒温箱的迭代"><a href="#婴儿恒温箱的迭代" class="headerlink" title="婴儿恒温箱的迭代"></a>婴儿恒温箱的迭代</h1><p>&emsp;&emsp;婴儿恒温箱还有一个迭代的故事，也非常动人。二战后，婴儿恒温箱等技术的广泛使用，已经提高了欧美国家的初生儿的存活率。但是在很多条件不好的发展中国家，比如利比亚和埃塞俄比亚，初生儿死亡率依然很高。其实，这些婴儿中大多数都是可以存活下来的。<br>&emsp;&emsp;给这样的地方提供婴儿恒温箱的关键难点在哪里？首先，当时的婴儿恒温箱非常复杂，而且很贵。美国医院使用的一台标准化婴儿恒温箱，售价大约是4万美金。从根本上说，贵并非是一个不能攻克的难题，总有类似比尔•盖茨的人愿意捐赠。真正的难点在于，复杂的设备容易出现故障，而维修依赖专业的技术人员和维修备件。<br>&emsp;&emsp;2005年，就是印尼海啸发生后的第二年，一些国际救助组织捐给印尼一个城市八台婴儿恒温箱。2008年年末，也就是三年后，麻省理工学院的教授普莱斯洛去访问这个城市时，发现这八台恒温箱全部出了故障，停止使用了。原因当然是各种各样的，比如当地的供电功率常常波动，电压不稳，湿度高等等。<br>关键问题是什么呢？坏了不会修。当地的工作人员看不懂恒温箱上的英文维修手册，只能任由婴儿死去。这八台恒温箱的故事，是一个典型的例子。很多案例表明，捐赠给不发达的发展中国家的各项技术设备中，大约有95％的设备会在前五年就因为故障而无法再投入使用。<br>&emsp;&emsp;普莱斯洛就起心动念，为发展中国家研发一种新的婴儿恒温箱。他出了迭代的产品，产品需求是这样的：这个新设备不仅应该更加可靠；而且还要造价便宜；最重要的事情是，一旦出现故障，这个设备不会完全瘫痪，稍加修理就可以再次投入使用。<br>&emsp;&emsp;这就是新婴儿恒温箱的产品定义。<br>&emsp;&emsp;这个产品的基础功能依然没有变：为初生婴儿提供恒温、透气的保障性空间。而这次产品迭代的核心变化，是对外协资源做了完全不同的定义：在当地的社会条件下，一定可以修。可以修要保障两点：可以找到维修人员；找到维修备件。<br>&emsp;&emsp;普莱斯洛做了这个产品定义之后，接着就发动团队开始找实现方法。找到方法的并不是普莱斯洛本人，而是另外一个医生罗森。罗森是波士顿的医生，他通过观察发现，任何一个发展中国家的小城小镇，都有汽车的维修和保养能力。这些城镇里就算缺少空调、笔记本电脑或者有线电视，也都能够确保让汽车在公路上跑。于是，罗森就向普莱斯洛提议：可不可以用汽车的零部件，来改良出一种简易的婴儿恒温箱呢？<br>&emsp;&emsp;在罗森提出他的创意的三年后，普莱斯洛团队，做出了新的婴儿恒温箱原型，他们给它定的名字叫育婴器。设备流线型的外观和现代的婴儿恒温箱一样，但是它的内部则是用汽车的部件来拼接完成的：</p><blockquote><p> 育婴器由旧车的头灯、前聚光灯提供主要的供暖；<br> 用汽车仪表盘的风扇，用来保持空气流通，循环空气；<br> 用车门的蜂鸣器做报警系统，在供暖设备出现问题的时候，蜂鸣器会叫，用来提醒护理人员；<br> 它的动力主要是来自于标准的摩托车电瓶，或者一个改良的雪茄打火机。</p></blockquote><p>&emsp;&emsp;这个利用汽车零部件做成的育婴器有双重的好处：不仅可以直接利用当地供货充足的汽车零件；同时只要是汽车维修人员，就可以来修理这个育婴器。这就是普莱斯洛和罗森的设想，如果要让发展中国家的婴儿真正被育婴器保护起来，育婴器的配件必须能够轻易在本地获得。并且维修这种育婴器的人，不用是那种所谓的高高在上的技术专家，甚至根本就不需要去阅读维修手册，他只要有能力换一个出故障的车头灯，就能够轻松地胜任育婴器的维修和护理工作。<br>&emsp;&emsp;普莱斯洛教授的汽车配件育婴器，造福了无数的孩子与家庭。这是慈悲之心。这是超级伟大的产品人。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;婴儿恒温箱的发明与迭代的故事，非常动人。用于培育小鸡的器皿，用于汽车、摩托车的零件，用另外一个视角和用途需求去看，它们就有了新的可能，给予了数以亿计的人生命。<br>&emsp;&emsp;有时候，大家想到创新会觉得高不可攀或者神秘浪漫，似乎创新就必须超越环境，横空出世。其实不是的。创新重要的是面对痛苦，起心动念。如果斯蒂芬医生，不曾为了新生儿的死亡而痛苦，他看到小鸡在孵化器中蹦蹦跳跳就不会悴然心动。如果普莱斯洛教授不是痛苦于，一边婴儿死亡率高居不下，一边八台婴儿恒温箱无法运作，就不会起心动念，用发展中国家随处可得的材料重构婴儿恒温箱，就不会有之后的这一成果。<br>&emsp;&emsp;所以，为某件事感到痛苦，也许就是你心念已动的时候。而要寻找解决它的创新之处，不妨到其他领域转转。也许它们就正在某个动物园，或者某个车库里，等着你的眼睛看到它们。还是那句话：“未来已来，只是分布得不均匀。”</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;未来已来，只是分布得不均匀。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="交叉" scheme="https://panxiang315.github.io/tags/%E4%BA%A4%E5%8F%89/"/>
    
      <category term="创新" scheme="https://panxiang315.github.io/tags/%E5%88%9B%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>用“用户价值公式”衡量创新</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/value-formula/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/value-formula/</id>
    <published>2018-07-30T01:34:23.000Z</published>
    <updated>2018-07-30T03:41:48.039Z</updated>
    
    <content type="html"><![CDATA[<p>俞军的用户价值公式：用户价值=新体验-旧体验-替换成本<br>在存量竞争中，大企业比小企业更占优势。创业者只有创新这一条生路。<br>新公司要寻找蓝海市场，寻找没有大佬、用户体验为零的增量市场。</p><a id="more"></a><hr><p>&emsp;&emsp;从这一讲开始，我们进入最后一个模块，第五模块——创新模式。<br>&emsp;&emsp;为什么要将创新模式单做一个模块？因为没有创新的产品，根本不应该去做。我们为什么要做产品？为了帮别人、帮自己。<br>&emsp;&emsp;如果市场上已经有了同类产品，用户已经用得很好，如果你还做一样的产品，这不是为了用户，只是因为你不服或者心存侥幸。用户为什么还需要你？这个产品真的能帮助你实现自己的人生目标吗？很难。<br>&emsp;&emsp;我很佩服的产品大神俞军有个用户价值的公式，我觉得这可以很好地回答这个问题。这节课就谈谈俞军的用户价值理论，回答这个问题：为什么唯有创新一条路？</p><h1 id="在增量市场里找机会"><a href="#在增量市场里找机会" class="headerlink" title="在增量市场里找机会"></a>在增量市场里找机会</h1><p>&emsp;&emsp;俞军是中国的顶级产品经理之一，做了百度贴吧、百度知道等几个中国用户量最大的产品。他对产品经理的定义是这样的：产品经理是以创造用户价值为工具，打破旧的利益平衡，建立对己方有利的新利益链，建立新平衡的过程。他没有说做产品，而说的是创造用户价值。用户价值是一个工具，产品经理用这个工具打破旧的利益平衡，建立对己方有利的新利益链、新平衡。<br>&emsp;&emsp;所有的产品开发与使用都是一个利益链和利益平衡，就好像一条河的流动，是水追求平衡的结果。你要开一条新河，把这条河的水引到自己的河里去，就需要打破这条河旧有的水位系统。<br>&emsp;&emsp;我曾写过一篇介绍腾讯怎么运营流量的文章，叫《改变大河的流向》。互联网创业就是挖条自己的沟，抢夺别人江河里的流量，形成自己的河流与生态。QQ是一条大河，微信是一条大河，百度是一条大河，百度贴吧也是一条大河……大河所过，形成自己的生态，巩固自己的水土。大河之间，小河水也欢快地流淌。看新闻、看菜谱、做运动、听音乐、看视频、订机票、买螃蟹、聊八卦……互联网上江河纵横，8亿网民各得其所，形成了互联网的滚滚流量。<br>&emsp;&emsp;如何拥有自己的河流与生态？你的水源从哪里来？地球上的水的总量是13亿8600万立方千米。这是一个固定的存量，如果你要开一条新的江河，唯有打破平衡把固定循环在某个体系中的水，引流到自己的系统中。这就是基于固定存量市场的运营争夺。<br>&emsp;&emsp;按照存量竞争的逻辑，强者为王、厚黑学、找靠山、向权力寻租、崇拜资源，这些成为了我们的成功学。家里没什么背景，人不够狠，心也不黑，不懂办公室政治，不会抱大腿的人，在旧有的竞争模型里是没有成功的机会的。还好我们赶上了互联网代表的新经济。<br>&emsp;&emsp;我有个朋友刘韧曾经说过一句话：“我们信仰互联网。”互联网不是存量竞争，而是增量竞争。曾经存量里的超级大佬，在新的增量市场里可能毫无威胁。比如联想曾经风光无两，直到今天在PC制造业的存量体系里依然非常优秀，但在网络经济里完全没有竞争力，甚至不能威胁一个小创业者。<br>&emsp;&emsp;服务好你的用户，不用怕那些大佬。这就是我热爱互联网的原因。</p><h1 id="从WPS的挑战，理解用户价值公式"><a href="#从WPS的挑战，理解用户价值公式" class="headerlink" title="从WPS的挑战，理解用户价值公式"></a>从WPS的挑战，理解用户价值公式</h1><p>&emsp;&emsp;俞军的用户价值公式：</p><blockquote><p> 用户价值=（新体验-旧体验）-替换成本</p></blockquote><p>&emsp;&emsp;我觉得这个公式很好地解释了两个问题：</p><blockquote><p> 1、为什么在存量市场中竞争先发优势那么重要？<br> 2、为什么BAT打创业者非常容易？</p></blockquote><p>&emsp;&emsp;按照俞军的用户价值公式，你要撬动一个用户，依靠的工具是用户价值。那用户能得到的用户价值是什么呢？用户价值=（新体验-旧体验）-替换成本。<br>&emsp;&emsp;用这个公式可以解释一下为什么雷军英雄盖世，但当年他带领金山的WPS打微软那么艰难。如果微软Office软件用户使用体验是90分，价格体验50分，两项相乘，微软Office软件带给用户的旧体验算45分。金山WPS软件用户使用体验70分，价格体验90分，两项相乘，金山WPS软件带给用户的新体验算63分。用户的替换成本包括什么？品牌认知、获取成本、学习成本、使用成本，包括使用过程中遇到问题得到及时帮助的便利程度等。比尔•盖茨曾经是世界首富，微软公司的品牌、渠道、产品成熟度、客服服务系统都很成熟。网上还有随处可见的用户分享、使用小技巧。所以用户体验非常成熟，用户替换成本很高，我们算用户的替换成本是20分。</p><blockquote><p> 用户价值=WPS新体验63分-Office旧体验45分-用户替换成本20分=-2分</p></blockquote><p>&emsp;&emsp;雷军带领他的英雄团队做了一个综合体验很好的产品，但是用户几乎没有得到价值。你认为别人为用户提供了45分的东西，而你为用户提供了63分的东西，你比对手提升了40％的用户价值。可是，你别忘了用户替换是有成本的。真实情况是你付出63分，而用户得到的是-2分。你认为你做得更好，但用户视你为鸡肋。</p><h1 id="创新是小企业唯一的活路"><a href="#创新是小企业唯一的活路" class="headerlink" title="创新是小企业唯一的活路"></a>创新是小企业唯一的活路</h1><p>&emsp;&emsp;这是我们的血泪教训，同维度竞争，先发优势是很高的门槛。很多朋友，包括雷军和我自己都曾经非常自负，觉得某个产品做得一般，自己可以做得比对方好，于是就杀进去。小企业对大企业就得仰攻，那么用户替换成本极高。小企业提供的局部优化，加上用户替换成本可以忽略不计。如果没有奇招，用同样的产品，小企业仰攻大企业基本上没有赢的机会。<br>&emsp;&emsp;那为什么BAT打创业企业极其容易呢？同维度竞争，体量大占优，即使它后发。从替换成本开始说，用户替换为BAT的成本几乎为零。替换成本包括哪些？用户体验、品牌认知、渠道方便、学习成本。</p><blockquote><p> BAT的产品用户体验都不错;<br> 品牌认知成本为零；<br> 渠道畅通，用户获得成本几乎为零；<br> 你已经把用户教育好了，用户切换成BAT产品的学习成本为零。</p></blockquote><p>&emsp;&emsp;市面上有很多音乐软件都做得不错，腾讯出个QQ音乐，功能的使用体验完全一样。腾讯渠道强大，大家很容易知道和安装QQ音乐。腾讯使用资金资源能力，垄断版权，热门音乐“搜得到，能下载”就是核心体验。于是，音乐App就QQ音乐一家独大了。这就是BAT的典型打法，因为用户迁移成本极低，用大公司的体量优势地优化用户体验，一点一点地挤压你、蚕食你。<br>&emsp;&emsp;一个产品，你明明可以做得更好，别人先做了，你可以比原来的产品优化20％-40％的体验，怎么办？看体量，如果对方体量远大于你，就放弃。我们得出的血泪教训一同维度竞争，体量第一。就像是两个人拼拳脚，大个子打小个子。<br>&emsp;&emsp;如果几个竞争者体量差不多呢？那就是红海战争，会有一场漫长的拉锯战。只有两种方式能终结这种同维度乱战：要么有能降维攻击的企业出现，要么是资本意志强行合并。曾经的杀毒市场，千团大战、打车大战、外卖大战，莫不如此。<br>&emsp;&emsp;小企业、创业者还有什么机会呢？小企业唯一的活路就是创新。小企业想改变宿命，飞跃龙门，唯一的路就是离开存量市场，寻找增量市场。</p><h1 id="傅盛找到新机会"><a href="#傅盛找到新机会" class="headerlink" title="傅盛找到新机会"></a>傅盛找到新机会</h1><p>&emsp;&emsp;我再讲一个，创业公司离开存量市场，在增量市场找机会的故事——猎豹CEO傅盛的故事。我为什么喜欢傅盛的故事？因为他本来有机会在存量市场抱大腿，走上一条传统的成功之路。但是他挺而走险，放弃已知而且确认的存量市场，去完全陌生的增量市场摸索，并找到了自己的空间。<br>&emsp;&emsp;我在第三模块《系统生死线：猎豹和它的关键任务》那节中讲过，傅盛用野蛮人的姿态，甄别关键任务，在强敌大兵压境的压力下，完成了公司从软件公司向互联网公司的转型，暂时活了下来。2012年，有人问我能不能投资傅盛，我说当然可以。原因很简单，互联网战争就是流量战争，流量资源最丰富的腾讯、百度以及新崛起的小米，三家一起扶植一个小兄弟傅盛，给的单一任务是让他替大家挡住周鸿伟。我说：“三个最牛的大哥挺一个小弟，而且傅盛本人也很厉害，当然可以投。”那个时候大家都是这么看的，他们和当时的我一样，小看了傅盛。<br>&emsp;&emsp;确实，如果傅盛善于抱大腿，当年他就不会离开360。江湖上手握流量最多的三个大哥，为这个小弟安排的路，傅盛还是不会走。傅盛的动作是派了一个团队到美国，干什么？不知道。这个团队就是为了摆脱已知，把自己丢进未知里，在完全的陌生感里找方向、找空间。后来他们找到了猎豹清理大师（Clean Master）这个项目，然后猎豹公司在美国上市了。<br>&emsp;&emsp;傅盛为什么要这么做，又为什么成功了？傅盛自己都说和360打得非常痛苦，虽然360软件最初是他自己从零做起来的，但即便是他自己，要按照自己曾经成功的路再成功一次，已经是不可能了。60打了3Q大战，把用户数扩展到了3亿，体量已经比猎豹大太多。傅盛说：“对比360，我体量太小，正面仰攻真是不好打。”他拼命做了一堆微创新，比360提前1到2周上线。一两周之后，同样的功能360就会跟上，而用户反而会觉得是猎豹在抄360。<br>&emsp;&emsp;这就是用户价值公式说的，当你正面仰攻时，微小的产品优化完全没有价值。傅盛的一个小团队，到美国做了一个之前从没有人认真做过的清理大师，并借助Google应用商店快速多语种全球化。这就是在以前没有人踏足的地方，踏上自己的足迹。在以前用户体验为零的地方，你的60分就是干干净净的60分，对于用户就是及格的。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;存量市场，小企业正面仰攻，新体验做到80分，用户体验为零分。增量市场，在用户体验为零的地方，你只要做60分，用户就结结实实地觉得可以用了。<br>&emsp;&emsp;俞军说：“当你找到蓝海，找到一块用户体验为零的领域，你需要做的是什么？你需要把用户体验做到100分再发布，还是做到60分就快速铺开市场？当然是产品做到60分就赶紧上。”速度第一，快速感染用户铺开市场，让最多的用户体验到你。这就是给后来者的壁垒，这就是蓝海的意义。就好像当年在欧洲大陆混不下去的西班牙人，到了南美所向无敌一样。那些在欧洲的宫廷里混得很好的人，当然不会冒着风险穿越大海。现有存量市场的既得利益者，也犯不着考虑创新。<br>&emsp;&emsp;创新，找蓝海，找到没有大佬、用户体验为零的增量市场，是新公司唯一的改变命运的机会。<br>这是我在最后一个模块，用一个模块讲创新的原因。<br>&emsp;&emsp;<strong>你问我去向何方，我指着大海的方向</strong>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;俞军的用户价值公式：用户价值=新体验-旧体验-替换成本&lt;br&gt;在存量竞争中，大企业比小企业更占优势。创业者只有创新这一条生路。&lt;br&gt;新公司要寻找蓝海市场，寻找没有大佬、用户体验为零的增量市场。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="价值公式" scheme="https://panxiang315.github.io/tags/%E4%BB%B7%E5%80%BC%E5%85%AC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>名字是你的文化资产</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/product-name/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/product-name/</id>
    <published>2018-07-28T09:25:14.000Z</published>
    <updated>2018-07-30T03:28:47.603Z</updated>
    
    <content type="html"><![CDATA[<p>名字是一句咒语，好名字能召唤出人心底的感情。<br>雷军说，口碑就是要把事情做过头。<br>口碑，就是替消费者设计一句话，一句他们口口相传的时候要说的话。</p><a id="more"></a><hr><p>&emsp;&emsp;为产品设计名字、口碑与社交货币，应该算是产品、营销，还是运营的工作呢？不同公司也许有不同分工。但是从我自己的角度来讲，为产品起名字，绝对是做产品最重要也是最快乐的事情之一。</p><h1 id="名字是召唤"><a href="#名字是召唤" class="headerlink" title="名字是召唤"></a>名字是召唤</h1><p>&emsp;&emsp;名字是什么？名字是召唤。<br>&emsp;&emsp;《说文解字》中对名的解释是：“名，自命也。从口夕，夕者，冥也，冥不相见，故以口自名。”意思是说，在早期的社会交往中，原始社会一个部落人不多，人人都互相认识，白天可以通过形体、面貌相互识别，而到了晚上相互看不见，就只能通过呼唤名字才能召唤一个人了。所以名字是用来叫的，不是用来看的。<br>&emsp;&emsp;很多演员的名字，别人一看不会念，这人就红不了。你希望成为一个被人口口相传的人，就别起这种大家不会念的名字。所以当大家还没有接触你或者你的产品之前，他已经接触了你的名字，你的名字是先于你给到用户的体验。<br>&emsp;&emsp;名字是什么？安倍晴明说：“名字是最短的咒。”咒就是束缚。《道德经》说：“无名万物之始，有名万物之母。”像我这种对神秘事物怀有强烈好奇心和探究欲的人，对这两句话的理解是：名字是连接人和世界的渠道。我们的祖先发明语言文字的过程，就是一个给万事万物命名的过程。这个命名的过程，也是我们的祖先认知这个世界的过程。<br>&emsp;&emsp;罗胖第一次跨年演讲谈新物种的时候说，“新事物出现，人们对它指指点点”。为什么只能指指点点？因为没有名字。有一种推论是，我们的祖先每认识一样新事物，就会依据它外部形态、用途来做出判断，并且固化一个符号代表它，这就是早期的象形文字，这是个很伟大的过程。<br>&emsp;&emsp;《淮南子》里说：“昔者苍颉作书，而天雨粟，鬼夜哭。”天雨粟，有了名字，自然开始为我所用，从此我们可以利用自然。鬼是什么？鬼是未知，你无法描述它，只有混沌的无边想象，所以可怕。一旦你命名了它，抓住它的特征，描述了它，那你就掌握了与它连接的方式。人不怕鬼了，鬼就哭了。<br>&emsp;&emsp;如果简单理解，这就是为什么名是最短的咒。你抓住它的特征，就可以与它发生连接。</p><h1 id="名字是召唤世界的咒语"><a href="#名字是召唤世界的咒语" class="headerlink" title="名字是召唤世界的咒语"></a>名字是召唤世界的咒语</h1><p>&emsp;&emsp;我曾经写过一篇文章《主观世界的破碎和重建》，讲过一些主观世界和客观世界的分别。天地万物当然属于客观世界，名字属于主观世界还是客观世界呢？当然是主观世界。名字是主观的，因此它有情感温度，有文化偏见，有文化资产。<br>&emsp;&emsp;一个强大的名字是带有强烈情感的，对我们有咒语般的作用。比如，你听到一个你喜欢的人的名字，就好像中了一个微笑咒。听到一个你非常讨厌的人的名字，就好像中了一个白眼咒。所以，当你要起一个名字的时候，你要知道你是在寻找一句咒语。通过这个咒语，你和你的同伴一起召唤你的产品，把它从无到有召唤到这个世界上。就好像古人在黑茫茫的一片中，喊一个名字，就有人回应。你的所有用户都是因为这个名字，这句咒语，定义你们所有的工作，与你们发生连接。<br>&emsp;&emsp;我在给一个初中生讲物理、化学，他很不喜欢，觉得枯燥。我说主要是名字不好，如果物理改叫“大自然的秘密”，化学改叫“炼金术”，你是不是就很有兴趣了？小朋友说是啊，那为什么要叫物理、化学这么让人亲近不起来的名字呢？我说大概就是为了隔绝吧，让圈外一看就觉得难，就放弃了，这也是一种命名的意图。比如中国古代算命的书里术语很多，就是为了让你看不懂。他又问我那语文可以叫什么？我说语文厉害啦，语文可以叫“咒语书”。我只要改改名字，就顿时让孩子对一门课的兴趣和愿望产生了变化，这就是语文的力量。<br>&emsp;&emsp;人为什么要说话？说话就是咒语。舒舒服服的，干嘛要说话？说话是为了驱动别人，驱动世界。比如，我对你说，“给我倒杯水”，你就站起来给我倒了杯水。这不和神话中驱动一块石头去做事是一样的吗？如果你不给我倒，我可以换一句咒语，比如“求求你了，我太渴了，给我倒杯水吧”，我又驱动了你。或者“给你十块钱，给我倒杯水”。用钱或者权力来做杠杆，咒语的力量就增强了。</p><h1 id="名字里的文化势能"><a href="#名字里的文化势能" class="headerlink" title="名字里的文化势能"></a>名字里的文化势能</h1><p>&emsp;&emsp;判断一个名字是不是有力，在于能在对方心中召唤出一种什么样的情感。举个负面例子，丰田汽车几年前对其在中国的品牌和产品进行了全线更名：凌志改为雷克萨斯，陆地巡洋舰改为兰德酷路泽，霸道改为普拉多。我本来说“我买了个陆地巡洋舰”、“我开霸道”，是不是很有感觉？如果说“我开兰德酷路泽”，是不是完全没概念？不知道品牌公司怎么想的。<br>&emsp;&emsp;同理，麦当劳通过在中国30多年的运营，麦当劳三个汉字，已经能够在我们心中召唤出非常美好的情感了。突然改叫金拱门，丢掉了过去30多年的情感文化资产，甚至还是负分的。<br>&emsp;&emsp;阿里巴巴就是一个有文化资产的名字。念这个名字，就会想到天方夜谭的故事，一个快乐的青年，打开了宝库，成为了富翁。百度也是一个有文化资产的名字。它们都从长久的文化情感中借了势。</p><h1 id="什么是口碑"><a href="#什么是口碑" class="headerlink" title="什么是口碑"></a>什么是口碑</h1><p>&emsp;&emsp;简单说了名字，我们再花一点时间谈口碑，因为它们都是你需要研究的咒语。口碑是用户自发产生的，还是我们在做产品的时候就已经设置的呢？关于口碑，雷军和华与华创始人华杉各有一句话，都挺有意思的。<br>&emsp;&emsp;雷军说：“<strong>什么是口碑？口碑就是把事情做过头。</strong>”我和一个朋友说到雷军这句话时，朋友想起了买一瓶阿芙精油的体验。买了一瓶100块钱的精油，结果收到了7件赠品。他收到包裹第一感受是一小瓶精油还寄这么大一个盒子？拆了包裹，他一件一件往外拿赠品，拿到第三件赠品的时候，他已经忍不住说：“还有？”朋友说在淘宝买个东西有赠品，这事挺正常，买1件赠7件，这真是过头了。但真的是让人印象深刻，有一种忍不住要和人说说的感觉。<br>&emsp;&emsp;这就是口碑，这里有一个净推荐值的概念。满意与推荐是两个不同的概念。你做到100分，提供了与产品描述一致的体验，能够及时响应用户遇到的困难，完全符合用户预期。用户满意了，但是他会觉得这都是应该的、分内的、没什么可说的。用雷军的话，只有超预期把事做过头，用户才会有深刻印象，才会有口碑转化的动力，也就是要从满意变成推荐。<br>&emsp;&emsp;那口碑是什么呢？华与华创始人华杉说：“口碑叫口碑，不叫眼碑。”因为人们听说的东西，会远远大于见过的东西。所以，口号、口碑、听觉，成为了传达率的关键。<br>&emsp;&emsp;你的口碑的碑文是什么，就是大家提起你的时候，那句像刻在石头上一样的话，每个人说的都是同一句，比如“怕上火就喝王老吉”。同仁堂100年重复的同一句：“炮制虽繁必不敢省人工，品味虽贵必不敢减物力。”这才叫口碑。华杉认为“碑”本来是视觉的，口碑却成为一个符号，活在口耳之间。所以口碑一定是听觉文案，一定是一句口语，直截了当，脱口而出，不绕弯子。所以，很多产品为自己设计的slogan都是视觉文案，别人就无法口口相传。就像名字是给别人使用的一样，口碑也是替消费者设计一句他要说的话。<br>&emsp;&emsp;口碑就是你把那些事情做过头，然后别人要口口相传的时候会说的话。口碑是你要替消费者说一句他要说的话，然后让他说出来。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;第四模块用户体验告一段落，下面总结一下：</p><blockquote><p> 1．从甄别自己的感觉，理解他人感受开始。<br> 2．我们学习价值判断，用户研究，建设系统能力。一个产品是一个系统能力的输出结果。<br> 3．用户体验的要素有五个层次，就你的存在战略来规划积累自己的能力圈、资源，通过角色框架完成用户能够感知的服务。<br> 4．设计用户体验的峰值和终值，不断倾听，不断优化，设置用户激励系统。<br> 5．最后，给它一个名字，把它召唤出来，成为这个世界的一部分，与这个世界建立连接。</p></blockquote><p>&emsp;&emsp;到这里，怎么从无到有定义并做出一个产品就讲完了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;名字是一句咒语，好名字能召唤出人心底的感情。&lt;br&gt;雷军说，口碑就是要把事情做过头。&lt;br&gt;口碑，就是替消费者设计一句话，一句他们口口相传的时候要说的话。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="文化资产、名字" scheme="https://panxiang315.github.io/tags/%E6%96%87%E5%8C%96%E8%B5%84%E4%BA%A7%E3%80%81%E5%90%8D%E5%AD%97/"/>
    
  </entry>
  
  <entry>
    <title>上瘾机制：用户激励系统</title>
    <link href="https://panxiang315.github.io/cognitive/reprint/inspire-system/"/>
    <id>https://panxiang315.github.io/cognitive/reprint/inspire-system/</id>
    <published>2018-07-28T02:48:37.000Z</published>
    <updated>2018-07-28T03:15:22.453Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;对用户上瘾机制的设计，就是用产品激励用户。对用户的激励方式分为内在激励和外在激励，这两种激励需要交替进行。要点在于降低门槛，给用户成就感。</p><a id="more"></a><hr><p>&emsp;&emsp;在《来自星星的你》中，全智贤饰演的女主角千颂伊，回答记者为什么会有人喜欢自己，她说：“漂亮就行。”一时被奉为金句，成为所有卖口红、卖面膜的微商的重要依据。<br>&emsp;&emsp;产品的用户体验，视觉当然是感知层里非常重要的部分。我发现我在“黑”感知层，其实不是的，而是说除了感知层之外，其他许多工作也非常重要。比如，中国有4000个手机游戏团队，一年出1万款游戏，但是能挣钱的只有几十个而已。最后赢的并不一定是美术水平最高的那个，就好像我们最念念不忘的人，不一定是容颜最美的那个。<br>&emsp;&emsp;以我的观察，我发现最火的游戏是最懂得激励用户的游戏。你内心难以忘记的人，是那个最长时间激励过你，改变你人生轨迹的人。<br>&emsp;&emsp;进入本次课程的重点概念——用户激励。</p><h1 id="什么是激励"><a href="#什么是激励" class="headerlink" title="什么是激励"></a>什么是激励</h1><p>&emsp;&emsp;回到我们第一模块谈的生物性情绪，满足了就会感到愉悦。如果满足被阻隔，得不到满足就会难受、不爽、痛苦、不安。<br>&emsp;&emsp;所以怎么激励？很简单，就是完成预定动作，给他满足。并且让他清楚，完成预定动作，就能得到满足。这就是激励。海豚顶一下球，给一条鱼吃，就是激励。首先在游戏的体系内，它会拉动你的需求，进而给你满足，让你爽。比如，你玩俄罗斯方块，垒了好高，一直缺一个长条的，可以用来一下子消除四排。你内心的压力就会越来越强，会在内心一直喊：“来个长条、来个长条”。这时突然间，长条来了，一下消了四排，当即画面空旷，一串加分数字。内心觉得很满足、很爽。<br>&emsp;&emsp;你知道会有这种爽点，但是不确定出现在哪里。但是游戏也会给你确定性的激励。比如打超级玛丽，吃到一个蘑菇加一条命，伴随着熟悉的“叮”的一声，一个“+1”的符号飘起来，内心当即就很满足，这就是激励。<br>&emsp;&emsp;不确定的爽点与确定的爽点合在一起，就是用户的体验地图情绪曲线。<br>&emsp;&emsp;制作游戏能力的高低，其实就是对用户情绪曲线把握的能力。而游戏的设计，一个非常重要的部分，就是用户的激励机制。游戏是最顶级的社区，游戏之外的所有社区类产品，或需要用户活跃度的产品，都需要把用户激励机制作为非常重要的产品机制。如果你设计一个产品，而没有激励机制，那么产品是不完整的。</p><h1 id="怎么激励用户"><a href="#怎么激励用户" class="headerlink" title="怎么激励用户"></a>怎么激励用户</h1><p>&emsp;&emsp;怎么激励用户，怎么激励一个人，其实是一件需要花细腻心思的事。<br>&emsp;&emsp;李学凌说，游戏中打中一架飞机，视觉做得好的游戏，会给你个很炫的效果，例如击中的声音、火花效果、爆炸的声音、视觉、加分的声音等，所有的细节都让人爽。但如果资源不够，或许做不了那么多的效果，但打中一架飞机，会看到飞机消失了，并且有一个回馈的声音，接着分被加上了。这样一来，如果你的整体游戏激励机制够好，用户依然会喜欢玩。<br>&emsp;&emsp;游戏的动力，就是压力感突然被满足，压力释放的爽感、确定性的获得、激励的满足感合在一起，让一个人成瘾，停不下来。不过在游戏中，所有的资源都是虚拟的。只要系统平衡性做好，玩家只要完成动作，就会被激励，这是极其确定的事情。<br>&emsp;&emsp;现实生活，每完成一个动作，就要给他激励吗？举个例子，员工一项工作完成得很好，老板很高兴，特别做了激励，发100元红包。那么下次，这个员工又完成得不错，还特别给激励吗？那是不是如果一直做特别激励，突然不激励了，员工会不会非常失落？会的。举个运营的例子，一个健身App，一直为完成计划并上传的达人发一分到一块钱的小红包做激励。<br>&emsp;&emsp;人们健身不断感觉到自己体能和身材在改善，本身是有快感的。大家是为了这种内在激励而坚持健身，App发红包是激励的迭加。但是App自停止发红包开始，用户数据当即大幅下滑，用户研究表明，用户感觉被伤害了。其实，停止发红包，对健身本身的快感是没有影响的。发红包明明是做加法，为什么用户却觉得自己被伤害了呢？因为这伤害了用户预期，损害了他对确定性的感受。要知道人是非常依赖确定性的动物。<br>&emsp;&emsp;确定，就是依赖；不确定，就是伤害。一个确定性的丧失，不论大小，都是非常难受的。所以，所有的改版、新包装、重新装修，都是需要非常慎重的。</p><h1 id="内在激励与外在激励"><a href="#内在激励与外在激励" class="headerlink" title="内在激励与外在激励"></a>内在激励与外在激励</h1><p>&emsp;&emsp;刚才我们谈了一个词——内在激励。外在激励和内在激励，是两个心理学的名词。驱使人的行为发生改变的外部因素，比如获得类似奖金、名誉等奖励，这是外在激励。而驱使一个人内心获得饥渴感、满足感、愉悦感的内部因素，就是内在激励。<br>&emsp;&emsp;所以，当你要激励一个人的时候，要想想，对这件事真正起作用的是内在激励，还是外在激励。你应该重点依靠哪条线？重点设计哪条线？外在激励还是内在激励？内在激励，是让人能够找到感觉，持续深入，把事情做到位的方式。<br>&emsp;&emsp;腾讯的联合创始人张志东就专门讲过，腾讯一直非常小心地保持着让员工出于自我满足的愉悦感来做事情。为此腾讯做了大量的组织设置，来保障员工的自我感受。<br>&emsp;&emsp;外在激励，则是非常强有力的短期改变用户行为的工具。打车软件的补贴大战，最好地说明了这一点。所以你想清楚，你是要用外部激励，还是要内部激励来做你的激励体系。这个时候你就可以开始设计它，并且不断优化了。<br>&emsp;&emsp;接着就是设计并不断优化你的激励系统了，激励系统的两个要素是“受激励点”和“被激励能力”。如果你要为一个人或一群人完成某个动作，或者强化某个动作，设计激励系统。那么，首先要做的是测绘用户的受激励点，就是用户会在多少个点上被激励。比如游戏，用户激励的点位，就是用户的成就体系。<br>&emsp;&emsp;《王者荣耀》每次越塔强杀的感觉，每次拿到MVP的感觉，每次拿到超神的感觉，好不容易拿到个五杀什么感觉？那就是满满的成就感。勋章、小红花、奖状、奖杯、腰带，这些玩意实际上是成就象征，它们本身是虚拟物品，没有意义，但是它们代表的是人们历经千辛万苦，突破重重挑战后的成就感！<br>&emsp;&emsp;比如，我觉得Keep的成就体系还可以做得再好一点。因为练出马甲线，还是少数人可以实现的成就，而大量的人是没有成就的。这个过程中，人们如何在Keep里找到成就感，而不是中途崩溃，这是可以优化的。公司奖励员工也是如此，不能憋大招到年底再给某个员工发个大奖。受激励点少，最后一招再大，也很难发挥作用。<br>&emsp;&emsp;刚才说的都是外在激励。我想说说内在激励，谈一谈腾讯管理的内在激励方式。腾讯发奖金还是很大方的，这是外在激励。在腾讯公司，公司的日常氛围中，运营出的产品至上、用户体验至上的企业文化，腾讯上至高管下至员工的QQ空间、朋友圈，大家在分享的内容都是各种产品的优化细节。例如，这个按钮从闪一闪改成摇一摇，再变成摇摆15度，这样看起来会比较Q。通过一点点的优化细节，所有人都在讨论，这就是企业文化，可以影响一个人的内在激励。你发表了一个你优化产品的小细节，一堆朋友、领导都来给你点赞。虽然这个时候没有奖金，但会形成你内心的满足感。只要你发产品优化的信息，就会有人给你大规模点赞，这也是一种确定性的满足，会让你把这个动作强化。你想在腾讯内部刷存在感，你就得在QQ空间、朋友圈里发产品如何优化的，进而就会让一个在腾讯工作的产品经理，天天琢磨怎么优化。<br>&emsp;&emsp;一个人的内在激励，不单是自己原生，还来自外部环境的激发、挤压和认同。激励系统的第二个设计——定义获得并努力降低门槛。比如，你要激励你家小孩去骑自行车，但是如果他不会骑自行车，或者他没有自行车的话，再多的激励也无法被转化为行动。激励与对方的能力不匹配的事情，就是无效激励。<br>&emsp;&emsp;这种事还是很多的。新创业公司总是发展很快，需要不断有人去做新的事情。这时要非常小心，如果员工能力不匹配，而自己的意愿也不强，老板却一厢情愿地觉得给了老员工一个机会，要让他突破自己，让他试试，这其实是给自己挖坑。因为赶鸭子上架这件事，做不得。</p><h1 id="《王者荣耀》如何降低激励门槛"><a href="#《王者荣耀》如何降低激励门槛" class="headerlink" title="《王者荣耀》如何降低激励门槛"></a>《王者荣耀》如何降低激励门槛</h1><p>&emsp;&emsp;关于降低激励门槛，《王者荣耀》依然是个好例子。</p><blockquote><p> 1．两根手指就可以玩，一共就三个技能键。操作简单易上手，基本上是《王者荣耀》获得最多的评论了。对于玩过DOTA、LOL等塔防类游戏的玩家，玩《王者荣耀》会很轻松。<br> 2．此外，《王者荣耀》对时间的要求低，6分钟就可以打一局。坐地铁、上下班路上、午休吃饭、上卫生间等，随时随地开黑。<br> 3．同时对设备的要求不高，不管你是iphone还是安卓，都可以在同一个大区一起玩。<br> 4．每日任务。你不知道该怎么玩？没关系，每天上来做任务就行了，小到“每日登录”，大到“击败对方10个英雄并取得胜利”，不要让用户思考，用户不需要想他需要干什么，只需要每天打开把任务发给他。只要完成任务就送经验、活跃度、送某英雄的体验等一堆东西。</p></blockquote><p>&emsp;&emsp;这一系列动作是什么呢？就是降低门槛，降低门槛，再降低门槛。降低动作门槛，设备门槛，思考门槛，降低时间门槛。<br>&emsp;&emsp;这意味着什么呢？首先，大量的女孩开始玩了。《王者荣耀》女性玩家占比是多少？第三方的统计数据——54％。《王者荣耀》有两亿用户，超过一亿是妹子。有一亿妹子在围观，对男性玩家就是激励。我们刚才讲了，用户内在激励，除了自己内心原生的，更多来自于外部环境的挤压、激发和认同。《王者荣耀》因为大量女用户进入、围观、激发，让男用户之间的挤压更强烈，用户的内在激励变得更强。<br>&emsp;&emsp;所以如果你设计的激励系统就靠你自己发奖金，这种单点、单向的激励能力是极其有限的。比如腾讯这家公司，比如《王者荣耀》这个游戏，更强的激励是营造了一个场，让用户彼此挤压，彼此激励。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;首先，人会上瘾，是对确定性满足感的依赖。<br>&emsp;&emsp;其实，上瘾机制的设计，就是对用户激励机制的设计。激励用户，你需要考虑如何用外在激励和内在激励来交替地持续激励他。设计你的激励系统，设置一系列用户的受激励点给用户成就感，定义他的获得能力，并降低门槛。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;对用户上瘾机制的设计，就是用产品激励用户。对用户的激励方式分为内在激励和外在激励，这两种激励需要交替进行。要点在于降低门槛，给用户成就感。&lt;/p&gt;
    
    </summary>
    
      <category term="cognitive" scheme="https://panxiang315.github.io/categories/cognitive/"/>
    
      <category term="reprint" scheme="https://panxiang315.github.io/categories/cognitive/reprint/"/>
    
    
      <category term="激励" scheme="https://panxiang315.github.io/tags/%E6%BF%80%E5%8A%B1/"/>
    
      <category term="上瘾" scheme="https://panxiang315.github.io/tags/%E4%B8%8A%E7%98%BE/"/>
    
  </entry>
  
</feed>
